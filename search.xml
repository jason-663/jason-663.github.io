<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>《HCNA网络技术实验指南》实验</title>
      <link href="/2022/04/15/hcnalab/"/>
      <url>/2022/04/15/hcnalab/</url>
      
        <content type="html"><![CDATA[<h2 id="第一章-ensp与vrp的基础操作"><a href="#第一章-ensp与vrp的基础操作" class="headerlink" title="第一章 ensp与vrp的基础操作"></a>第一章 ensp与vrp的基础操作</h2><h3 id="内容描述"><a href="#内容描述" class="headerlink" title="内容描述"></a>内容描述</h3><h3 id="实例详情"><a href="#实例详情" class="headerlink" title="实例详情"></a>实例详情</h3><p>实验说明：配置telnet登录，使得可以通过ar1上的telnet进行远程访问<br>拓扑图：<img src="../../../../medias/network/1/1.1.png" alt="拓扑图"><br>编址：</p><table><thead><tr><th>设备</th><th>接口</th><th>IP地址</th><th>子网掩码</th><th>默认网关</th></tr></thead><tbody><tr><td>ar1</td><td>g0/0/0</td><td>10.1.1.254</td><td>24</td><td>-</td></tr><tr><td>ar2</td><td>g0/0/0</td><td>10.1.1.1</td><td>24</td><td>10.1.1.254</td></tr><tr><td>ar3</td><td>g0/0/0</td><td>10.1.1.20</td><td>24</td><td>10.1.1.254</td></tr></tbody></table><p>配置过程：<br>1.先将计划的IP地址分配到相应的设备和对应端口上，完成之后测试联通性</p><pre class=" language-markdown"><code class="language-markdown"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Huawei</span><span class="token punctuation">></span></span>Apr 13 2022 09:54:12-08:00 Huawei %%01IFPDT/4/IF<span class="token italic"><span class="token punctuation">_</span>STATE(l)[0]:Interface GigabitEthernet0/0/0 has turned into UP state.&lt;Huawei>sysEnter system view, return user view with Ctrl+Z.[Huawei]int g0/0/0[Huawei-GigabitEthernet0/0/0]ip add 10.1.1.254 24Apr 13 2022 09:55:10-08:00 Huawei %%01IFNET/4/LINK<span class="token punctuation">_</span></span>STATE(l)[1]:The line protocol IP on the interface GigabitEthernet0/0/0 has entered the UP state. [Huawei-GigabitEthernet0/0/0]</code></pre><p>ar2与ar3配置命令相似<br>2.配置telnet登录验证</p><pre class=" language-markdown"><code class="language-markdown"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Huawei</span><span class="token punctuation">></span></span>sysEnter system view, return user view with Ctrl+Z.[Huawei]user-inter    [Huawei]user-interface vty 0 4[Huawei-ui-vty0-4]aut    [Huawei-ui-vty0-4]authentication-mode pass    [Huawei-ui-vty0-4]authentication-mode passwordPlease configure the login password (maximum length 16):huawei[Huawei-ui-vty0-4]q[Huawei]</code></pre><p>这时通过其他两个任何一个路由器输入<code>telnet 10.1.1.254</code>，并输入密码，即可进入ar1的做界面<br>如果分不清到底是不是ar1的路由器，可以先将ar1路由器内的名称改为ar1，先进入配置视图（[Huawei]）然后输入<code>sysname 名称</code>。</p><h2 id="第二章-交换机基础配置"><a href="#第二章-交换机基础配置" class="headerlink" title="第二章 交换机基础配置"></a>第二章 交换机基础配置</h2><h3 id="内容描述-1"><a href="#内容描述-1" class="headerlink" title="内容描述"></a>内容描述</h3><h3 id="实例详情-1"><a href="#实例详情-1" class="headerlink" title="实例详情"></a>实例详情</h3><p>实验说明：三台交换机，1和2是接入，3是汇聚，交换机之间使用全双工，并配置接口速率<br>拓扑图：<img src="../../../../medias/network/2/img/2.1.png"><br>编址：</p><table><thead><tr><th>设备</th><th>接口</th><th>IP地址</th><th>子网掩码</th><th>默认网关</th></tr></thead><tbody><tr><td>pc1</td><td>e0/0/1</td><td>10.1.1.1</td><td>24</td><td>-</td></tr><tr><td>pc2</td><td>e0/0/1</td><td>10.1.1.2</td><td>24</td><td>-</td></tr></tbody></table><p>配置过程：<br>先为PC配置好IP地址和子网掩码，并在其中一台pc机ping另一台pc机的IP地址，检查连通性<br>接下来配置交换机<br>1.配置交换机双工模式<br>配置前，由于交换机的自协商协议默认为开启状态，需先将该协议关闭，在进行配置</p><pre class=" language-markdown"><code class="language-markdown"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Huawei</span><span class="token punctuation">></span></span>sysEnter system view, return user view with Ctrl+Z.[Huawei]int g0/0/1[Huawei-GigabitEthernet0/0/1]undo ne[Huawei-GigabitEthernet0/0/1]undo negotiation au[Huawei-GigabitEthernet0/0/1]undo negotiation auto [Huawei-GigabitEthernet0/0/1]dupl[Huawei-GigabitEthernet0/0/1]duplex Apr 13 2022 11:11:22-08:00 Huawei DS/4/DATASYNC<span class="token italic"><span class="token punctuation">_</span>CFGCHANGE:OID 1.3.6.1.4.1.2011.5.25.191.3.1 configurations have been changed. The current change number is 4, the change loop count is 0, and the maximum number of records is 4095.fu[Huawei-GigabitEthernet0/0/1]duplex full [Huawei-GigabitEthernet0/0/1]Apr 13 2022 11:11:32-08:00 Huawei DS/4/DATASYNC<span class="token punctuation">_</span></span>CFGCHANGE:OID 1.3.6.1.4.1.2011.5.25.191.3.1 configurations have been changed. The current change number is 5, the change loop count is 0, and the maximum number of records is 4095.[Huawei-GigabitEthernet0/0/1]</code></pre><p>上下的三个端口分别配置此命令，至此，交换机间的工作模式全部切换为了全双工。<br>2.配置接口速率<br>由于用户（PC）较少，所以将GE口配置为100mbit/s，e口配置为10Mbit/s；配置前，由于交换机的自协商协议默认为开启状态，需先将该协议关闭，在进行配置</p><pre class=" language-markdown"><code class="language-markdown"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Huawei</span><span class="token punctuation">></span></span>sysEnter system view, return user view with Ctrl+Z.[Huawei]sys s1[s1]int Apr 13 2022 11:22:42-08:00 s1 DS/4/DATASYNC<span class="token italic"><span class="token punctuation">_</span>CFGCHANGE:OID 1.3.6.1.4.1.2011.5.25.191.3.1 configurations have been changed. The current change number is 6, the change loop count is 0, and the maximum number of records is 4095.e0/0/1[s1-Ethernet0/0/1]un[s1-Ethernet0/0/1]undo ne[s1-Ethernet0/0/1]undo negotiation au[s1-Ethernet0/0/1]undo negotiation auto [s1-Ethernet0/0/1]sp[s1-Ethernet0/0/1]speed Apr 13 2022 11:23:02-08:00 s1 DS/4/DATASYNC<span class="token punctuation">_</span></span>CFGCHANGE:OID 1.3.6.1.4.1.2011.5.25.191.3.1 configurations have been changed. The current change number is 7, the change loop count is 0, and the maximum number of records is 4095.10[s1-Ethernet0/0/1]Apr 13 2022 11:23:12-08:00 s1 DS/4/DATASYNC_CFGCHANGE:OID 1.3.6.1.4.1.2011.5.25.191.3.1 configurations have been changed. The current change number is 8, the change loop count is 0, and the maximum number of records is 4095.[s1-Ethernet0/0/1]int g0/0/1[s1-GigabitEthernet0/0/1]  </code></pre><p>注意每一个端口都要单独关掉</p><h4 id="二、arp与proxy-arp"><a href="#二、arp与proxy-arp" class="headerlink" title="二、arp与proxy arp"></a>二、arp与proxy arp</h4><p>实验说明：r1，s1，s2，配置静态arp且在路由器上配置arp代理<br>拓扑图：<br>编址：</p><table><thead><tr><th>设备</th><th>接口</th><th>IP地址</th><th>子网掩码</th><th>默认网关</th></tr></thead><tbody><tr><td>r1</td><td>g0/0/1</td><td>10.1.1.254</td><td>24</td><td>-</td></tr><tr><td>r1</td><td>g0/0/2</td><td>10.2.254</td><td>24</td><td>-</td></tr><tr><td>pc1</td><td>e0/0/1</td><td>10.1.1.1</td><td>16</td><td>-</td></tr><tr><td>pc2</td><td>e0/0/1</td><td>10.1.1.2</td><td>16</td><td>-</td></tr><tr><td>pc3</td><td>e0/0/1</td><td>10.1.2.3</td><td>16</td><td>-</td></tr></tbody></table><p>配置过程：<br>按照编址表将IP地址配置到各个位置，<br>配置静态arp</p><pre class=" language-markdown"><code class="language-markdown">[r1]arp static 10.1.1.1 5489-983D-766A   [r1]arp static 10.1.1.2 5489-9857-45FC   [r1]arp static 10.1.2.3 5489-9812-085E   [r1]</code></pre><p>配置proxy arp<br>华为交换机默认代理arp是关闭状态，上面的两个网段是不能相互访问的，需要将对应网段接口的代理arp打开</p><pre class=" language-markdown"><code class="language-markdown">[r1]int g0/0/1[r1-GigabitEthernet0/0/1]arp-pr[r1-GigabitEthernet0/0/1]arp-proxy en[r1-GigabitEthernet0/0/1]arp-proxy enable [r1-GigabitEthernet0/0/1]int g0/0/2[r1-GigabitEthernet0/0/2]arp-pr[r1-GigabitEthernet0/0/2]arp-proxy [r1-GigabitEthernet0/0/2]arp-proxy en[r1-GigabitEthernet0/0/2]</code></pre><p>这样10.1.1.0网段就能和10.1.2.0网段通信了</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 网络 </tag>
            
            <tag> 运维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《HCNA网络技术实验指南》梳理</title>
      <link href="/2022/03/23/hcna/"/>
      <url>/2022/03/23/hcna/</url>
      
        <content type="html"><![CDATA[<p>  本文章将以《HCNA网络技术实验指南》的章节顺序，针对本书的核心内容进行整理，并舍弃不必要的讲解和内容，各章节的重复内容也会删减掉，请灵活查看。<br>  本书lab内容请到<a href="http://localhost:4000/2022/03/23/HCNA%20LAB/">《HCNA网络技术实验指南》电子版</a>查看。</p><h2 id="第一章-eNSP及VRP基础操作"><a href="#第一章-eNSP及VRP基础操作" class="headerlink" title="第一章 eNSP及VRP基础操作"></a>第一章 eNSP及VRP基础操作</h2><h3 id="了解部分"><a href="#了解部分" class="headerlink" title="了解部分"></a>了解部分</h3><p>本章介绍了ensp、华为vrp平台的基本操作方法，ip配置、telnet登陆、stelnet（ssh）登陆、ftp等基本配置和常用命令；本文暂不整理ssh和ftp两项配置。</p><h4 id="本章基本认知"><a href="#本章基本认知" class="headerlink" title="本章基本认知"></a>本章基本认知</h4><p>操作视图：操作视图分为用户视图，系统视图，接口视图等（后续补充）。<br>用户视图：&lt;Huawei&gt;<br>系统视图：[Huawei]<br>接口视图：[Huawei-GigabitEthernet0/0/0]<br>TAB键：自动联想补全当前代码<br>?：显示该视图下或该段命令后或该段字母开头的后面可以跟哪些命令以及对应命令的简单描述</p><h3 id="命令部分"><a href="#命令部分" class="headerlink" title="命令部分"></a>命令部分</h3><p>[undo] shutdown：[开启]关闭<br>display version：显示系统软件版本及硬件信息；在用户视图下输入<br>简写：dis ver<br>system-viem：切换到系统视图<br>简写：sys<br>quit：退回到上一个视图，可使用组合键Ctrl+Z。<br>简写：q<br>interface &lt;端口号&gt;：跳转到对应端口的接口视图下<br>ip address &lt;IP地址&gt; &lt;子网掩码&gt;：为当前接口配置IP地址和子网掩码，子网掩码可以是完整的，如255.255.255.0，也可以用24来代替，24为完整掩码的连续二进制1的个数<br>简写：ip add &lt;IP地址&gt; &lt;子网掩码&gt;<br>return：直接退回到用户视图<br>简写：<br>display hotkey：查看已定义、未定义和系统保留的快捷键情况<br>简写：<br>sysname &lt;英文字母&gt;：修改当前设备名称<br>clock datetime：设置当前设备的时间和日期<br>clock timezone：设置当前设备所在时区</p><pre class=" language-md"><code class="language-md">\<R1>clock datetime 12:00:00 2022-03-23\<R1>clock timezone BJ add 08:00:00</code></pre><p><code>因为系统默认时间为伦敦时区，而北京处于+8小时时区，时间偏移量增加了8，因此，在配置时需加上偏移量8，才能得到预期的北京时区</code><br>header login “”：设置登陆时提示文本<br>header shell “”：设置登录成功后的提示文本<br>display current-configuration：查看当前设备配置信息<br>display interface &lt;端口号&gt;：查看该端口的状态信息<br>save：保存当前配置，会提示是否确认，确认输入y回车，不确认输入n回车<br>display ip interface brief：查看接口与ip相关摘要信息，其中：<br>interface为端口号，ip address/mask为对应端口的ip地址和子网掩码，physical为对应接口物理状态，protocol为该接口协议状态<br>display ip routing-table：查看ipv4路由表<br>ping &lt;ip地址&gt;：测试连通性<br>user-interface vty 0 4：<br>authentication-mode password huawei：<br>display users：<br>set authentication password cipher huawei：<br>user privilege level 1：<br>aaa：<br>local-user admin password cipher hello privilege level 3：<br>local-user admin service-type telnet：<br>authentication-mode aaa：<br>ssh登陆配置P31~34<br>FTP34~39</p><h2 id="第二章-交换机基础配置"><a href="#第二章-交换机基础配置" class="headerlink" title="第二章 交换机基础配置"></a>第二章 交换机基础配置</h2><p>本章介绍了华为交换机的基本配置</p><h3 id="了解部分-1"><a href="#了解部分-1" class="headerlink" title="了解部分"></a>了解部分</h3><p>cmd上：arp -a：查看主机arp表</p><h3 id="命令部分-1"><a href="#命令部分-1" class="headerlink" title="命令部分"></a>命令部分</h3><p>auto duplex full：自动协商全双工模式<br>undo negotiation auto：关闭自动协商功能<br>auto speed 100：自动协商速率100Mbit/s<br>display arp all：查看arp表<br>arp-proxy enable：开启arp代理</p><h2 id="第三章-vlan（虚拟局域网）"><a href="#第三章-vlan（虚拟局域网）" class="headerlink" title="第三章 vlan（虚拟局域网）"></a>第三章 vlan（虚拟局域网）</h2><p>本章介绍了vlan中的access接口、trunk接口、hybird接口，通过单臂路由和三层交换实例讲解了vlan的更深层的使用</p><h3 id="了解部分-2"><a href="#了解部分-2" class="headerlink" title="了解部分"></a>了解部分</h3><p>access类型<br>trunk类型</p><h3 id="命令部分-2"><a href="#命令部分-2" class="headerlink" title="命令部分"></a>命令部分</h3><p>vlan &lt;数字&gt;：创建vlan，id范围为0~4095，通常取1~4094，0和4095为保留值<br>vlan batch &lt;数字1&gt; &lt;数字2&gt;：同时创建两个vlan<br>display vlan：查看vlan信息<br>port link-type access/trunk：配置该端口为access/trunk类型，<br>port default vlan &lt;数字&gt;：将该端口划分到指定vlan中<br>display vlan summary：查看所有vlan的简要信息<br>display port vlan：查看vlan和接口配置信息<br>port trunk allow-pass vlan all:<br>undo port default valn：恢复接口默认vlan<br>port link-type hybrid：修改接口类型为hybrid,华为交换机所有接口默认都是hybrid类型<br>port hybrid untagged/tagged vlan &lt;数字1&gt; &lt;数字2&gt; … &lt;数字n&gt;：转发指定vlan帧时，剥离/添加指定vlan的tag，以untagged/tagged方式发送到PC<br>port hybrid pvid vlan &lt;数字&gt;：设置hybrid类型接口的默认vlan id<br>interface &lt;端口号.n&gt;：<br>dot1q termination vid &lt;数字&gt;：配置子接口<br>arp broadcast enable：<br>interface vlanif &lt;数字&gt;：创建vlanif接口</p><h2 id="第四章-生成树"><a href="#第四章-生成树" class="headerlink" title="第四章 生成树"></a>第四章 生成树</h2><p>本章介绍了stp、rstp和mstp</p><h3 id="了解部分-3"><a href="#了解部分-3" class="headerlink" title="了解部分"></a>了解部分</h3><p>定时器需特别注意</p><h3 id="命令部分-3"><a href="#命令部分-3" class="headerlink" title="命令部分"></a>命令部分</h3><p>stp enable/disable：启用/关闭stp（华为交换机默认启动mstp，除了这两个还有rstp），执行<br>stp mode stp：修改为stp模式<br>display stp：查看生成树协议<br>display stp brief：查看摘要信息<br>stp priority &lt;数字&gt;：更改优先级，默认32768<br>stp root primary：配置主根交换机<br>undo stp priority：删除此设备的优先级配置<br>stp root secondary：配置备份根交换机<br>stp cost 2000：配置接口的代价值为2000<br>undo stp root：删除……<br>sp timer forward-delay 2000：<br>stp bridge-diameter &lt;数字&gt;：配置网络直径<br>stp region-configuration：进入mst域视图<br>region-name &lt;name&gt;：配置mst域名<br>revision-level &lt;number&gt;：配置mstp级别<br>instance &lt;number&gt; vlan &lt;vlan id&gt;：指定vlan映射到指定msti上<br>active region-configuration：激活mst域配置<br>display stp region-configuration：查看交换机当前生效的mst域信息<br>display stp instance &lt;数字&gt; brief：查看默认实例中对应数字的生成树状态和统计摘要信息</p><h2 id="第五章-其他交换技术"><a href="#第五章-其他交换技术" class="headerlink" title="第五章 其他交换技术"></a>第五章 其他交换技术</h2><p>本章介绍了gvrp、smart-link、monitor-link、eth-trunk</p><h3 id="了解部分-4"><a href="#了解部分-4" class="headerlink" title="了解部分"></a>了解部分</h3><p>eth-trunk：手工负载分担、静态lacp</p><h3 id="命令部分-4"><a href="#命令部分-4" class="headerlink" title="命令部分"></a>命令部分</h3><p>gvrp：开启gvrp功能，可在系统视图和接口视图下输入<br>gvrp registration fixed/normal/forbidden：修改gvrp注册模式为fixed/normal/forbidden，默认为normal<br>smart-link group &lt;数字&gt;：<br>smart-link enable：<br>port &lt;端口号&gt; master/slave：配置主接口/备份接口<br>display smart-link group &lt;数字&gt;：查看主备份状态<br>restore enable：开启回切功能，默认60秒<br>timer wtr 30：更改回切时间为30秒<br>port &lt;端口号&gt; uplink/downlink：配置上下行接口<br>timer recover-time 10：<br>interface eth-trunk &lt;数字&gt;：创建eth-trunk接口<br>mode manual laod-balance：指定eth-trunk接口为手工负载分担模式<br>eth-trunk &lt;数字&gt;：将端口划分到该eth-trunk接口下<br>display eth-trunk &lt;数字&gt;：查看eth-trunk接口状态<br>mode lacp-static：指定eth-trunk接口为静态lacp模式<br>lacp priority &lt;数字&gt;：配置lacp的优先级.默认32768,值越小优先级越高</p><h2 id="第六章-静态路由"><a href="#第六章-静态路由" class="headerlink" title="第六章 静态路由"></a>第六章 静态路由</h2><p>本章介绍了静态路由和默认路由，并给出了浮动静态路由和负载均衡的配置实例<br>###<br>负载均衡</p><h3 id="命令部分-5"><a href="#命令部分-5" class="headerlink" title="命令部分"></a>命令部分</h3><p>display ip routing-table:查看ip路由表<br>[undo] ip route-static ip地址 子网掩码 下一跳ip地址/出端口号：[删除]配置静态路由<br>ip route-static 0.0.0.0 0.0.0.0 下一跳ip地址/出端口号：配置默认路由<br>ip route-static ip地址 子网掩码 下一跳ip地址/出端口号 preference 100：在配置静态路由基础上，修改优先级为100（默认60）<br>display IP routing-table protocol static：仅查看静态路由信息<br>tracert ip：查看此设备经过ip的路径</p><h2 id="第七章-RIP"><a href="#第七章-RIP" class="headerlink" title="第七章 RIP"></a>第七章 RIP</h2><p>本章主要掌握rip，并其给出了包括基本配置，认证，汇总，版本兼容，故障排除等多方面特性的配置实例</p><h3 id="了解部分-5"><a href="#了解部分-5" class="headerlink" title="了解部分"></a>了解部分</h3><p>rip：<br>ripv2：<br>rip路由协议及优先级：<br>版本兼容<br>定时器：<br>抑制接口单播更新<br>不连续子网<br>水平分割触发更新<br>rip路由附加度量值<br>故障排查<br>路由引入</p><h3 id="命令部分-6"><a href="#命令部分-6" class="headerlink" title="命令部分"></a>命令部分</h3><p>rip：开启并进入日批进程<br>network ip网段：指定网段给rip<br>debugging rip 1：<br>terminal debugging<br>terminal monitor：<br>undo debugging rip 1<br>undo debug all<br>version 2：启用rip 2版本<br>display default-parameter rip：查看rip默认配置信息<br>summary always：<br>rip summary-address IP地址 子网掩码：手动汇总<br>rip version 2 broadcast：<br>rip version 2 mutlicast：<br>display rip 1 database：<br>timers rip &lt;更新报文时间间隔&gt; &lt;超时计时器时间间隔&gt; &lt;垃圾收集计时器的超时时间间隔&gt;：改变几个定时器的时间间隔<br>preference 90：更改优先级为90<br>silent-interface 端口号：配置成为抑制端口<br>peer IP地址：单播<br>undo rip output/input 端口号：禁止/允许接口发送rip报文<br>ip add ip地址 子网掩码 sub：<br>undo rip split-horizon：关闭水平分割<br>rip poison-reverse：开启毒性逆转功能<br>rip metricin 2：设置接收发送来的路由条目时度量值加2<br>rip metricout 2：设置发送路由条目时度量值加2</p><h2 id="第八章-OSPF"><a href="#第八章-OSPF" class="headerlink" title="第八章 OSPF"></a>第八章 OSPF</h2><p>本章以ospf为主，给出了单区域配置，多区域配置，认证，被动接口等配置实例</p><h3 id="了解部分-6"><a href="#了解部分-6" class="headerlink" title="了解部分"></a>了解部分</h3><p>ospf</p><h3 id="命令部分-7"><a href="#命令部分-7" class="headerlink" title="命令部分"></a>命令部分</h3><p>ospf 1：创建ospf进程并进入，不写数字默认进程号是1<br>area 0：创建区域并进入其视图；0为骨干区域<br>network ip网段 反掩码：宣告接口和接口所属区域<br>display ospf peer：查看ospf邻居状态<br>display ip routing-table protocol ospf：查看ospf路由表<br>display ospf lsdb：查看ospf链路状态数据库信息<br>authentication-mode simple plain &lt;口令&gt;：配置该区域认证模式为simple（简单验证），配置口令查看模式为plain（明文）和口令；省略plain，在dis this时会以加密的形式展示<br>authentication-mode md5 1 &lt;口令&gt;：配置该区域认证模式为md5认证，验证字标识符为1，并配置口令；同区域上配置md5验证时口令和字标识符必须一致<br>ospf authentication-mode simple plain &lt;口令&gt;：配置链路认证，在接口视图下配置<br>silent-interface &lt;端口号&gt;：禁止接口收发ospf报文；在ospf进程中配置<br>display router-id：查看该设备上的route id；未配置时是0.0.0.0<br>router-id &lt;ip地址&gt;：配置route id；手动更改完后，需重启ospf进程或者保存配置重启路由器才能生效<br>reset ospf process：重启ospf进程<br>ospf network-type p2mp：配置ospf网络类型为点到多点；接口视图下配置<br>preference &lt;数字&gt;：配置ospf协议优先级；默认为10，rip为100，值越小优先级越高<br>ospf cost &lt;数字&gt;：配置ospf开销值；接口视图下<br>ospf timer hello/dead &lt;数字&gt;：配置计时器/失效时间；计时器默认是hello时间的4倍<br>import-route rip &lt;数字&gt;：引入rip路由；在ospf视图下<br>import-route ospf &lt;数字&gt;：引入ospf路由；在rip视图下<br>import-route ospf &lt;数字&gt; cost &lt;数字&gt;：手工配置ospf的开销值；默认为1<br>default-route originate：发布默认路由；在rip下<br>default-router-advertise always：发布默认路由；在ospf下</p><h2 id="第九章-VRRP"><a href="#第九章-VRRP" class="headerlink" title="第九章 VRRP"></a>第九章 VRRP</h2><p>本章介绍了vrrp的基本配置，多备份组，跟踪接口及认证的配置实例</p><h3 id="了解部分-7"><a href="#了解部分-7" class="headerlink" title="了解部分"></a>了解部分</h3><p>vrrp</p><h3 id="命令部分-8"><a href="#命令部分-8" class="headerlink" title="命令部分"></a>命令部分</h3><p>vrrp vrid 1 virtual-ip ip地址：创建vrrp备份组并配置虚拟ip，虚拟ip必须和当前接口在一个网段内<br>vrrp vrid 1 priority &lt;1~254&gt;：配置优先级，默认100，范围0~255，0为系统保留，255为IP地址拥有者使用<br>display vrrp：查看vrrp信息<br>display vrrp brief/interface：查看vrrp工作状态<br>track interface &lt;端口号&gt; reduced 50：配置监视接口，当此端口断掉后，裁减优先级50</p><h2 id="第十章-基础过滤工具（ACL）"><a href="#第十章-基础过滤工具（ACL）" class="headerlink" title="第十章 基础过滤工具（ACL）"></a>第十章 基础过滤工具（ACL）</h2><p>本章介绍了常用的过滤工具，基本acl，高级acl，前缀列表</p><h3 id="了解部分-8"><a href="#了解部分-8" class="headerlink" title="了解部分"></a>了解部分</h3><p>基本acl，高级acl，前缀列表</p><h3 id="命令部分-9"><a href="#命令部分-9" class="headerlink" title="命令部分"></a>命令部分</h3><p>acl 2000：创建acl，编号为2000；基本访问控制列表编号范围2000~2999<br>rule [指定id] permit/deny soure &lt;源IP地址&gt; &lt;反掩码&gt;[any]：配置acl允许/禁止通过规则，any代表所有；指定id可省，若省略，每次创建规则时会以当前已有的最大指定id进行步长为5的累加，步长可修改<br>display acl all：查看所有访问控制列表<br>rule [指定id] permit/deny  ip soure &lt;源IP地址&gt; &lt;反掩码&gt; destination &lt;目的IP&gt; &lt;反掩码&gt;：配置acl允许/禁止通过规则，ip位为协议类型，允许/禁止从源地址来，到目的地址的数据包通过<br>filter-policy 2000 import：配置过滤策略，该策略通过调用之前配置好的acl来达到过滤路由的目的<br>ip ip-prefix deny &lt;网段&gt; greater-equal 25 less-equal 25：过滤指定网段的路由<br>可以简写成<br>ip ip-prefix deny &lt;网段&gt; 25<br>ip ip-prefix permit &lt;网段&gt; 0 less-equal 32:放行所有其他路由，为了防止配置禁止通过路由时会有隐性的拒绝所有路由的规则，将允许其他路由通过的规则进行显性声明<br>filter-policy ip-perfix 1 import：将配置好的前缀列表应用到过滤策略下<br>（未完待续……）</p><!-- <strong>更多内容：</strong>  - ~[《HCNA网络技术实验指南》实验整理](http://localhost:4000/2022/03/23/HCNA%20LAB/)~- [《HCNA网络技术实验指南》电子版](http://localhost:4000/2022/03/23/HCNA%20LAB/) -->]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 网络 </tag>
            
            <tag> 运维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML 教程</title>
      <link href="/2022/03/23/html/"/>
      <url>/2022/03/23/html/</url>
      
        <content type="html"><![CDATA[<h1 id="html"><a href="#html" class="headerlink" title="html"></a>html</h1><h2 id="固定标签的说明"><a href="#固定标签的说明" class="headerlink" title="固定标签的说明"></a>固定标签的说明</h2><p><code>&lt;!DOCTYPE&gt;</code>声明文档类型，本省不属于html，值有html（H5）xhtml（xml）等；该标签位置固定，写法固定，一般在该文档的第一行开头，或者必须在<code>&lt;html&gt;</code>标签之前<br><code>&lt;lang='en'&gt;</code>声明当前文档的语言，默认为en（英语），其他值有zh-CN(中文)，fr（法文）等；但不影响浏览器中的显示；作用为提醒浏览器（比如chrome中点击翻译功能显示的默认值，有时是英文，有时是发文）<br><code>charset="UTF-8"</code>字符集，默认是utf-8,除了这个还有很多，比如GB2312等；utf-8满足了各个国家的字符编码格式，以便于乱码的情况出现  </p><h2 id="常用标签"><a href="#常用标签" class="headerlink" title="常用标签"></a>常用标签</h2><h3 id="标题标签-lt-h1-gt-lt-h6-gt"><a href="#标题标签-lt-h1-gt-lt-h6-gt" class="headerlink" title="标题标签 <h1>~<h6>"></a>标题标签 &lt;h1&gt;~&lt;h6&gt;</h3><p>一共有个，从大到小h1到h6，为双标签,独占一行</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>标题1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>标题2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">></span></span>标题3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">></span></span>标题4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h5</span><span class="token punctuation">></span></span>标题5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h5</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h6</span><span class="token punctuation">></span></span>标题6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h6</span><span class="token punctuation">></span></span></code></pre><h3 id="段落标签-lt-p-gt-、换行标签"><a href="#段落标签-lt-p-gt-、换行标签" class="headerlink" title="段落标签<p>、换行标签"></a>段落标签&lt;p&gt;、换行标签<br></h3><p>&lt;p&gt;将文字分段,双标签；会根据浏览器的大小自动换行；段落与段落之间会有段间距&lt;br/&gt;会强制产生换行；单标签；只换行，不起到换段落的作用</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>balabalabalabalabala<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>balabalabalabalabala<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>balabalab<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span>alabalabala<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>bala<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span>balabal<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span>abalabala<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span></code></pre><h3 id="文本格式化标签（加粗，斜体，下滑线，删除线）"><a href="#文本格式化标签（加粗，斜体，下滑线，删除线）" class="headerlink" title="文本格式化标签（加粗，斜体，下滑线，删除线）"></a>文本格式化标签（加粗，斜体，下滑线，删除线）</h3><p>加粗：*&lt;strong&gt;或&lt;b&gt;<br>斜体：*&lt;em&gt;或&lt;i&gt;<br>下划线：*&lt;ins&gt;或&lt;u&gt;<br>删除线：*&lt;del&gt;或&lt;s&gt;<br><code>*为推荐使用标签，语义更强烈</code></p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>strong</span><span class="token punctuation">></span></span>strong加粗<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>strong</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">></span></span>b加粗<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>em</span><span class="token punctuation">></span></span>em斜体<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>em</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span><span class="token punctuation">></span></span>i斜体<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ins</span><span class="token punctuation">></span></span>ins下划线<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ins</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>u</span><span class="token punctuation">></span></span>u下划线<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>u</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>del</span><span class="token punctuation">></span></span>del删除线<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>del</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>s</span><span class="token punctuation">></span></span>s删除线<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>s</span><span class="token punctuation">></span></span></code></pre><p>TIp:以上均为双标签</p><h3 id="div和span"><a href="#div和span" class="headerlink" title="div和span"></a>div和span</h3><p>div和span没有任何语义，就是个盒子，用来装内容的，双标签。<br>特点：div常用来布局，且独占一行，span一行显示很多内容</p><h3 id="图像标签"><a href="#图像标签" class="headerlink" title="图像标签"></a>图像标签</h3><p>&lt;img&gt;：使用该标签在页面中插入图片，单标签</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>图像路径/图像名.图像后缀<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span></code></pre><p>src为img标签的属性，必填；除了这个，还有alt等<br>绝对路径和相对路径<br>绝对路径是从分区标识符开始进行定位到文件的路径叫绝对路径。<br>相对路径是指相对于当前操作文件所在位置开始定位到对应一个文件的路径叫相对路径，其中，<code>..</code>为上一级文件夹。<code>.</code>为当前文件夹。<br>不管目录是什么，每一级目录都使用<code>/</code>分隔，文件要写后缀。  </p><h3 id="超链接标签-lt-a-gt"><a href="#超链接标签-lt-a-gt" class="headerlink" title="超链接标签<a>"></a>超链接标签&lt;a&gt;</h3><p>双标签，</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://www.baidu.com<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>asdfasd<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span></code></pre><p>href：必填，用于指定目标连接的url，外部链接必须以<code>http://或者https://</code><br>target：用于确定是在当前页面（<code>_self</code>）打开还是以新标签页（<code>_blank</code>）打开，<br>内部链接：遵循相对路径和绝对路径的规则<br>空链接：使用#代替链接<br>下载链接：当链接里面存在的是一个<code>带有后缀的文件</code>，这个链接就是一个下载链接，压缩包文件较多<br>网页元素链接：网页中的各种元素，比如文本，图像，表格，音频，视频都可以添加超链接<br>锚点链接：用于定位当前页面的某个位置；在href中，以<code># + 字符</code>的形式，字符根据你所引用标签设置的<code>id=""</code>双引号中的字符一致</p><h3 id="注释与特殊字符"><a href="#注释与特殊字符" class="headerlink" title="注释与特殊字符"></a>注释与特殊字符</h3><p>注释：&lt;!– 注释内容 –&gt;不会显示在页面上，只做程序标注提示使用。<br>特殊字符：&amp;nbsp;一个空格；&amp;gt;大于号&gt; &amp;lt;小于号&lt;</p><h3 id="表格标签"><a href="#表格标签" class="headerlink" title="表格标签"></a>表格标签</h3><p>表格的作用：显示展示数据<br>基本语法：&lt;table&gt;&lt;tr&gt;&lt;td&gt;(均为双标签)，其中<br>&lt;table&gt;为整个表，也就是包含单元格的框架<br>&lt;tr&gt;为整个表中的行，在这里面包含了一行上的虽有单元格<br>&lt;td&gt;为一个单元格，内容就在双标签之间填写即可</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>asdfasdf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>asdfasdfasdf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>asdfasdf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>asdfasdf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>sadfasdfasd<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>asdfasdfasd<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span></code></pre><p>表头单元格标签&lt;th&gt;&lt;/th&gt;:<br>th中的数据会自动加粗居中<br>表格标签相关属性（后期会通过css进行装饰）：</p><!-- 以下格式为MD表格的固定格式，MD的表格生成默认是有表头的，表头内容样式默认加粗居中对齐；第二行是规定是否为表格的重要标识，也是规定该列内容的对齐方式的重要依据，第一个为左对齐，第二个为右对齐，第三个为居中对齐，当然也可以不写双引号定义对齐方式，默认为左对齐，对齐方式影响表头；横杠至少有一个，上不封顶，但是都是一个意思；可使用html标签或某些css对单元格内的内容或某段内容进行逐个修或针对性修改。下面是例子 --><!-- <font size=5px></font> --><table><thead><tr><th align="left"><font size="4px" color="red">属性名</font></th><th align="right"><font size="4px" color="red">属性值</font></th><th align="center"><font size="4px" color="red">描述</font></th></tr></thead><tbody><tr><td align="left">algin</td><td align="right">left、center、right</td><td align="center">单元格内数据的对齐方式</td></tr><tr><td align="left">broder</td><td align="right">“数字”或””</td><td align="center">显示边框和控制外边框粗细，默认为””，数字越大，整个表格的外边框的笔触也会越粗</td></tr><tr><td align="left">cellpadding</td><td align="right">像素值</td><td align="center">单元格内数据与单元格的距离，默认为1像素</td></tr><tr><td align="left">cellspacing</td><td align="right">像素值</td><td align="center">单元格之间的距离与外边框的距离，默认为两像素</td></tr><tr><td align="left">width\hight</td><td align="right">像素值或百分比</td><td align="center">表格宽度\表格高度</td></tr></tbody></table><h4 id="表格结构标签："><a href="#表格结构标签：" class="headerlink" title="表格结构标签："></a>表格结构标签：</h4><p>thead表示表格的头部区域，tbody表示表格的主题区域,均为双标签<br>合并单元格：<br>纵向合并：rowspan=”欲合并个数”<br>横向合并：colspan=”欲合并个数”<br>目标单元格：纵向合并，将属性规定在最上面单元格的开头标签中；横向合并，将属性规定在最左侧的单元格的开头标签中。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>thead</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>asdf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>asdf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>asdf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>asdf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>thead</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tbody</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">rowspan</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>asdf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>asdf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>asdf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>asdf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>asdf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>asdf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>asdf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>asdf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>asdf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>asdf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>asdf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>asdf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>asdf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">colspan</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>asdf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tbody</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span></code></pre><table>    <thead>        <tr>            <th>asdf</th>            <th>asdf</th>            <th>asdf</th>            <th>asdf</th>        </tr>    </thead>    <tbody>        <tr>            <td rowspan="2">asdf</td>            <td>asdf</td>            <td>asdf</td>            <td>asdf</td>        </tr>        <tr>            <td>asdf</td>            <td>asdf</td>            <td>asdf</td>        </tr>        <tr>            <td>asdf</td>            <td>asdf</td>            <td>asdf</td>            <td>asdf</td>        </tr>        <tr>            <td>asdf</td>            <td>asdf</td>            <td colspan="2">asdf</td>        </tr>    </tbody></table><h3 id="列表标签"><a href="#列表标签" class="headerlink" title="列表标签"></a>列表标签</h3><p>列表用于项目布局。</p><h4 id="无序列表："><a href="#无序列表：" class="headerlink" title="无序列表："></a>无序列表：</h4><p>ul定义无序列表，用li来定义标签</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>111111<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>222222<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>333333<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span></code></pre><p>1，无序列表没有顺序<br>2，ul中不允许放除li标签以外的所有元素或字符<br>3，li标签中间可以加所有元素和字符<br>4，无序列表有自己的样式属性，可以通过css进行定制</p><h4 id="有序列表："><a href="#有序列表：" class="headerlink" title="有序列表："></a>有序列表：</h4><p>ol定义有序列表，用li来定义标签</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ol</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>111111<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>222222<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>333333<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ol</span><span class="token punctuation">></span></span></code></pre><p>1，有序列表是由一定顺序的，不能颠倒。<br>2，ul中不允许放除li标签以外的所有元素或字符<br>3，li标签中间可以加所有元素和字符<br>4，无序列表有自己的样式属性，可以通过css进行定制</p><h4 id="自定义列表："><a href="#自定义列表：" class="headerlink" title="自定义列表："></a>自定义列表：</h4><p>自定义列表项前没有项目符号；dl来定义自定义列表，列表标题使用dt，当前标题下的项用dd。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dl</span><span class="token punctuation">></span></span>                 <span class="token comment" spellcheck="true">&lt;!-- 使用dl定义一个自定义列表 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dt</span><span class="token punctuation">></span></span>111111<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dt</span><span class="token punctuation">></span></span>  <span class="token comment" spellcheck="true">&lt;!-- 使用dt定义每一个列表的列表标题 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dd</span><span class="token punctuation">></span></span>222222<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dd</span><span class="token punctuation">></span></span>  <span class="token comment" spellcheck="true">&lt;!-- 使用dd定义每一个列表的列表项 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dd</span><span class="token punctuation">></span></span>333333<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dd</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dl</span><span class="token punctuation">></span></span></code></pre><p>1，自定义列表没有顺序<br>2，dl中不允许放除dd和dt标签以外的所有元素或字符；先后顺序dt在前，dd在后。<br>3，dd标签中间可以加所有元素和字符<br>4，自定义列表有自己的样式属性，可以通过css进行定制</p><h3 id="表单标签"><a href="#表单标签" class="headerlink" title="表单标签"></a>表单标签</h3><p>表单包含表单域，表单控件和提示信息</p><h4 id="表单域"><a href="#表单域" class="headerlink" title="表单域"></a>表单域</h4><p>包含表单元素的区域<br>form双标签来规范表单域范围</p><table><thead><tr><th>属性名</th><th>属性值</th><th>作用</th></tr></thead><tbody><tr><td>action</td><td>url地址</td><td>指定接收处理表单数据的服务器程序url地址</td></tr><tr><td>method</td><td>get/post</td><td>设置表单数据提交方式</td></tr><tr><td>name</td><td>字符</td><td>用于指定表单名称，区分多个表单</td></tr></tbody></table><h4 id="表单控件："><a href="#表单控件：" class="headerlink" title="表单控件："></a>表单控件：</h4><p>input文本框标签:&lt;input type=””/&gt;单标签<br>type属性的值</p><table><thead><tr><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td>button</td><td>定义按钮，用于启动js脚本</td></tr><tr><td>checbox</td><td>定义复选框</td></tr><tr><td>file</td><td>定义输入字段和“浏览”按钮，用于文件上传</td></tr><tr><td>hidden</td><td>定义隐藏的输入字段</td></tr><tr><td>image</td><td>定义图像形式的提交按钮</td></tr><tr><td>password</td><td>定义密码输入样式</td></tr><tr><td>radio</td><td>单选按钮，若想实现单选，需配合name属性值为同一个值时才可实现</td></tr><tr><td>reset</td><td>重置按钮，清空表单中的数据</td></tr><tr><td>submit</td><td>定义提交按钮，配合form的method属性会把数据传递到后端进行相应处理</td></tr><tr><td>text</td><td>可输入文本框</td></tr></tbody></table><p>其他属性</p><table><thead><tr><th>属性名</th><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td>name</td><td>用户自定义</td><td>定义input名称</td></tr><tr><td>value</td><td>用户自定义</td><td>规定input默认值，主要用于后台数据处理</td></tr><tr><td>checked</td><td>checked</td><td>加载后是否为选中状态</td></tr><tr><td>maxlenght</td><td>正整数</td><td>规定最大长度</td></tr></tbody></table><h4 id="lable标签"><a href="#lable标签" class="headerlink" title="lable标签"></a>lable标签</h4><p>用于绑定一个表单元素，当点击label标签内的文字时，浏览器就会自动将焦点（光标）转到或者选择对应饿表单元素上，用来增加用户体验。配合标签的id属性进行搭配使用<br>语法：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>xingbie<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>男<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>lable</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sex<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>xingbie<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token comment" spellcheck="true">&lt;!-- 上面是显性写法，下面的是隐性写法 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">></span></span>hhhhhhhh<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span></code></pre><h4 id="select标签"><a href="#select标签" class="headerlink" title="select标签"></a>select标签</h4><p>下拉列表，用于某类的集合，节约页面空间；使用&lt;select&gt;双标签定义下拉列表，在其内敲双标签&lt;option&gt;写入预选选项<br>1.至少有一对option<br>2.在option中定义selected=”selected”时，当前项即为默认选中状态。</p><pre class=" language-html"><code class="language-html">请在下面的选项中选出哪一个与其他几个不同：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>张家口<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>张震岳<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>张国立<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>张一么西喽<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span></code></pre><h4 id="textarea标签（双标签）"><a href="#textarea标签（双标签）" class="headerlink" title="textarea标签（双标签）"></a>textarea标签（双标签）</h4><p>文本域，多行文本框。<br>cols属性：规定显示多少个字符<br>ross属性：规定默认显示几行<br><br><br>(未完待续……)<br><br><br><strong>更多内容：</strong></p><ul><li><a href="http://localhost:4000/2022/03/23/javascript/">JavaScript 梳理</a></li><li><a href="http://localhost:4000/2022/03/23/css/">CSS 梳理</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 前端 </tag>
            
            <tag> html </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript 梳理</title>
      <link href="/2022/03/23/javascript/"/>
      <url>/2022/03/23/javascript/</url>
      
        <content type="html"><![CDATA[<h1 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h1><h2 id="书写位置"><a href="#书写位置" class="headerlink" title="书写位置"></a>书写位置</h2><h3 id="行内："><a href="#行内：" class="headerlink" title="行内："></a>行内：</h3><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>唐伯虎<span class="token punctuation">"</span></span> <span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>alert(<span class="token punctuation">'</span>秋香姐<span class="token punctuation">'</span>)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></code></pre><h3 id="内嵌："><a href="#内嵌：" class="headerlink" title="内嵌："></a>内嵌：</h3><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">alert<span class="token operator">=</span><span class="token string">"lalalalalallla"</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span></code></pre><h3 id="引用外部："><a href="#引用外部：" class="headerlink" title="引用外部："></a>引用外部：</h3><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>my.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span></code></pre><h2 id="注释："><a href="#注释：" class="headerlink" title="注释："></a>注释：</h2><pre class=" language-JavaScript"><code class="language-JavaScript">//  单行注释/*  */  多行注释（块注释，块级注释）</code></pre><h2 id="输入-输出："><a href="#输入-输出：" class="headerlink" title="输入\输出："></a>输入\输出：</h2><p>prompt()：带有输入框的弹窗，默认值类型为字符型<br>console.log()：控制台输出<br>alert()：内容弹窗  </p><h2 id="变量："><a href="#变量：" class="headerlink" title="变量："></a>变量：</h2><p>var a： var为声明变量关键字，不使用的话为全局变量<br>a=12：赋值<br>var a,b,c,d,ab：可同时声明多个变量<br>var a=12：可同时声明变量并赋值，也可同时声明多个变量并赋值，也称为变量初始化<br>变量更新：同一个变量进行多次赋值后，存储的是最后一次赋给它的值。  </p><h2 id="特殊情况："><a href="#特殊情况：" class="headerlink" title="特殊情况："></a>特殊情况：</h2><p>只声明，不赋值输出</p><pre class=" language-JavaScript"><code class="language-JavaScript">var a;console.log(a);</code></pre><p>返回undefined<br>不声明不赋值输出</p><pre class=" language-JavaScript"><code class="language-JavaScript">console.log(b);</code></pre><p>会报错<br>不声明，只赋值输出</p><pre class=" language-JavaScript"><code class="language-JavaScript">age=10;console.log(age);</code></pre><p>输出为10（这是全局变量，不推荐使用）</p><h2 id="变量名的命名规则："><a href="#变量名的命名规则：" class="headerlink" title="变量名的命名规则："></a>变量名的命名规则：</h2><p>只能包含大小写字母、数字，下划线、$符号及其组合，不能以数字开头，区分大小写，不能是var等关键字，尽量遵循驼峰命名法</p><h2 id="数据类型："><a href="#数据类型：" class="headerlink" title="数据类型："></a>数据类型：</h2><p>只有当给声明好的变量赋值后，才能确定该变量的数据类型，且可以变化</p><h3 id="简单数据类型："><a href="#简单数据类型：" class="headerlink" title="简单数据类型："></a>简单数据类型：</h3><p>number：数字型，不区分整数与小数  </p><h3 id="进制表示："><a href="#进制表示：" class="headerlink" title="进制表示："></a>进制表示：</h3><p>（默认会直接转换成十进制）<br>二进制：0，1<br>八进制：0-7，以0开头<br>十进制，0-9<br>十六进制：0-9，A-F，以0x开头  </p><h3 id="js数字范围："><a href="#js数字范围：" class="headerlink" title="js数字范围："></a>js数字范围：</h3><p>number.max_value：表示数值的最大值，为1.7976……太长了，把这个放到alert里面自己看吧<br>number.min_value：表示数值的最小值，为5e-324  </p><h3 id="特殊值："><a href="#特殊值：" class="headerlink" title="特殊值："></a>特殊值：</h3><p>infinity：正无穷大<br>-infinity：负无穷大，就是无穷小<br>NaN: not a number，表示非数值<br>is NaN：判断值是否为非数字，是数字，返回false，是非数字，返回true<br>string：字符串型<br>‘string’：被单引号或双引号包围的数据为字符串  </p><h2 id="字符串嵌套："><a href="#字符串嵌套：" class="headerlink" title="字符串嵌套："></a>字符串嵌套：</h2><p>引号遵循就近匹配原则  </p><h2 id="转义符"><a href="#转义符" class="headerlink" title="转义符"></a>转义符</h2><pre class=" language-md"><code class="language-md">\n：换行\b：空格\\：反斜杠\\'：单引号 '\"：双引号 "\t：tab  缩进\b：一个空格，blank</code></pre><p>变量名.length：返回变量长度（字符串个数）<br>变量 + 变量：字符串拼接（两个数值中间用+会进行求和计算）<br>也可以使用英文逗号分隔，不过输出时中间有空格<br>Boolean：布尔型<br>true参与数值运算时当1，false为0.<br>undefined：未定义类型<br>undefined与字符串相连当字符处理，参与数字运算返回NaN<br>null：表示空值<br>null与字符相连同上，参与数字运算当0<br>typeof 变量名：返回变量类型<br>prompt取得的值是字符型<br>Tip：在chrome浏览器f12的console界面，返回值呈蓝色表示数值型，黑色代表字符串，深蓝色表示布尔型，浅灰色表示undefined和null<br>字面量：是固定赋给变量的值  </p><h2 id="数据类型转换"><a href="#数据类型转换" class="headerlink" title="数据类型转换"></a>数据类型转换</h2><h3 id="一、转换成字符型"><a href="#一、转换成字符型" class="headerlink" title="一、转换成字符型"></a>一、转换成字符型</h3><p>变量类型-&gt;字符（假设变量赋值为任意数字）<br>1、变量.toString();<br>2、String(变量或数据)<br>3、隐式转换<br>*变量 + ‘’</p><h3 id="二、转换成数值型"><a href="#二、转换成数值型" class="headerlink" title="二、转换成数值型"></a>二、转换成数值型</h3><p>*1、parseInt(变量或数据)    //整数转换数值，小数取整；’120px’会去掉数字后面的本身不存在数值属性的数据并转换120为数值，rem120px返回值为NaN<br><em>2、parseFloat(变量或数据)    //小数转换数值，细节同上<br>3、Number(变量或数据)      //强制转换<br>4、运算符+-</em>/   //隐式转换，注意+本身具有连接字符的意义存在，部分场景需要对字符进行强制转换后使用  </p><h3 id="转换布尔型："><a href="#转换布尔型：" class="headerlink" title="转换布尔型："></a>转换布尔型：</h3><p>Boolean()：空值、否定值会被转换成false，如 ‘’、0、NaN、null、undefined。其余值或状态都会转换成true  </p><h3 id="运算符："><a href="#运算符：" class="headerlink" title="运算符："></a>运算符：</h3><p>+-*/%：加减乘除，最后一个为取余(取模)，因浮点数精度问题，没有特殊要求不要使用浮点数(小数)直接进行算数运算，包括判断是否相等  </p><h3 id="表达式："><a href="#表达式：" class="headerlink" title="表达式："></a>表达式：</h3><p>由数字，运算符，变量等组成的式子成为表达式且有返回值；有等号时表达式运算右边的运算结果赋值给左边变量  </p><h3 id="前置递增-递减，后置递增-递减："><a href="#前置递增-递减，后置递增-递减：" class="headerlink" title="前置递增\递减，后置递增\递减："></a>前置递增\递减，后置递增\递减：</h3><p>++和–为递增\递减运算符，放在变量前面称为前置递增\递减，放在变量后面成称为后置递增\递减。此运算符只能与变量配合使用。<br>++num：相当于num = num + 1，先加1，再返回值。var age=10; console.log(++age + 10); 结果为21<br>num++：相当于num = num + 1，先使用原值运行当前行代码，运行完最后再加1。var age=10; console.log(age++ + 10); 结果为20  </p><h3 id="比较运算符-关系运算符-："><a href="#比较运算符-关系运算符-：" class="headerlink" title="比较运算符(关系运算符)："></a>比较运算符(关系运算符)：</h3><p>&lt;、&gt;、&gt;=、&lt;=、==、!=、===、!==：依次为 小于、大于、大于等于、小于等于、判断是否相等，在一定条件下此符号默认会将字符串类型转换成数值型、不等、全等、不全等，后两个判断要求值和数据类型全部一致；如果使用判断条件成立，返回值为true，反之为false  </p><h3 id="逻辑运算符："><a href="#逻辑运算符：" class="headerlink" title="逻辑运算符："></a>逻辑运算符：</h3><p>他是用来进行布尔值运算的，返回值也是布尔值<br>&amp;&amp;：逻辑与，两值为true，为true，有一个为false，结果为false<br>||：逻辑或，两个值有一个为true，值为true，都为false，值为false<br>!：逻辑非，取反，与true使用结果为false，与false用值为ture  </p><h4 id="逻辑中断-短路运算-："><a href="#逻辑中断-短路运算-：" class="headerlink" title="逻辑中断(短路运算)："></a>逻辑中断(短路运算)：</h4><p>原理：存在多个表达式或值时，左边所得的值可以确定结果时，不再继续运算右边的值<br>短路与：左边为真，返回右边的值；左边为假，返回左边的值<br>eq：<code>123 &amp;&amp; 456</code>；返回值为 456<br><code>0 &amp;&amp; 456</code>；返回值为 0<br><code>0 &amp;&amp; 1+2 &amp;&amp; 456 * 2342342</code>；返回值为 0<br>短路或：左边为真，返回左边的值；左边为假，返回右边的值<br><code>123 || 456</code>   返回值为123<br><code>0 || 456</code> 返回值为456<br><code>0 || 456 || 456 * 789</code>  返回值为456  </p><h3 id="赋值运算符："><a href="#赋值运算符：" class="headerlink" title="赋值运算符："></a>赋值运算符：</h3><p><code>=、+=、-+、*=、/=、%=</code>：依次为直接<code>赋值\先加\减\乘\除\取余后再赋值</code><br>eq：<code>num += 2</code>  相当于<code>num = num + 2</code> </p><h3 id="运算符优先级"><a href="#运算符优先级" class="headerlink" title="运算符优先级:"></a>运算符优先级:</h3><table><thead><tr><th align="center">优先级</th><th align="center">名称</th><th align="center">举例</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">小括号</td><td align="center">()</td></tr><tr><td align="center">2</td><td align="center">一元运算符</td><td align="center">++、–、！</td></tr><tr><td align="center">3</td><td align="center">算术运算符</td><td align="center">先*/%，后+-</td></tr><tr><td align="center">4</td><td align="center">关系运算符</td><td align="center">&gt;、&lt;、&gt;=、&lt;=</td></tr><tr><td align="center">5</td><td align="center">等于判断运算符</td><td align="center">==、!=、===、!==</td></tr><tr><td align="center">6</td><td align="center">逻辑运算符</td><td align="center">先&amp;&amp;后||</td></tr><tr><td align="center">7</td><td align="center">赋值运算符</td><td align="center">=</td></tr><tr><td align="center">8</td><td align="center">逗号运算符</td><td align="center">,</td></tr></tbody></table><h2 id="分支："><a href="#分支：" class="headerlink" title="分支："></a>分支：</h2><h3 id="if分支："><a href="#if分支：" class="headerlink" title="if分支："></a>if分支：</h3><p>基本结构：<code>if (条件表达式) {执行语句} (单分支语句)</code><br>当条件为真时，则执行语句；条件为假时，跳出if语句，执行后面的代码</p><h3 id="双分支语句："><a href="#双分支语句：" class="headerlink" title="双分支语句："></a>双分支语句：</h3><p>结构：<code>if (条件表达式) {执行语句1} else {执行语句2}</code></p><h3 id="多分支语句："><a href="#多分支语句：" class="headerlink" title="多分支语句："></a>多分支语句：</h3><p><code>if(条件表达式1){执行语句1}else if(条件表达式2){执行语句2}……else{执行语句n}</code></p><h3 id="三元表达式："><a href="#三元表达式：" class="headerlink" title="三元表达式："></a>三元表达式：</h3><p><code>条件表达式 ? 表达式1 : 表达式2</code><br>思路：当表达式值为真时，返回表达式1的值，否则返回2的值</p><h3 id="switch分支语句："><a href="#switch分支语句：" class="headerlink" title="switch分支语句："></a>switch分支语句：</h3><p>基本语法：<br><code>switch(表达式){case 值1: 执行语句1; break; case 值2: 执行语句2;break; … default: 执行语句n;}</code><br>思路：表达式与各个case后的值进行匹配，如果匹配成功，执行该case下的语句，否则继续向下匹配，没有匹配的，执行default后面的语句。<br>注意点：switch中的表达式是一个变量；匹配方式是全等，也就是值和数据类型全部一样；break不强制写入，但是会一直往下执行下一个case且依旧执行其后面的语句<br>Switch语句对结果的判断是不错的选择，适用于分支较多的案例<br>If适用于范围判断，分支较短的情况</p><h2 id="循环："><a href="#循环：" class="headerlink" title="循环："></a>循环：</h2><h3 id="for循环："><a href="#for循环：" class="headerlink" title="for循环："></a>for循环：</h3><p>基本语法<br><code>for (初始化变量; 条件表达式; 操作表达式) {循环体}</code><br>初始化变量：使用var声明的普通变量，通常用作计数器使用<br>条件表达式：用来决定每次循环是否继续执行，即终止条件<br>操作表达式：每次循环最后执行的代码，用于变换计数器的更新  </p><h3 id="断点调试："><a href="#断点调试：" class="headerlink" title="断点调试："></a>断点调试：</h3><p>chrome：f12-&gt;sources,f11：一步一步执行<br>实操1：</p><pre class=" language-md"><code class="language-md">求1到100之和求1到100之和的平均值分别求1到100之间奇偶之和求1到100之间能被三整除的数字之和</code></pre><p>实操2：</p><pre class=" language-md"><code class="language-md">求班级总分数和平均分思路：1输入总人数;2输入每个学生的成绩;3求成绩之和与平均成绩  编程思路：使用prompt进行数据输入，使用alert实现最终输出  </code></pre><p>实操3：一行打印5个星号</p><h3 id="双重for循环（嵌套）："><a href="#双重for循环（嵌套）：" class="headerlink" title="双重for循环（嵌套）："></a>双重for循环（嵌套）：</h3><p>基本格式：<br><code>for(初始化变量1; 条件表达式1; 操作表达式1){for(初始化变量2; 条件表达式2; 操作表达式2){循环体}}</code></p><h3 id="while循环："><a href="#while循环：" class="headerlink" title="while循环："></a>while循环：</h3><p>基本格式：<br><code>while(条件表达式){循环体}</code><br><code>注意计数器的存在和变化，防止死循环</code></p><h3 id="do-while循环："><a href="#do-while循环：" class="headerlink" title="do while循环："></a>do while循环：</h3><p>基本结构：<br><code>do {循环体}while(条件表达式)</code>：与上面不同的是，先执行一次循环体，再进行判断，如果为真，继续执行循环体，直到判断为假，退出循环。同样注意计数器及其的变化<br>continue关键字：跳出本次循环，执行下一次循环<br>break关键字：跳出该循环结构  </p><h2 id="数组："><a href="#数组：" class="headerlink" title="数组："></a>数组：</h2><p>一组数据的集合，每个数据都是元素<br>创建数组：利用new 创建(空)数组<br><code>var 数组名= new Array();</code><br>自定义数组：每个元素使用英文逗号隔开，最后一个不使用标点符号<br><code>var 变量=[1,'2',true];</code><br>获取数组元素：通过索引（下标）获取元素，下标从0开始。如果使用没有元素个数的下标，会返回undefined。迪丽古力马尔扎哈<br><code>var 变量=[1,'2',true];</code><br><code>console.log(变量[索引号]);</code><br>遍历数组：使用循环的方式取出数组元素，这个方式叫遍历，注意下标范围，从0开始。<br>数组长度：获取数组元素个数<br><code>数组名.length</code>  </p><h3 id="新增数组元素："><a href="#新增数组元素：" class="headerlink" title="新增数组元素："></a>新增数组元素：</h3><p>1、可以通过修改数组长度（数组名.length）<br><code>数组名.length = 大于原本数组长度的正整数;</code><br>增加长度后，由于没有值，新增进来的元素默认值是undefined。<br>*2、通过修改数组索引追加元素，也可以通过该方式修改已有元素<br><code>数组名[下标号]=追加元素;</code><br>不要直接给数组名赋值，会变成普通变量  </p><h2 id="函数："><a href="#函数：" class="headerlink" title="函数："></a>函数：</h2><p>封装了可以重复使用的代码的代码块</p><h3 id="声明函数"><a href="#声明函数" class="headerlink" title="声明函数"></a>声明函数</h3><p><code>function 方法名(变量){执行语句}</code><br>变量可以写多个，用英文都逗好隔开，函数命名一般用动词，可以为空；且形参在传递完参数之后就没有任何值了，可以复用<br>调用方法：方法名(值);<br>值的个数要与该方法的变量数量相同，用英文都逗好隔开;多余形参个数会正常输出，剩下的的值会丢弃，少于形参会返回NaN</p><h3 id="参数传递："><a href="#参数传递：" class="headerlink" title="参数传递："></a>参数传递：</h3><p>声明函数名后面小括号里面的变量为形参（形式参数），引用函数名后面小括号里面的变量或值称为实参（实际参数）<br>利用函数求任意两个数的和以及累加和</p><h3 id="return：返回值"><a href="#return：返回值" class="headerlink" title="return：返回值"></a>return：返回值</h3><p>写在函数体最后，用来返回结果，并终止后面的代码执行<br>使用方法：return 需要返回的结果（变量/值/可以有结果的表达式）  </p><pre class=" language-md"><code class="language-md">求任意两个数的最大值求数组中的最大值利用return终止函数并且只能返回一个值</code></pre><p>函数返回值的注意事项:<br>有终止后续后面代码的执行<br>只能返回最后一个值，包括在return同一行上用逗号分隔的变量，可以使用数组进行多个变量输出<br>每个函数都有返回值，如果有return则返回return后面的返回值，没有则返回undefined<br>break，continue，return的区别<br>break结束当前循环体<br>continue跳出本次循环，继续执行下次外层循环<br>return不仅可以推出循环，还可以返回return语句中的值，同时还可以结束当前函数体后续的代码</p><h3 id="对象arguments的使用："><a href="#对象arguments的使用：" class="headerlink" title="对象arguments的使用："></a>对象arguments的使用：</h3><p>当不确定实参个数的时候，可利用函数arguments存储传递过来的实参，以伪数组的方式</p><h3 id="伪数组："><a href="#伪数组：" class="headerlink" title="伪数组："></a>伪数组：</h3><p>1、具有数组的length属性<br>2、按照索引的方式进行存储<br>3、没有真正数组的方法<br>4、只有函数内置了对象arguments</p><pre class=" language-md"><code class="language-md">利用函数求任意一组数的最大值利用函数翻转数组reverse利用函数封装冒泡排序利用函数判断闰年</code></pre><p>在一个函数里面可以调用另一个函数，将按顺序执行</p><pre class=" language-md"><code class="language-md">输出2月份的天数</code></pre><p>函数的声明<br>1、利用函数关键字自定义函数名：function 函数名(){}<br>2、匿名函数：此方式定义的函数没有函数名，引用方式使用<code>变量名();</code>的方式，也可以实现参数传递，返回的只是一个值；<code>var 变量名 = function(){}</code></p><h2 id="作用域"><a href="#作用域" class="headerlink" title="作用域"></a>作用域</h2><p>作用域：代码名字在某个范围内起作用，这个范围就是作用域，为了减少命名冲突<br>分类<br>全局作用域：整个script标签内或整个js文件中声明的变量<br>局部作用域：函数内声明的变量（函数作用域）<br>变量的作用域<br>分类<br>全局变量：在<code>全局作用域</code>下声明的变量；其中，未使用var声明的变量为全局变量<br>局部变量：在<code>局部作用域</code>下声明的变量；其中，函数的形参也可视为局部变量<br>从执行效率看：<br>全局变量只有关闭浏览器时才会释放内存资源，局部变量在执行完当前所在生效范围的程序块后就会释放内存</p><h3 id="块级作用域（es6）"><a href="#块级作用域（es6）" class="headerlink" title="*块级作用域（es6）"></a>*块级作用域（es6）</h3><p>使用{}内部声明的为块级作用域</p><h3 id="作用域链"><a href="#作用域链" class="headerlink" title="作用域链"></a>作用域链</h3><p>从本级作用域开始向上级一层一层查找本层需要的值或变量，遵循就近原则取值。<br>作用域链案例：<br>1、读程序</p><pre class=" language-JavaScript"><code class="language-JavaScript">function f1(){    var num = 123;    function f2(){        console.log(num);    }    f2();}var num = 456;f1();</code></pre><p>读程序2</p><pre class=" language-JavaScript"><code class="language-JavaScript">var a=1;function fn1(){    var a=2;    var b='22';    fn2();    function fn2(){        var a=3;        fn3();        function fn3(){            var a=4;            console.log(a);            console.log(b);        }    }}fn1();</code></pre><h2 id="预解析"><a href="#预解析" class="headerlink" title="预解析"></a>预解析</h2><p>js解析器在进行解析代码的时候会进行两步操作：预解析和代码执行；js引擎会把js中所有<code>var</code>还有<code>function</code>提升到当前作用域的最前面</p><h3 id="预解析-1"><a href="#预解析-1" class="headerlink" title="预解析"></a>预解析</h3><p>分类：<br>变量预解析（变量提升）<br>在当前作用域内，把所有已经声明<code>(var)</code>的变量提升到最前面,不提升赋值操作。<br>函数预解析（函数提升）<br>在当前作用域内，把所有已经声明<code>(function)</code>的函数提升到最前面，不调用函数。  </p><h3 id="代码执行"><a href="#代码执行" class="headerlink" title="代码执行"></a>代码执行</h3><p>按照代码书写顺序从上到下执行</p><h2 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h2><p>官语：是一组无序的相关属性和方法的集合。<br>对象是由属性和方法组成<br>属性：事物的特征。<br>方法：事物的行为。</p><h3 id="创建对象"><a href="#创建对象" class="headerlink" title="创建对象"></a>创建对象</h3><p>可以通过字面量创建，new object关键字，构造函数创建对象<br>通过字面量创建<br>使用{}创建<br>eq：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>uname <span class="token operator">=</span> <span class="token string">'张三'</span><span class="token punctuation">,</span>age<span class="token operator">=</span><span class="token number">18</span><span class="token punctuation">,</span>sex<span class="token operator">=</span><span class="token string">'男'</span><span class="token punctuation">,</span>sayHi<span class="token punctuation">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'hi~'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>对象的属性或者方法是采用键值对的方式创建<code>{键(属性名):值(属性值)}</code>，多个属性或方法中间用逗号分隔，方法冒号后面跟的是一个匿名函数  </p><h3 id="属性调用"><a href="#属性调用" class="headerlink" title="属性调用"></a>属性调用</h3><p>使用<code>对象名.属性名</code>的格式  </p><pre class=" language-javascript"><code class="language-javascript">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>uname<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>或  <code>对象名['属性名']</code></p><pre class=" language-javascript"><code class="language-javascript">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obg<span class="token punctuation">[</span><span class="token string">'age'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="方法调用"><a href="#方法调用" class="headerlink" title="方法调用"></a>方法调用</h3><p>同理，对象的方法调用方式为<code>对象名.方法名()</code></p><pre class=" language-javascript"><code class="language-javascript">obj<span class="token punctuation">.</span><span class="token function">sayHi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="关键字创建"><a href="#关键字创建" class="headerlink" title="关键字创建"></a>关键字创建</h3><p>直接上例子：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">object</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>通过赋值的方式进行追加</p><pre class=" language-JavaScript"><code class="language-JavaScript">obj.uname = '张三';obj.age = 18;obj.sex = '男';obj.sayHi = function(){console.log('hi~');}</code></pre><h3 id="构造函数创建"><a href="#构造函数创建" class="headerlink" title="构造函数创建"></a>构造函数创建</h3><p>是把对象里面的一些相同的属性和方法抽象出来封装到函数里面<br>语法格式：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">构造函数名</span><span class="token punctuation">(</span>形参<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>属性名<span class="token operator">=</span>值<span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>方法名<span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>调用方式：</p><pre class=" language-JavaScript"><code class="language-JavaScript">var 变量=new 构造函数名(实参或值);// 构造函数内的方法调用变量.方法名(实参);</code></pre><p>Tip：构造函数名的首字母要大写，不需要return，</p><h3 id="遍历对象"><a href="#遍历对象" class="headerlink" title="遍历对象"></a>遍历对象</h3><p><code>for…in…</code><br><code>for(变量in对象){循环体}</code></p><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">// eq:</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> k <span class="token keyword">in</span> obj<span class="token punctuation">)</span><span class="token punctuation">{</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">}</span></code></pre><h3 id="内置对象"><a href="#内置对象" class="headerlink" title="内置对象"></a>内置对象</h3><p>对象分类：自定义对象、内置对象、浏览器对象<br>前两种是js基础，属于ecmascript，第三个为js独有</p><h3 id="查文档"><a href="#查文档" class="headerlink" title="查文档"></a>查文档</h3><p>可在<a href="https://developer.mozilla.org/zh-CN/">mdn</a>查询js对象的相关信息，包括对象的属性和对象的方法  </p><h3 id="常用内置对象"><a href="#常用内置对象" class="headerlink" title="常用内置对象"></a>常用内置对象</h3><p>math数学对象最大值<br>math.max(一组数字);求一组数字中最大的数<br>封装自己的数学对象<br>通过创建自定义对象可以模拟内置数学对象  </p><pre class=" language-javascript"><code class="language-javascript">math<span class="token punctuation">.</span>PI      <span class="token comment" spellcheck="true">//圆周率</span>math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//向下取整(去小数点取整)</span>math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">//向上取整(取小数点加一取整)</span>math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//四舍五入</span>math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token comment" spellcheck="true">//绝对值</span>math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token comment" spellcheck="true">//最大值</span>math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token comment" spellcheck="true">//最小值</span></code></pre><p>随机数<code>math.rendmom()</code>,取值范围为左闭右开<br>补充：开闭区间是一个数学概念，开区间使用符号小括号()表示，闭区间使用符号中括号[]表示，闭区间包含了两个端点，而开区间则不包含两个端点<br>取随机整数</p><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">// 得到两个数之间的整数，且包含这两个数</span><span class="token keyword">function</span> <span class="token function">getRandom</span><span class="token punctuation">(</span>min<span class="token punctuation">,</span>max<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>max<span class="token operator">-</span>min<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span>min    <span class="token punctuation">}</span></code></pre><p>练习</p><pre class=" language-md"><code class="language-md">猜数字猜1到10之间会出现哪个数，猜中了，返回恭喜，猜错了，返回抱歉</code></pre><p>变种：</p><pre class=" language-md"><code class="language-md">猜数字猜1到10之间会出现哪个数，用户给出的数字大于猜测数字，提示大了，并继续猜，反之提示小了，依旧继续猜，猜中，返回正确</code></pre><p>参考：<a href="https://www.bilibili.com/video/BV1Sy4y1C7ha?p=162">猜数字</a>  </p><h3 id="Date日期对象"><a href="#Date日期对象" class="headerlink" title="Date日期对象"></a>Date日期对象</h3><p>date是一个构造函数，需要使用new来调用  </p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">var</span> date<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>当没有参数时，返回当前系统下的当前时间<br>参数格式：年月日使用逗号隔开（2008,08,08），或用横杠连接的字符串，时间时分秒用分号分隔（’2008-8-8 8:8:8’）</p><h4 id="格式化日期"><a href="#格式化日期" class="headerlink" title="格式化日期"></a>格式化日期</h4><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">var</span> date<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>date<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//返回当前年份</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>date<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">//返回月份减一的数字</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>date<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//返回当前日期</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>date<span class="token punctuation">.</span><span class="token function">getDay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token comment" spellcheck="true">//返回星期，从周日到周六的顺序，周日返回0（许多英语国家、犹太教、日本的习惯）</span></code></pre><h4 id="格式化时间"><a href="#格式化时间" class="headerlink" title="格式化时间"></a>格式化时间</h4><pre class=" language-javascript"><code class="language-javascript">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>date<span class="token punctuation">.</span><span class="token function">getHours</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//时</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>date<span class="token punctuation">.</span><span class="token function">getMinutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//分</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>date<span class="token punctuation">.</span><span class="token function">getSeconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//秒</span></code></pre><h4 id="总毫秒数（时间戳）"><a href="#总毫秒数（时间戳）" class="headerlink" title="总毫秒数（时间戳）"></a>总毫秒数（时间戳）</h4><p>Data对象的起始时间为1970年1月1日（世界标准时间）（<a href="https://www.baidu.com/s?ie=UTF-8&amp;wd=%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9A%84%E6%9C%80%E6%97%A9%E6%97%B6%E9%97%B4%E4%B8%BA%E4%BB%80%E4%B9%88%E6%97%B61970%E5%B9%B4">相关来源</a>）<br>获得date总毫秒数，是距1970年1月1日0时0分0秒过去了多少毫秒<br>1、通过方法：valueOf()    getTime()<br>2、实例化方式：var 变量= +new data();<br>3、H5新增：Date.now()</p><pre class=" language-md"><code class="language-md">案例：倒计时思路:使用时间戳，用将来的时间戳减去当前的时间戳，然后进行天时分秒转换换算与公式：1秒=1000毫秒1分钟=60秒1小时=60分钟1天=24小时天数=总秒数/60/60/24小时=总秒数/60/60%24分钟=总秒数/60%60秒=总秒数%60注意要取整，使用parseInt()</code></pre><h3 id="数组对象"><a href="#数组对象" class="headerlink" title="数组对象"></a>数组对象</h3><p>创建数组：new Array();创建一个空数组，两个以上的参数为数组，一个参数不是数组；var arr=[1,2,3];字面量创建数组</p><h4 id="检测是否是数组"><a href="#检测是否是数组" class="headerlink" title="检测是否是数组"></a>检测是否是数组</h4><p>1、instanceof逻辑运算符：判断变量是否为数组,是为true，否为false<br>使用方法:<br>(变量 instanceof Array)<br>2、Array.isArray(变量)：返回值为true和false</p><h4 id="添加数组元素"><a href="#添加数组元素" class="headerlink" title="添加数组元素"></a>添加数组元素</h4><p>push()：追加数组元素；且有返回值，为追加完成之后数组的长度；arr.push([参数1，[参数2，……]])<br>unshift()：前端插入数组元素；特性同上；arr.unshift([参数1，[参数2，……]])</p><h4 id="删除数组元素"><a href="#删除数组元素" class="headerlink" title="删除数组元素"></a>删除数组元素</h4><p>pop():删除最后一个数组元素；返回值为被删除的元素；arr.pop()<br>shift():删除第一个数组元素；特性同上；arr.shift()</p><pre class=" language-md"><code class="language-md">案例：筛选数组要求将数组[1500,1200,2000,2100,1800]中超过2000的删除，剩余的放到新数组中</code></pre><h4 id="数组元素排序"><a href="#数组元素排序" class="headerlink" title="数组元素排序"></a>数组元素排序</h4><p>翻转数组reverse()：arr.reverse();<br>冒泡排序sort()：arr.sort();仅限个位数<br>冒泡排序方法完善：arr.sort(function(a,b){return a - b;});其中，a-b为升序排序，降序为b-a</p><h4 id="数组索引方法："><a href="#数组索引方法：" class="headerlink" title="数组索引方法："></a>数组索引方法：</h4><p>indexOf(数组元素):返回该元素在数组中的索引号；从前往后查找，只返回第一个满足条件的索引号，没有满足条件的元素时，返回-1；arr.indexOf(‘zhangsan’)<br>lastIndexOf(数组元素)：返回该元素在数组中的索引号；从后往前查找，只返回第一个满足条件的索引号，没有满足条件的元素时，返回-1；arr.lastIndexOf(‘zhangsan’)</p><pre class=" language-md"><code class="language-md">案例：数组元素去重删掉数组['c','a','z','a','x','a','x','c','b',]中相同数组元素，只保留一个，并放到新数组中  思路：使用旧数组元素与新数组中的元素进行一一对比，有相同的，不进行添加，没有相同的，添加到新数组中  </code></pre><h4 id="数组转换为字符串"><a href="#数组转换为字符串" class="headerlink" title="数组转换为字符串"></a>数组转换为字符串</h4><p>toString()：将数数组转换为字符；arr.toString()<br>join([分隔符])：使用分隔符进行链接转换，分隔符须在单引号内填写，默认（空）使用逗号分隔  </p><h3 id="字符串对象"><a href="#字符串对象" class="headerlink" title="字符串对象"></a>字符串对象</h3><h4 id="基本包装类型"><a href="#基本包装类型" class="headerlink" title="基本包装类型"></a>基本包装类型</h4><p>基本包装类型：把简单数据类型包装成了复杂数据类型<br>js提供了三个特殊引用类型：string，number和boolean  </p><h4 id="字符串不可变"><a href="#字符串不可变" class="headerlink" title="字符串不可变"></a>字符串不可变</h4><p>变量在有值的基础上重新赋值之后，原来的值不会被新值覆盖，新旧两个值都在内存中  </p><h4 id="根据字符返回位置"><a href="#根据字符返回位置" class="headerlink" title="根据字符返回位置"></a>根据字符返回位置</h4><p>*字符串的所有方法，都不会修改字符串本身，操作完成会返回一个新的字符串<br>indexOf(要查找的字符，[起始位置])：从规定起始位置开始向后查找，默认从第一个字符开始<br>unindexOf（要查找的字符，[起始位置]）：从规定起始位置开始向前查找，默认从最后一个字符开始  </p><pre class=" language-md"><code class="language-md">案例：查找字符串"abcoefoxyozzopp"中所有"o"出现的位置以及次数</code></pre><h4 id="根据位置返回字符串"><a href="#根据位置返回字符串" class="headerlink" title="根据位置返回字符串"></a>根据位置返回字符串</h4><p>charat(参数)：返回对应位置的字符<br>string(参数)：返回对应位置字符的ascii值，通常用于判断按键操作<br>str[参数]：H5新增  </p><pre class=" language-md"><code class="language-md">案例：判断字符串"abcoefoxyozzopp"中出现最多的字符，并统计出现此数补充：对象名['属性名']：可以判断该对象中有无该属性</code></pre><p>参考：<a href="https://www.bilibili.com/video/BV1Sy4y1C7ha?p=183">统计出现次数最多的字符</a>  </p><h4 id="字符串拼接与截取"><a href="#字符串拼接与截取" class="headerlink" title="字符串拼接与截取"></a>字符串拼接与截取</h4><p>concat(str1,[str2,…])：用于在后面拼接两个或多个字符串，等效于使用+，后者用的更多<br>substr(参数1,参数2)：从参数1开始，参数2为要取的个数<br>slice(参数1,end)：从参数1开始，截取到end，end不取出<br>substring(参数1,end)：从参数1开始，截取到end，end不取出；不接收负值  </p><h4 id="替换字符串与字符串转换数组"><a href="#替换字符串与字符串转换数组" class="headerlink" title="替换字符串与字符串转换数组"></a>替换字符串与字符串转换数组</h4><p>replace(字符1,字符2)：将字符1替换为字符2；只将从左到右开始第一个匹配的字符替换掉<br>split(‘分隔符’)：将字符串转换为数组，分隔符根据字符串中的的分隔对应；与join的返回值相对应<br>eq：  </p><pre class=" language-javascript"><code class="language-javascript">str<span class="token operator">=</span><span class="token string">'red,black,yello,blue'</span><span class="token punctuation">;</span>str<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">','</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//或</span>str2<span class="token operator">=</span><span class="token string">'red&amp;black&amp;yello&amp;blue'</span><span class="token punctuation">;</span>str2<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'&amp;'</span><span class="token punctuation">)</span></code></pre><h2 id="简单数据类型与复杂数据类型"><a href="#简单数据类型与复杂数据类型" class="headerlink" title="简单数据类型与复杂数据类型"></a>简单数据类型与复杂数据类型</h2><p>基本数据类型或值类型，复杂类型又称为引用类型。<br>值类型：string，number，boolean，undefined，null（比较特殊，null的返回值为object）<br>引用类型：new创建的对象（系统对象，自定义对象），object，array，date等  </p><h3 id="堆栈"><a href="#堆栈" class="headerlink" title="堆栈"></a>堆栈</h3><p>空间分配：<br>简单数据类型存放在栈中，复杂数据类型放在堆中。<a href="https://www.bilibili.com/video/BV1Sy4y1C7ha?p=188">讲解参考</a><br>Tip：js中没有堆栈概念，只是为了便于理解代码执行，学习其他编程语言<br><font color="red">这部分内容如果感兴趣可以参考C语言的数据结构相关知识</font><br><a href="https://www.bilibili.com/video/BV1Sy4y1C7ha?p=189">简单数据类型参数传递</a><br><a href="https://www.bilibili.com/video/BV1Sy4y1C7ha?p=190">复杂数据类型参数传递</a></p><h2 id="apis"><a href="#apis" class="headerlink" title="apis"></a>apis</h2><p>api:一种工具，是以接口的方式实现的。<br>web api：是针对浏览器的页面元素的api。<br>详细的api接口也可在mdn中查找</p><h3 id="dom"><a href="#dom" class="headerlink" title="dom"></a>dom</h3><p>处理页面标记语言的标准接口<br>专有名词：树<br>文档，一个页面就是一个文档，用document表示<br>元素，页面中所有的标签都是元素，用element表示<br>节点，页面中所有的内容都是节点，用node表示</p><h3 id="获取元素"><a href="#获取元素" class="headerlink" title="获取元素"></a>获取元素</h3><h4 id="getElementByID-id"><a href="#getElementByID-id" class="headerlink" title="getElementByID(id)"></a>getElementByID(id)</h4><p>获取元素对象</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>time<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>asdfasdf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">var</span> timer <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementByID</span><span class="token punctuation">(</span><span class="token string">'time'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><p>Tip：因为html是从上往下加载的，所以要先写标签，然后在下面写script；id是大小写敏感的字符串；返回的是一个元素对象；console.dir()打印返回的元素对应的对象，可查看里面的属性和方法</p><h4 id="getElementsByTagName"><a href="#getElementsByTagName" class="headerlink" title="getElementsByTagName()"></a>getElementsByTagName()</h4><p>获取带有指定标签名的对象的集合</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>空山新雨后，自挂东南枝。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>欲穷千里目，自挂东南枝。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>爹娘闻女来，自挂东南枝。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>洞房花烛夜，自挂东南枝。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>天生我材必有用，各种自挂东南枝。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>人生在世不如意，不如自挂东南枝。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ol</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ol<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>空山新雨后，自挂东南枝。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>欲穷千里目，自挂东南枝。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>爹娘闻女来，自挂东南枝。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>洞房花烛夜，自挂东南枝。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>天生我材必有用，各种自挂东南枝。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>人生在世不如意，不如自挂东南枝。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ol</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">var</span> lis <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">'li'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>lis<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> olis <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">'ol'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>olis<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">'li'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//还可以获取某个元素(父元素)内部的所有指定标签名的子元素element.getElementsByTagName(标签名);</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><p>Tig：返回的是获取元素对象的集合，以伪数组的方式存储（页面没有标签就是空伪数组）；可采用遍历的方式输出元素对象里面的对象；得到的元素的对象是动态的；还可以获取某个元素(父元素)内部的所有指定标签名的子元素element.getElementsByTagName(标签名);eq：ul.getElementsByTagName(‘li’);父元素必须是单个对象（必须指明具体是哪一个元素）获取的时候不包括父元素自己，如想实现使用父元素名，可以在父元素标签处设置一个同名id；</p><h4 id="H5新增获取元素方法"><a href="#H5新增获取元素方法" class="headerlink" title="H5新增获取元素方法"></a>H5新增获取元素方法</h4><p>1、document.getElementsByClassName(‘类名’);：根据class类名放回元素集合</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cul<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>空山新雨后，自挂东南枝。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>欲穷千里目，自挂东南枝。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>爹娘闻女来，自挂东南枝。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>洞房花烛夜，自挂东南枝。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>天生我材必有用，各种自挂东南枝。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>人生在世不如意，不如自挂东南枝。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">var</span> lis <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByClassName</span><span class="token punctuation">(</span><span class="token string">'cul'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>lis<span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><p>2、document.querySelector(‘选择器’);：根据指定选择器返回<font color="red">第一个</font>元素对象</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>zgdnz<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>空山新雨后，自挂东南枝。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>欲穷千里目，自挂东南枝。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>爹娘闻女来，自挂东南枝。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>洞房花烛夜，自挂东南枝。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>zgdnz<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>天生我材必有用，各种自挂东南枝。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>人生得意须尽欢，不如自挂东南枝。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>SB<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>Are you ready kids?<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>br</span><span class="token punctuation">></span></span>准备好了吗？孩子们？<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>Aye, aye, captain!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>br</span><span class="token punctuation">></span></span>是的，船长<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>I can't hear you!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>br</span><span class="token punctuation">></span></span>太小声罗<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>Aye, aye, captain!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>br</span><span class="token punctuation">></span></span>是的，船长<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>Ooh<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>br</span><span class="token punctuation">></span></span>哦~<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>Who lives in a pineapple under the sea?<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>br</span><span class="token punctuation">></span></span>是谁住在深海的大菠萝里<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>SpongeBob SquarePants!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>br</span><span class="token punctuation">></span></span>海绵宝宝<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>Absorbent and yellow and porous is he!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>br</span><span class="token punctuation">></span></span>方方黄黄伸缩自如<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>SpongeBob SquarePants!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>br</span><span class="token punctuation">></span></span>海绵宝宝<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>If nautical nonsense be something you wish!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>br</span><span class="token punctuation">></span></span>如果四处探险是你的愿望<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>SpongeBob SquarePants!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>br</span><span class="token punctuation">></span></span>海绵宝宝<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>Then drop on the deck and flop like a fish!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>br</span><span class="token punctuation">></span></span>那就敲敲甲板让大鱼开路<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>SpongeBob SquarePants!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>br</span><span class="token punctuation">></span></span>海绵宝宝<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>Ready?<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>br</span><span class="token punctuation">></span></span>准备<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>SpongeBob SquarePants!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>br</span><span class="token punctuation">></span></span>海绵宝宝<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>SpongeBob SquarePants!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>br</span><span class="token punctuation">></span></span>海绵宝宝<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>SpongeBob SquarePants!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>br</span><span class="token punctuation">></span></span>海绵宝宝<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>SpongeBob SquarePants!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>br</span><span class="token punctuation">></span></span>海绵宝宝<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>Ha, ha, ha<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>br</span><span class="token punctuation">></span></span>哈哈<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>Ha, ha, ha<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>br</span><span class="token punctuation">></span></span>哈哈<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">var</span> lis <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByClassName</span><span class="token punctuation">(</span><span class="token string">'zgdnz'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>lis<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> lul <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.zgdnz'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>lul<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> sb<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'#SB'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>sb<span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><p>Tip：注意在填写选择器时，以class命名的，使用 . + 名称，使用id命名的，使用 # + 名称；<br>3、document.querySelectorAll();：返回指定选择器的所有元素对象集合（伪数组）</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>zgdnz<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>空山新雨后，自挂东南枝。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>欲穷千里目，自挂东南枝。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>爹娘闻女来，自挂东南枝。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>洞房花烛夜，自挂东南枝。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>zgdnz<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>天生我材必有用，各种自挂东南枝。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>人生得意须尽欢，不如自挂东南枝。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">var</span> lis <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByClassName</span><span class="token punctuation">(</span><span class="token string">'zgdnz'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>lis<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> lul <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.zgdnz'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>lul<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> zgdnzall<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">'.zgdnz'</span><span class="token punctuation">)</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>zgdnzall<span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><h4 id="获取body或html中的元素"><a href="#获取body或html中的元素" class="headerlink" title="获取body或html中的元素"></a>获取body或html中的元素</h4><p>获取body元素对象<br>document.body<br>获取html元素对象<br>document.documentElement</p><h4 id="事件三要素"><a href="#事件三要素" class="headerlink" title="事件三要素"></a>事件三要素</h4><p>事件源，事件类型，事件处理程序</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>空山新雨后<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>       <span class="token comment" spellcheck="true">&lt;!-- 事件源 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">var</span> btn<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'btn'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//事件类型</span>    btn<span class="token punctuation">.</span>onclick <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'自挂东南枝。'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>   <span class="token comment" spellcheck="true">//事件处理程序</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><h4 id="执行事件过程"><a href="#执行事件过程" class="headerlink" title="执行事件过程"></a>执行事件过程</h4><p>1获取事件源<br>2注册事件（绑定事件）<br>3添加事件处理程序</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>空山新雨后<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>       <span class="token comment" spellcheck="true">&lt;!-- 事件源 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">var</span> btn<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'btn'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//获取事件源</span>    btn<span class="token punctuation">.</span>onclick<span class="token comment" spellcheck="true">/*绑定事件，注册事件*/</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'自挂东南枝。'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>   <span class="token comment" spellcheck="true">//添加事件处理程序</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><h4 id="操作元素-修改元素内容"><a href="#操作元素-修改元素内容" class="headerlink" title="操作元素-修改元素内容"></a>操作元素-修改元素内容</h4><p>element.innerText：从起始位置到终止位置的内容，但他会去除html标签，同时空格和换行也会去掉（不识别html标签）</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>空山新雨后，<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>__________。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">var</span> btn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'button'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> div <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    btn<span class="token punctuation">.</span>onclick <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        div<span class="token punctuation">.</span>innerText <span class="token operator">=</span> <span class="token string">'自挂东南枝。'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><p>元素可以不用添加事件，直接对element.innerText进行赋值</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>空山新雨后，<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>__________。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">var</span> btn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'button'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> div <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    div<span class="token punctuation">.</span>innerText <span class="token operator">=</span> <span class="token string">'直接自挂东南枝。'</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//可直接调用</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><p>element.innerText：从起始位置到终止位置的内容，包含html标签，同时保留空格和换行（识别html标签）</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>空山新雨后，<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>__________。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">var</span> btn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'button'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> div <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    btn<span class="token punctuation">.</span>onclick <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        div<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">'&lt;strong>自挂东南枝。&lt;/strong>'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//使用innerHTML</span>    <span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><h4 id="innerText和innerHTML的区别"><a href="#innerText和innerHTML的区别" class="headerlink" title="innerText和innerHTML的区别"></a>innerText和innerHTML的区别</h4><p>element.innerText非官方发布的，不识别html标签；element.innerHTML是W3C组织推荐的，识别html标签（例子见上）。<br>这两个属性是可读写的，可以获取元素里面的内容，但是element.innerText会去除html标签，同时空格和换行也会去掉，element.innerHTML会保留html标签、空格和换行</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>__________。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>    spongebob    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>SquarePants<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">var</span> div <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> p<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'p'</span><span class="token punctuation">)</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>innerText<span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>div<span class="token punctuation">.</span>innerHTML<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//可以尝试将最后两行中p和div换换位置看一下效果</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><h4 id="操作元素-修改元素属性"><a href="#操作元素-修改元素属性" class="headerlink" title="操作元素-修改元素属性"></a>操作元素-修改元素属性</h4><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>change<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>改为B站链接<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://www.baidu.com<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>百度一下，你就知道<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">var</span> btn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'change'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> ln <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    btn<span class="token punctuation">.</span>onclick <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>ln<span class="token punctuation">.</span>innerHTML<span class="token operator">===</span><span class="token string">'百度一下，你就知道'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//这里加了一个判断，通过判断是否与默认值相同来改变属性值</span>            ln<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">'哔哩哔哩'</span><span class="token punctuation">;</span>            ln<span class="token punctuation">.</span>href <span class="token operator">=</span> <span class="token string">'https://wwww.bilibili.com'</span><span class="token punctuation">;</span>            btn<span class="token punctuation">.</span>innerHTML<span class="token operator">=</span><span class="token string">'改为百度链接'</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            ln<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">'百度一下，你就知道'</span><span class="token punctuation">;</span>            ln<span class="token punctuation">.</span>href <span class="token operator">=</span> <span class="token string">'https://www.baidu.com'</span><span class="token punctuation">;</span>            btn<span class="token punctuation">.</span>innerHTML<span class="token operator">=</span><span class="token string">'改为B站链接'</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><pre class=" language-md"><code class="language-md">案例：分时问候通过不同的时间来改变不同的图片和问候语上午访问显示上午图片，显示上午好下午访问显示下午图片，显示下午好晚上访问显示晚上图片，显示晚上好</code></pre><p><a href="https://www.bilibili.com/video/BV1Sy4y1C7ha?p=205">案例参考</a></p><h4 id="操作元素-修改表单属性"><a href="#操作元素-修改表单属性" class="headerlink" title="操作元素-修改表单属性"></a>操作元素-修改表单属性</h4><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>按钮<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ipt<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>哈喽哇！<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">var</span> btn<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'button'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> ipt<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'ipt'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     btn<span class="token punctuation">.</span>onclick<span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        ipt<span class="token punctuation">.</span>value<span class="token operator">=</span><span class="token string">'客户，感受我们的下葬服务吧！'</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><p>可以发现，前面修改显示内容都是用innerHTML或innerText修改，但是表单内容是通过修改特定的属性值（value）来实现的，前者都是双标签，后者为单标签。<br>禁用按钮</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>按钮<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ipt<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>哈喽哇！<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">var</span> btn<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'button'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> ipt<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'ipt'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     btn<span class="token punctuation">.</span>onclick<span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        ipt<span class="token punctuation">.</span>value<span class="token operator">=</span><span class="token string">'客户，感受我们的下葬服务吧！'</span><span class="token punctuation">;</span>        btn<span class="token punctuation">.</span>disabled <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//禁用按钮</span>     <span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><p>this.disabled = true;也可实现相同的功能，this指向的是事件的调用者，上例中指向的就是btn</p><pre class=" language-md"><code class="language-md">案例：密文显示输入密码功能分析：用户名输入时正常显示，密码输入时默认隐藏，但有显示\隐藏切换按钮</code></pre><p><a href="https://www.bilibili.com/video/BV1Sy4y1C7ha?p=207">参考视频</a></p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>pwd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>tip<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>显示<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token comment" spellcheck="true">// var flag = 0;      这个变量是另一种方法的前置，详情在下面</span>    <span class="token keyword">var</span> ipt <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'pwd'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> btn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'tip'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    btn<span class="token punctuation">.</span>onclick <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>ipt<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">'password'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            ipt<span class="token punctuation">.</span>type <span class="token operator">=</span> <span class="token string">'text'</span><span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">'隐藏'</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            ipt<span class="token punctuation">.</span>type <span class="token operator">=</span> <span class="token string">'password'</span><span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">'显示'</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//这里可以换成另一个方式，使用一个变量来控制判断条件，注意这个变量要在全局下声明</span>        <span class="token comment" spellcheck="true">// if (flag == 0) {</span>        <span class="token comment" spellcheck="true">//     ipt.type = 'text';</span>        <span class="token comment" spellcheck="true">//     this.innerHTML = '隐藏';</span>        <span class="token comment" spellcheck="true">//     flag = 1;</span>        <span class="token comment" spellcheck="true">// } else {</span>        <span class="token comment" spellcheck="true">//     ipt.type = 'password';</span>        <span class="token comment" spellcheck="true">//     this.innerHTML = '显示';</span>        <span class="token comment" spellcheck="true">//     flag = 0;</span>        <span class="token comment" spellcheck="true">//  }</span>    <span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><h4 id="操作元素-修改样式属性"><a href="#操作元素-修改样式属性" class="headerlink" title="操作元素-修改样式属性"></a>操作元素-修改样式属性</h4><p>element.style行内样式操作</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">        <span class="token selector">div</span><span class="token punctuation">{</span>            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">200</span>px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">200</span>px<span class="token punctuation">;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>div<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token keyword">var</span> div<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        div<span class="token punctuation">.</span>onclick<span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>backgroundColor<span class="token operator">=</span><span class="token string">'yellow'</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></code></pre><p>行内样式优先级高，适用于样式修改较少，实现功能简单的情况</p><pre class=" language-md"><code class="language-md">案例：关闭图片思路：利用css的显示和隐藏：display:none隐藏元素；display:block显示元素</code></pre><p><a href="https://www.bilibili.com/video/BV1Sy4y1C7ha?p=210">参考视频</a></p><pre class=" language-md"><code class="language-md">案例：循环精灵图思路分析：精灵图排列要有顺序，一般需要竖向排列，然后使用for循环</code></pre><p><a href="https://www.bilibili.com/video/BV1Sy4y1C7ha?p=211">参考视频</a></p><pre class=" language-md"><code class="language-md">案例：显示\隐藏文本框文字</code></pre><p><a href="https://www.bilibili.com/video/BV1Sy4y1C7ha?p=212">参考视频</a><br>element.className类名样式操作</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">        <span class="token selector">div</span><span class="token punctuation">{</span>            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">200</span>px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">200</span>px<span class="token punctuation">;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token class">.change</span></span><span class="token punctuation">{</span>                   <span class="token comment" spellcheck="true">/* 引用class类名以.开头 */</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> yellow<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>d1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token keyword">var</span> div<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'d1'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        d1<span class="token punctuation">.</span>onclick<span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>className<span class="token operator">=</span><span class="token string">'change'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">/* 使用element.className调用类为其元素使用 */</span>        <span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></code></pre><pre class=" language-md"><code class="language-md">案例：密码框格式提示正误思路分析：1，焦点获得和焦点失去显示相应的提示2，输入字符符合要求后显示正确提示，不符合要求提示相应不符合要求的信息</code></pre><h4 id="小结练习"><a href="#小结练习" class="headerlink" title="小结练习"></a>小结练习</h4><pre class=" language-md"><code class="language-md">1.登陆界面账号\密码显示隐藏内容。2.京东关闭广告（直接隐藏）3.新浪下拉菜单（鼠标悬浮显示菜单）4.页面开关灯</code></pre><h4 id="排他思路"><a href="#排他思路" class="headerlink" title="排他思路"></a>排他思路</h4><p>如果有同一组元素，想让他们实现同一个样式（功能），但是每次生效的都是同组中的某一个元素时<br>先把其他元素的样式（功能）清空，再进行某一个元素添加某个样式（功能）<br>利用循环</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>按钮1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>按钮2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>按钮3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>按钮4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>按钮5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">var</span> btn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">'button'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> btn<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        btn<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>onclick <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> btn<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                btn<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>backgroundColor <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>backgroundColor <span class="token operator">=</span> <span class="token string">'pink'</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><p>案例1：百度换肤</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">        <span class="token selector">body</span><span class="token punctuation">{</span>            <span class="token property">background-size</span><span class="token punctuation">:</span> <span class="token number">1920</span>px,<span class="token number">1080</span>px<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector">img </span><span class="token punctuation">{</span>            <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">70</span>px<span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">140</span>px<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img/2098/01.jpg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img/2098/02.jpg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img/2098/03.jpg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img/2098/04.jpg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img/2098/05.jpg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img/2098/06.jpg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token keyword">var</span> bgimg <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">'img'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> bg <span class="token operator">=</span> document<span class="token punctuation">.</span>body<span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> bgimg<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            bgimg<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>onclick <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span> <span class="token punctuation">;</span>i<span class="token operator">&lt;</span>bgimg<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                    bg<span class="token punctuation">.</span>background<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                bg<span class="token punctuation">.</span>background<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>src<span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></code></pre><!-- 案例2：表格隔行变色：鼠标经过（onmouseover经过,onmouseout离开）某个单元格时，该单元格所在行上的所有单元格都会变色，表头不变色```html```表单全选和取消全选样例![表单全选和取消全选](img/Front-end/P219.png)```html```[P219](https://www.bilibili.com/video/BV1Sy4y1C7ha?p=219)暂停，倒回去html+css，完事再回来 --><p>（未完待续……）<br><strong>更多内容：</strong> </p><ul><li><a href="http://localhost:4000/2022/03/23/html/">HTML 教程</a></li><li><a href="http://localhost:4000/2022/03/23/css/">CSS 梳理</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 前端 </tag>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>源Markdown 语法整理</title>
      <link href="/2022/03/23/markdown/"/>
      <url>/2022/03/23/markdown/</url>
      
        <content type="html"><![CDATA[<h1 id="Markdown-语法整理"><a href="#Markdown-语法整理" class="headerlink" title="Markdown 语法整理"></a>Markdown 语法整理</h1><p>  开门见山</p><h2 id="Markdown-标题"><a href="#Markdown-标题" class="headerlink" title="Markdown 标题"></a>Markdown 标题</h2><p>Markdown 标题有两种格式。<br>1、使用 = 和 - 标记一级和二级标题<br>= 和 - 标记语法格式如下：</p><pre class=" language-markdown"><code class="language-markdown">我展示的是一级标题=================我展示的是二级标题<span class="token hr punctuation">-----------------</span></code></pre><p>展示如下（）：<br>（制作动图）<br>*2、使用#号标记<br>使用#号可表示1-6级标题，一级标题对应一个#号，二级标题对应两个#号，以此类推。</p><pre class=" language-md"><code class="language-md"># 一级标题## 二级标题### 三级标题#### 四级标题##### 五级标题###### 六级标题</code></pre><p>展示如下：<br>（制作动图）</p><h2 id="Markdown-段落"><a href="#Markdown-段落" class="headerlink" title="Markdown 段落"></a>Markdown 段落</h2><p>Markdown 段落没有特殊的格式，直接编写文字就好，段落的换行是使用两个以上空格加上回车。</p><p>当然也可以在段落后面使用一个空行来表示重新开始一个段落。</p><h2 id="Markdown-字体"><a href="#Markdown-字体" class="headerlink" title="Markdown 字体"></a>Markdown 字体</h2><pre class=" language-markdown"><code class="language-markdown"><span class="token italic"><span class="token punctuation">*</span>斜体文本<span class="token punctuation">*</span></span><span class="token italic"><span class="token punctuation">_</span>斜体文本<span class="token punctuation">_</span></span><span class="token bold"><span class="token punctuation">**</span>粗体文本<span class="token punctuation">**</span></span><span class="token bold"><span class="token punctuation">__</span>粗体文本<span class="token punctuation">__</span></span><span class="token bold"><span class="token punctuation">**</span>*粗斜体文本<span class="token punctuation">**</span></span>*<span class="token bold"><span class="token punctuation">__</span>_粗斜体文本<span class="token punctuation">__</span></span>_</code></pre><h2 id="分隔线"><a href="#分隔线" class="headerlink" title="分隔线"></a>分隔线</h2><p>你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。下面每种写法都可以建立分隔线：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token hr punctuation">***</span><span class="token hr punctuation">* * *</span><span class="token hr punctuation">*****</span><span class="token hr punctuation">- - -</span><span class="token hr punctuation">----------</span></code></pre><h2 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h2><p>如果段落上的文字要添加删除线，只需要在文字的两端加上两个波浪线<code>~~</code>即可，实例如下：</p><pre class=" language-markdown"><code class="language-markdown">RUNOOB.COMGOOGLE.COM~~BAIDU.COM~~</code></pre><h2 id="下划线"><a href="#下划线" class="headerlink" title="下划线"></a>下划线</h2><p>下划线可以通过HTML的&lt;u&gt;标签来实现：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>u</span><span class="token punctuation">></span></span>带下划线文本<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>u</span><span class="token punctuation">></span></span></code></pre><h2 id="脚注"><a href="#脚注" class="headerlink" title="脚注"></a>脚注</h2><p>脚注是对文本的补充说明。<br>Markdown 脚注的格式如下:</p><pre class=" language-markdown"><code class="language-markdown">创建脚注格式类似这样 [^RUNOOB]。<span class="token url-reference url"><span class="token punctuation">[</span><span class="token variable">^RUNOOB</span><span class="token punctuation">]</span><span class="token punctuation">:</span> 菜鸟教程</span> -- 学的不仅是技术，更是梦想！！！</code></pre><h2 id="Markdown-列表"><a href="#Markdown-列表" class="headerlink" title="Markdown 列表"></a>Markdown 列表</h2><p>Markdown 支持有序列表和无序列表。<br>无序列表使用星号(*)、加号(+)或是减号(-)作为列表标记，这些标记后面要添加一个空格，然后再填写内容：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token list punctuation">*</span> 第一项<span class="token list punctuation">*</span> 第二项<span class="token list punctuation">*</span> 第三项<span class="token list punctuation">+</span> 第一项<span class="token list punctuation">+</span> 第二项<span class="token list punctuation">+</span> 第三项<span class="token list punctuation">-</span> 第一项<span class="token list punctuation">-</span> 第二项<span class="token list punctuation">-</span> 第三项</code></pre><p>有序列表使用数字并加上 . 号来表示，如：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token list punctuation">1.</span> 第一项<span class="token list punctuation">2.</span> 第二项<span class="token list punctuation">3.</span> 第三项</code></pre><p>列表嵌套只需在子列表中的选项前面添加四个空格即可：</p><h3 id="列表嵌套"><a href="#列表嵌套" class="headerlink" title="列表嵌套"></a>列表嵌套</h3><pre class=" language-markdown"><code class="language-markdown"><span class="token list punctuation">1.</span> 第一项：<span class="token code keyword">    - 第一项嵌套的第一个元素</span><span class="token code keyword">    - 第一项嵌套的第二个元素</span><span class="token list punctuation">2.</span> 第二项：<span class="token code keyword">    - 第二项嵌套的第一个元素</span><span class="token code keyword">    - 第二项嵌套的第二个元素</span></code></pre><h2 id="Markdown-区块"><a href="#Markdown-区块" class="headerlink" title="Markdown 区块"></a>Markdown 区块</h2><p>Markdown 区块引用是在段落开头使用 &gt; 符号 ，然后后面紧跟一个空格符号：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token blockquote punctuation">></span> 区块引用<span class="token blockquote punctuation">></span> 菜鸟教程<span class="token blockquote punctuation">></span> 学的不仅是技术更是梦想</code></pre><p>另外区块是可以嵌套的，一个 &gt; 符号是最外层，两个 &gt; 符号是第一层嵌套，以此类推：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token blockquote punctuation">></span> 最外层<span class="token blockquote punctuation">> ></span> 第一层嵌套<span class="token blockquote punctuation">> > ></span> 第二层嵌套</code></pre><h3 id="区块中使用列表"><a href="#区块中使用列表" class="headerlink" title="区块中使用列表"></a>区块中使用列表</h3><p>区块中使用列表实例如下：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token blockquote punctuation">></span> 区块中使用列表<span class="token blockquote punctuation">></span> <span class="token list punctuation">1.</span> 第一项<span class="token blockquote punctuation">></span> <span class="token list punctuation">2.</span> 第二项<span class="token blockquote punctuation">></span> <span class="token list punctuation">+</span> 第一项<span class="token blockquote punctuation">></span> <span class="token list punctuation">+</span> 第二项<span class="token blockquote punctuation">></span> <span class="token list punctuation">+</span> 第三项</code></pre><h3 id="列表中使用区块"><a href="#列表中使用区块" class="headerlink" title="列表中使用区块"></a>列表中使用区块</h3><p>如果要在列表项目内放进区块，那么就需要在 &gt; 前添加四个空格的缩进。<br>列表中使用区块实例如下：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token list punctuation">*</span> 第一项<span class="token code keyword">    > 菜鸟教程</span><span class="token code keyword">    > 学的不仅是技术更是梦想</span><span class="token list punctuation">*</span> 第二项</code></pre><h2 id="Markdown-代码"><a href="#Markdown-代码" class="headerlink" title="Markdown 代码"></a>Markdown 代码</h2><p>如果是段落上的一个函数或片段的代码可以用反引号把它包起来（`），例如：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token code keyword">`printf()`</span> 函数</code></pre><h3 id="代码区块"><a href="#代码区块" class="headerlink" title="代码区块"></a>代码区块</h3><p>代码区块使用 4 个空格或者一个制表符（Tab 键）。</p><pre class=" language-markdown"><code class="language-markdown"><span class="token code keyword">    ```javascript</span><span class="token code keyword">    $(document).ready(function () {</span><span class="token code keyword">        alert('RUNOOB');</span><span class="token code keyword">    });</span><span class="token code keyword">    ```</span></code></pre><h2 id="Markdown-链接"><a href="#Markdown-链接" class="headerlink" title="Markdown 链接"></a>Markdown 链接</h2><p>链接使用方法如下：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token url">[链接描述](链接地址)</span>或者<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>链接地址</span><span class="token punctuation">></span></span></code></pre><h2 id="高级链接"><a href="#高级链接" class="headerlink" title="高级链接"></a>高级链接</h2><p>我们可以通过变量来设置一个链接，变量赋值在文档末尾进行：</p><pre class=" language-markdown"><code class="language-markdown">这个链接用 1 作为网址变量 <span class="token url">[Google][<span class="token variable">1</span>]</span>这个链接用 runoob 作为网址变量 <span class="token url">[Runoob][<span class="token variable">runoob</span>]</span>然后在文档的结尾为变量赋值（网址）  <span class="token url-reference url"><span class="token punctuation">[</span><span class="token variable">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span> http://www.google.com/</span>  <span class="token url-reference url"><span class="token punctuation">[</span><span class="token variable">runoob</span><span class="token punctuation">]</span><span class="token punctuation">:</span> http://www.runoob.com/</span></code></pre><h2 id="Markdown-图片"><a href="#Markdown-图片" class="headerlink" title="Markdown 图片"></a>Markdown 图片</h2><p>Markdown 图片语法格式如下：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token url">![alt 属性文本](图片地址)</span><span class="token url">![alt 属性文本](图片地址 <span class="token string">"可选标题"</span>)</span></code></pre><p>开头一个感叹号 !<br>接着一个方括号，里面放上图片的替代文字<br>接着一个普通括号，里面放上图片的网址，最后还可以用引号包住并加上选择性的 ‘title’ 属性的文字。<br>当然，你也可以像网址那样对图片网址使用变量:</p><pre class=" language-markdown"><code class="language-markdown">这个链接用 1 作为网址变量 <span class="token url">[RUNOOB][<span class="token variable">1</span>]</span>.然后在文档的结尾为变量赋值（网址）<span class="token url-reference url"><span class="token punctuation">[</span><span class="token variable">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span> http://static.runoob.com/images/runoob-logo.png</span></code></pre><p>Markdown 还没有办法指定图片的高度与宽度，如果你需要的话，你可以使用普通的 &lt;img&gt; 标签。</p><pre class=" language-markdown"><code class="language-markdown"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://static.runoob.com/images/runoob-logo.png<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>50%<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></code></pre><h2 id="Markdown-表格"><a href="#Markdown-表格" class="headerlink" title="Markdown 表格"></a>Markdown 表格</h2><p>Markdown 制作表格使用 | 来分隔不同的单元格，使用 - 来分隔表头和其他行。</p><p>语法格式如下：</p><pre class=" language-markdown"><code class="language-markdown">|  表头   | 表头  ||  ----  | ----  || 单元格  | 单元格 || 单元格  | 单元格 |</code></pre><p>对齐方式<br>我们可以设置表格的对齐方式：</p><p>-: 设置内容和标题栏居右对齐。<br>:- 设置内容和标题栏居左对齐。<br>:-: 设置内容和标题栏居中对齐。</p><pre class=" language-markdown"><code class="language-markdown">| 左对齐 | 右对齐 | 居中对齐 || :-----| ----: | :----: || 单元格 | 单元格 | 单元格 || 单元格 | 单元格 | 单元格 |</code></pre><h2 id="Markdown-高级技巧"><a href="#Markdown-高级技巧" class="headerlink" title="Markdown 高级技巧"></a>Markdown 高级技巧</h2><h3 id="支持的-HTML-元素"><a href="#支持的-HTML-元素" class="headerlink" title="支持的 HTML 元素"></a>支持的 HTML 元素</h3><p>不在 Markdown 涵盖范围之内的标签，都可以直接在文档里面用 HTML 撰写。<br>目前支持的 HTML 元素有：&lt;kbd&gt; &lt;b&gt; &lt;i&gt; &lt;em&gt; &lt;sup&gt; &lt;sub&gt; &lt;br&gt;等 ，如：</p><pre class=" language-markdown"><code class="language-markdown">使用 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>kbd</span><span class="token punctuation">></span></span>Ctrl<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>kbd</span><span class="token punctuation">></span></span>+<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>kbd</span><span class="token punctuation">></span></span>Alt<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>kbd</span><span class="token punctuation">></span></span>+<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>kbd</span><span class="token punctuation">></span></span>Del<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>kbd</span><span class="token punctuation">></span></span> 重启电脑</code></pre><h3 id="转义"><a href="#转义" class="headerlink" title="转义"></a>转义</h3><p>Markdown 使用了很多特殊符号来表示特定的意义，如果需要显示特定的符号则需要使用转义字符，Markdown 使用反斜杠转义特殊字符：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token bold"><span class="token punctuation">**</span>文本加粗<span class="token punctuation">**</span></span> \*\* 正常显示星号 \*\*</code></pre><p>Markdown 支持以下这些符号前面加上反斜杠来帮助插入普通的符号：</p><pre class=" language-md"><code class="language-md">\   反斜线`   反引号*   星号_   下划线{}  花括号[]  方括号()  小括号#   井字号+   加号-   减号.   英文句点!   感叹号</code></pre><h3 id="公式"><a href="#公式" class="headerlink" title="公式"></a>公式</h3><p>Markdown Preview Enhanced 使用 KaTeX 或者 MathJax 来渲染数学表达式。</p><p>KaTeX 拥有比 MathJax 更快的性能，但是它却少了很多 MathJax 拥有的特性。你可以查看 KaTeX supported functions/symbols 来了解 KaTeX 支持那些符号和函数。</p><p>默认下的分隔符：</p><p>$…$ 或者 \(…\) 中的数学表达式将会在行内显示。<br>$$…$$ 或者 \[…\] 或者 ```math 中的数学表达式将会在块内显示。</p><pre class=" language-markdown"><code class="language-markdown">$$\begin{Bmatrix}   a &amp; b \\   c &amp; d\end{Bmatrix}$$$$\begin{CD}   A @>a>> B \\@VbVV @AAcA \\   C @= D\end{CD}$$</code></pre><h2 id="扩展内容"><a href="#扩展内容" class="headerlink" title="扩展内容"></a>扩展内容</h2><p>typora 画流程图、时序图(顺序图)、甘特图<br>复制以下代码使用 typora 的源码模式粘贴到编辑器中查看效果：<br>1、横向流程图源码格式：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token code keyword">    ```mermaid</span><span class="token code keyword">    graph LR</span><span class="token code keyword">    A[方形] -->B(圆角)</span><span class="token code keyword">    B --> C{条件a}</span><span class="token code keyword">    C -->|a=1| D[结果1]</span><span class="token code keyword">    C -->|a=2| E[结果2]</span><span class="token code keyword">    F[横向流程图]</span><span class="token code keyword">    ```</span></code></pre><pre class=" language-mermaid"><code class="language-mermaid">graph LRA[方形] -->B(圆角)    B --> C{条件a}    C -->|a=1| D[结果1]    C -->|a=2| E[结果2]    F[横向流程图]</code></pre><p>2、竖向流程图源码格式：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token code keyword">    ```mermaid</span><span class="token code keyword">    graph TD</span><span class="token code keyword">    A[方形] --> B(圆角)</span><span class="token code keyword">    B --> C{条件a}</span><span class="token code keyword">    C --> |a=1| D[结果1]</span><span class="token code keyword">    C --> |a=2| E[结果2]</span><span class="token code keyword">    F[竖向流程图]</span>    <span class="token code keyword">    ```</span></code></pre><pre class=" language-mermaid"><code class="language-mermaid">graph TDA[方形] --> B(圆角)    B --> C{条件a}    C --> |a=1| D[结果1]    C --> |a=2| E[结果2]    F[竖向流程图]</code></pre><p>3、标准流程图源码格式：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token code keyword">    ```flow</span><span class="token code keyword">    st=>start: 开始框</span><span class="token code keyword">    op=>operation: 处理框</span><span class="token code keyword">    cond=>condition: 判断框(是或否?)</span><span class="token code keyword">    sub1=>subroutine: 子流程</span><span class="token code keyword">    io=>inputoutput: 输入输出框</span><span class="token code keyword">    e=>end: 结束框</span><span class="token code keyword">    st->op->cond</span><span class="token code keyword">    cond(yes)->io->e</span><span class="token code keyword">    cond(no)->sub1(right)->op</span><span class="token code keyword">    ```</span></code></pre><pre class=" language-flow"><code class="language-flow">st=>start: 开始框op=>operation: 处理框cond=>condition: 判断框(是或否?)sub1=>subroutine: 子流程io=>inputoutput: 输入输出框e=>end: 结束框st->op->condcond(yes)->io->econd(no)->sub1(right)->op</code></pre><p>4、标准流程图源码格式（横向）：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token code keyword">    ```flow</span><span class="token code keyword">    st=>start: 开始框</span><span class="token code keyword">    op=>operation: 处理框</span><span class="token code keyword">    cond=>condition: 判断框(是或否?)</span><span class="token code keyword">    sub1=>subroutine: 子流程</span><span class="token code keyword">    io=>inputoutput: 输入输出框</span><span class="token code keyword">    e=>end: 结束框</span><span class="token code keyword">    st(right)->op(right)->cond</span><span class="token code keyword">    cond(yes)->io(bottom)->e</span><span class="token code keyword">    cond(no)->sub1(right)->op</span><span class="token code keyword">    ```</span></code></pre><pre class=" language-flow"><code class="language-flow">st=>start: 开始框op=>operation: 处理框cond=>condition: 判断框(是或否?)sub1=>subroutine: 子流程io=>inputoutput: 输入输出框e=>end: 结束框st(right)->op(right)->condcond(yes)->io(bottom)->econd(no)->sub1(right)->op</code></pre><p>5、UML时序图源码样例：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token code keyword">    ```sequence</span><span class="token code keyword">    对象A->对象B: 对象B你好吗?（请求）</span><span class="token code keyword">    Note right of 对象B: 对象B的描述</span><span class="token code keyword">    Note left of 对象A: 对象A的描述(提示)</span><span class="token code keyword">    对象B-->对象A: 我很好(响应)</span><span class="token code keyword">    对象A->对象B: 你真的好吗？</span><span class="token code keyword">    ```</span></code></pre><pre class=" language-sequence"><code class="language-sequence">对象A->对象B: 对象B你好吗?（请求）Note right of 对象B: 对象B的描述Note left of 对象A: 对象A的描述(提示)对象B-->对象A: 我很好(响应)对象A->对象B: 你真的好吗？</code></pre><p>6、UML时序图源码复杂样例：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token code keyword">    ```sequence</span><span class="token code keyword">    Title: 标题：复杂使用</span><span class="token code keyword">    对象A->对象B: 对象B你好吗?（请求）</span><span class="token code keyword">    Note right of 对象B: 对象B的描述</span><span class="token code keyword">    Note left of 对象A: 对象A的描述(提示)</span><span class="token code keyword">    对象B-->对象A: 我很好(响应)</span><span class="token code keyword">    对象B->小三: 你好吗</span><span class="token code keyword">    小三-->>对象A: 对象B找我了</span><span class="token code keyword">    对象A->对象B: 你真的好吗？</span><span class="token code keyword">    Note over 小三,对象B: 我们是朋友</span><span class="token code keyword">    participant C</span><span class="token code keyword">    Note right of C: 没人陪我玩</span><span class="token code keyword">    ```</span></code></pre><pre class=" language-sequence"><code class="language-sequence">Title: 标题：复杂使用对象A->对象B: 对象B你好吗?（请求）Note right of 对象B: 对象B的描述Note left of 对象A: 对象A的描述(提示)对象B-->对象A: 我很好(响应)对象B->小三: 你好吗小三-->>对象A: 对象B找我了对象A->对象B: 你真的好吗？Note over 小三,对象B: 我们是朋友participant CNote right of C: 没人陪我玩</code></pre><p>7、UML标准时序图样例：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token code keyword">    ```mermaid</span><span class="token code keyword">    %% 时序图例子,-> 直线，-->虚线，->>实线箭头</span><span class="token code keyword">      sequenceDiagram</span><span class="token code keyword">        participant 张三</span><span class="token code keyword">        participant 李四</span><span class="token code keyword">        张三->王五: 王五你好吗？</span><span class="token code keyword">        loop 健康检查</span><span class="token code keyword">            王五->王五: 与疾病战斗</span><span class="token code keyword">        end</span><span class="token code keyword">        Note right of 王五: 合理 食物 &lt;br/>看医生...</span><span class="token code keyword">        李四-->>张三: 很好!</span><span class="token code keyword">        王五->李四: 你怎么样?</span><span class="token code keyword">        李四-->王五: 很好!</span><span class="token code keyword">    ```</span></code></pre><pre class=" language-mermaid"><code class="language-mermaid">%% 时序图例子,-> 直线，-->虚线，->>实线箭头  sequenceDiagram    participant 张三    participant 李四    张三->王五: 王五你好吗？    loop 健康检查        王五->王五: 与疾病战斗    end    Note right of 王五: 合理 食物 <br/>看医生...    李四-->>张三: 很好!    王五->李四: 你怎么样?    李四-->王五: 很好!</code></pre><p>8、甘特图样例：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token code keyword">    ```mermaid</span><span class="token code keyword">            gantt</span><span class="token code keyword">            dateFormat  YYYY-MM-DD</span><span class="token code keyword">            title 软件开发甘特图</span><span class="token code keyword">            section 设计</span><span class="token code keyword">            需求                      :done,    des1, 2014-01-06,2014-01-08</span><span class="token code keyword">            原型                      :active,  des2, 2014-01-09, 3d</span><span class="token code keyword">            UI设计                     :         des3, after des2, 5d</span><span class="token code keyword">        未来任务                     :         des4, after des3, 5d</span><span class="token code keyword">            section 开发</span><span class="token code keyword">            学习准备理解需求                      :crit, done, 2014-01-06,24h</span><span class="token code keyword">            设计框架                             :crit, done, after des2, 2d</span><span class="token code keyword">            开发                                 :crit, active, 3d</span><span class="token code keyword">            未来任务                              :crit, 5d</span><span class="token code keyword">            耍                                   :2d</span><span class="token code keyword">            section 测试</span><span class="token code keyword">            功能测试                              :active, a1, after des3, 3d</span><span class="token code keyword">            压力测试                               :after a1  , 20h</span><span class="token code keyword">            测试报告                               : 48h</span><span class="token code keyword">    ```</span></code></pre><pre class=" language-mermaid"><code class="language-mermaid">        gantt        dateFormat  YYYY-MM-DD        title 软件开发甘特图        section 设计        需求                      :done,    des1, 2014-01-06,2014-01-08        原型                      :active,  des2, 2014-01-09, 3d        UI设计                     :         des3, after des2, 5d    未来任务                     :         des4, after des3, 5d        section 开发        学习准备理解需求                      :crit, done, 2014-01-06,24h        设计框架                             :crit, done, after des2, 2d        开发                                 :crit, active, 3d        未来任务                              :crit, 5d        耍                                   :2d        section 测试        功能测试                              :active, a1, after des3, 3d        压力测试                               :after a1  , 20h        测试报告                               : 48h</code></pre>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> MD </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS 梳理</title>
      <link href="/2022/03/23/css/"/>
      <url>/2022/03/23/css/</url>
      
        <content type="html"><![CDATA[<h1 id="css"><a href="#css" class="headerlink" title="css"></a>css</h1><p>css格式<br>选择器{属性:值;}</p><h2 id="基础选择器"><a href="#基础选择器" class="headerlink" title="基础选择器"></a>基础选择器</h2><p>标签选择器，类选择器，id选择器，通配符选择器</p><h3 id="标签选择器"><a href="#标签选择器" class="headerlink" title="标签选择器"></a>标签选择器</h3><p>使用html标签名命名的为标签选择器<br>eq：<code>div{color:green;}</code></p><h3 id="类选择器"><a href="#类选择器" class="headerlink" title="类选择器"></a>类选择器</h3><p>可以设置差异化<br>.类名{内容}<br>不允许使用纯数字、中文字符命名</p><h4 id="多类引用"><a href="#多类引用" class="headerlink" title="多类引用"></a>多类引用</h4><p>一个元素引用多个类名，在每个类名之间加入空格即可。</p><h3 id="id选择器"><a href="#id选择器" class="headerlink" title="id选择器"></a>id选择器</h3><p>使用html标签名命名的为标签选择器，使用#开头<br>#名称{内容}<br>不允许使用纯数字、中文字符命名<br>只能调用一次，如果上面有标签元素调用了id选择器，下面的标签就不可以使用这个选择器，类选择器不会有这个限制</p><h3 id="通配符选择器"><a href="#通配符选择器" class="headerlink" title="通配符选择器"></a>通配符选择器</h3><p>会将html中所有标签属性都改为这里的样式，无需刻意调用<br>*{内容}</p><h2 id="字符属性"><a href="#字符属性" class="headerlink" title="字符属性"></a>字符属性</h2><h3 id="字体属性font-family"><a href="#字体属性font-family" class="headerlink" title="字体属性font-family"></a>字体属性font-family</h3><p>font-family:’微软雅黑,Microsoft YaHei’;<br>建议使用字体的英文名称；设置多个字体的意思是,如果用户电脑未安装第一种字体，就执行第二个字体，以此类推；字体与字体之间用英文逗号分隔；如果字体名称有两个或两个以上的单词组成，使用引号包含起来，单双引都可</p><h3 id="字体大小font-size"><a href="#字体大小font-size" class="headerlink" title="字体大小font-size"></a>字体大小font-size</h3><p>font-size: 20px;<br>px为像素，标题标签需要单独指定大小，body中设置会不起效果</p><h3 id="字体粗细font-weight"><a href="#字体粗细font-weight" class="headerlink" title="字体粗细font-weight"></a>字体粗细font-weight</h3><p>font-weight: normal[bold;bolder;leghter;number]<br>normal:正常字体，相当于number为400.声明此值会取消此前所有设置<br>bold:粗体，相当于number为700，也相当于b对象作用<br>bolder:ie5+，特粗体。<br>leghter:ie5+，细体。<br>number:ie5+    100~900[取整递增]<br>通常使用数字对文字的粗细进行修改</p><h3 id="字体样式font-style"><a href="#字体样式font-style" class="headerlink" title="字体样式font-style"></a>字体样式font-style</h3><p>normal：默认值，浏览器显示的标准字体样式<br>italic：斜体</p><h2 id="文本属性"><a href="#文本属性" class="headerlink" title="文本属性"></a>文本属性</h2><h3 id="文本颜色"><a href="#文本颜色" class="headerlink" title="文本颜色"></a>文本颜色</h3><p>使用预定义颜色值（单词）、16进制或RGB进行文本颜色描述<br>color: red;<br>或<br>color:#ff0000;<br>或<br>color: rgb(255,0,0);</p><h3 id="文本对齐"><a href="#文本对齐" class="headerlink" title="文本对齐"></a>文本对齐</h3><p>text-align：用于水平方向的文本对齐方式<br>left左对齐<br>right右对齐<br>center居中对齐</p><h3 id="文本装饰"><a href="#文本装饰" class="headerlink" title="文本装饰"></a>文本装饰</h3><p>text-decoration：装饰文本的线的存在位置<br>none：取消所有文本装饰<br>underline：下划线<br>line-through：删除线<br>overline：上划线</p><h3 id="文本缩进"><a href="#文本缩进" class="headerlink" title="文本缩进"></a>文本缩进</h3><p>text-indent: 10px;：段落第一行进行缩进<br>px是像素<br>em也是像素，此单位为相对当前对象和元素进行缩进，1em为当前元素的一个文字的距离，如果当前元素没有设置大小，会按照父元素大小的一个文字大小</p><h3 id="行间距"><a href="#行间距" class="headerlink" title="行间距"></a>行间距</h3><p>line-height：控制行与行之间的距离<br>px像素</p><h2 id="css引用"><a href="#css引用" class="headerlink" title="css引用"></a>css引用</h2><h3 id="行内样式表"><a href="#行内样式表" class="headerlink" title="行内样式表"></a>行内样式表</h3><p>写在标签里面的（&lt;p style=”color: red”&gt;）为行内样式表<br>使用较少，适用于修改简单需求的情况<br>所有的属性都需要在双引号内</p><h3 id="内部样式表"><a href="#内部样式表" class="headerlink" title="内部样式表"></a>内部样式表</h3><p>写在&lt;style&gt;标签里的为内部样式表<br>理论上可以放到HTML的任何地方，一般放在head标签中<br>控制范围是整个html</p><h3 id="外部样式表"><a href="#外部样式表" class="headerlink" title="外部样式表"></a>外部样式表</h3><p>使用较多，适用于<br>写在.css文件中，在html里使用&lt;link&gt;标签引入该.css文件，这种方式为外部引入。注意路径问题</p><h3 id="chrome调试工具"><a href="#chrome调试工具" class="headerlink" title="chrome调试工具"></a>chrome调试工具</h3><p>f12，剩下的自己查吧</p><h3 id="Emmet语法"><a href="#Emmet语法" class="headerlink" title="Emmet语法"></a>Emmet语法</h3><h6 id="使用Emmet语法快速生成html框架结构"><a href="#使用Emmet语法快速生成html框架结构" class="headerlink" title="使用Emmet语法快速生成html框架结构"></a>使用Emmet语法快速生成html框架结构</h6><p>标签名加上星号可快速生成多个该标签，div*10.<br>有父子级关系的标签，可以用父标签名&gt;子标签名书写创建，ul&gt;li<br>有兄弟标签，用两个标签名中间加加号，div+p<br>想生成带有类名或id名的字符，写.类名或#id名，默认div，p.gray；<br>如果生成div类名是有序的，使用自增$符，.demo$*5<br>如果想要在生成的标签内部写内容用{}}，div{lalalalalala}</p><h2 id="复合选择器"><a href="#复合选择器" class="headerlink" title="复合选择器"></a>复合选择器</h2><h3 id="后代选择器"><a href="#后代选择器" class="headerlink" title="后代选择器"></a>后代选择器</h3><p>又称为包含选择器，适用于有父子级关系的元素；最终更改的是最后一个元素<br>ol li {}<br>如果有同类的父子级，可以通过修改其中一个父级的class进行区分<br>ol li {}<br>.nav li {}</p><h3 id="子代选择器"><a href="#子代选择器" class="headerlink" title="子代选择器"></a>子代选择器</h3><p>适用于父子级关系中最近一级的子元素</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">        <span class="token selector">div a </span><span class="token punctuation">{</span>            <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token comment" spellcheck="true">/* 可以分别尝试一下 */</span>        <span class="token selector">div>a </span><span class="token punctuation">{</span>            <span class="token property">color</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span>        <span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>div下<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>div下<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>div p下<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>div p下<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre><h3 id="并集选择器"><a href="#并集选择器" class="headerlink" title="并集选择器"></a>并集选择器</h3><p>并集选择器可以选择多组标签，同时为他们定义相同的样式，适用于集体声明。<br>并集选择器通过逗号链接，任何形式的选择器都可以作为并集选择器的一部分，包括元素名，父代子代，基本选择器等<br>一般情况下习惯每一个选择器名还有逗号独占一行，最后一个选择器没有逗号</p><h3 id="伪类选择器"><a href="#伪类选择器" class="headerlink" title="伪类选择器"></a>伪类选择器</h3><p>适用于向某些选择器添加特殊效果<br>使用冒号开头,:demo，:herm-ol</p><h4 id="链接伪类选择器"><a href="#链接伪类选择器" class="headerlink" title="链接伪类选择器"></a>链接伪类选择器</h4><p>a:link  所有未被访问的链接<br>a:visited  所有已访问过的链接（涉及隐私，font-size没效果）<br>a:hover   鼠标指针在连接上<br>a:active  鼠标按下未弹起的连接<br>Tip:尽量按link，visited，hover，active的顺序对连接进行修改<br>链接想改变样式需要单独设置</p><h4 id="focus伪类选择器"><a href="#focus伪类选择器" class="headerlink" title=":focus伪类选择器"></a>:focus伪类选择器</h4><p>适用于获取有焦点（光标）的元素，例如input文本框</p><h2 id="元素显示模式"><a href="#元素显示模式" class="headerlink" title="元素显示模式"></a>元素显示模式</h2><p>作用：为了更好的布局网页</p><h3 id="块元素"><a href="#块元素" class="headerlink" title="块元素"></a>块元素</h3><p>特点：独占一行；高宽内外边距可自定义；宽度默认占浏览器（父级宽度）的100%；可以放行内或块级元素<br>注意：文字类元素内不能适合用块级元素，p标签不能放div标签</p><h3 id="行内元素（内联元素）"><a href="#行内元素（内联元素）" class="headerlink" title="行内元素（内联元素）"></a>行内元素（内联元素）</h3><p>特点：相邻的行内元素可以在一行上；宽高直接设置不会生效；默认的宽度是内容的宽度；行内元素只能容纳文本或其他行内元素。<br>a可以放块级元素，多会转换为块级元素</p><h3 id="行内块元素"><a href="#行内块元素" class="headerlink" title="行内块元素"></a>行内块元素</h3><p>部分标签同时具备块级元素和行内元素的特性，如img，input等</p><h3 id="显示模式的转换"><a href="#显示模式的转换" class="headerlink" title="显示模式的转换"></a>显示模式的转换</h3><p>有些情况下，某些元素需要模式的转换，通过display属性进行转换<br>eq：a标签需要增加触发范围</p><pre class=" language-css"><code class="language-css"><span class="token selector">a</span><span class="token punctuation">{</span>    <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/* block为转换成块元素；inline为转换成行内元素；inline-block为行内块元素 */</span><span class="token punctuation">}</span></code></pre><p>工具snipaste，win10应用商店可查<br>单行文字垂直居中：使用line-hight可以让文字的行高等于盒子hight的高度，因为本身文字的行高就等于文字本身的高度加文字上距离元素上边框的距离加文字下距离元素下的高度</p><h2 id="背景样式"><a href="#背景样式" class="headerlink" title="背景样式"></a>背景样式</h2><h3 id="背景颜色"><a href="#背景颜色" class="headerlink" title="背景颜色"></a>背景颜色</h3><p>background-color：rgb[预设;16进制]<br>默认值为transparent，透明的</p><h3 id="背景图片"><a href="#背景图片" class="headerlink" title="背景图片"></a>背景图片</h3><p>用于装饰性图片<br>background-image：none [url(url图片路径)]<br>相对于插入图片，便于控制位置，</p><h3 id="背景平铺"><a href="#背景平铺" class="headerlink" title="背景平铺"></a>背景平铺</h3><p>background-repeat: repeat [no-repeat;repeat-x;repeat-y]<br>repeat平铺，no-repeat不平铺，repeat-x沿x轴平铺，repeat-y沿y轴平铺<br>默认为平铺</p><h3 id="背景位置"><a href="#背景位置" class="headerlink" title="背景位置"></a>背景位置</h3><h4 id="方位名词"><a href="#方位名词" class="headerlink" title="方位名词"></a>方位名词</h4><p>background-position: x y;<br>值：<br>lenght     百分比;由浮点数和单位标识符组成的长度值<br>position   top;center;botton;left;right<br>如果xy两个值全部使用方位名词，没有先后顺序；但是当只有一个方位名词时，第二个为默认为居中对齐</p><h4 id="精确位置"><a href="#精确位置" class="headerlink" title="精确位置"></a>精确位置</h4><p>background-position: 20px 50px;<br>如果使用精确位置，规定第一个值必须是x轴，第二个值必须是y轴；如果只有一个精确值，前面属性不变，缺省的第二个值默认为y轴居中对齐</p><h4 id="混合单位"><a href="#混合单位" class="headerlink" title="混合单位"></a>混合单位</h4><p>background-position: center 50px;<br>混合使用时，第一个值一定是x轴，第二轴一定是y轴</p><h3 id="背景固定"><a href="#背景固定" class="headerlink" title="背景固定"></a>背景固定</h3><p>固定图片在某个位置<br>background-attachment: scroll fixed<br>scroll为滚动，fixed为固定</p><h3 id="背景的属性复合性写法"><a href="#背景的属性复合性写法" class="headerlink" title="背景的属性复合性写法"></a>背景的属性复合性写法</h3><p>background: 值<br>值的顺序没有严格要求，一般书写习惯为：background:背景颜色 背景图片地址 平铺样式 背景图片滚动 背景图片位置;</p><h3 id="背景色半透明"><a href="#背景色半透明" class="headerlink" title="背景色半透明"></a>背景色半透明</h3><p>background: rgba(0,0,0,0.3)<br>第一个值为红色值，第二个值为绿色值，第三个为蓝色值，最后一个为alpha值，取值在0~1之间</p><h2 id="三大特性"><a href="#三大特性" class="headerlink" title="三大特性"></a>三大特性</h2><h3 id="层叠性"><a href="#层叠性" class="headerlink" title="层叠性"></a>层叠性</h3><p>相同的选择器给相同的样式<br>样式冲突: 遵循就近原则，就是浏览器从上倒下解析时，最后一个同属性的会覆盖掉上面之前设置的相同属性。<br>不冲突：不层叠</p><h3 id="继承性"><a href="#继承性" class="headerlink" title="继承性"></a>继承性</h3><p>当给父级设置样式后，下面的子级同样会继承某些父级样式（文字类属性），子级单独设置样式，父级的样式会失效</p><!-- ### 行高的继承p131## 盒子模型盒子模型组成：边框，内容，内边框，外边框### 边框border-width -style -color --><p>（未完待续……）<br><strong>更多内容：</strong></p><ul><li><a href="http://localhost:4000/2022/03/23/html/">HTML 教程</a></li><li><a href="http://localhost:4000/2022/03/23/javascript/">JavaScript 梳理</a><!-- ### 内边框</li></ul><h3 id="外边框"><a href="#外边框" class="headerlink" title="外边框"></a>外边框</h3><p> –&gt;</p>--></li></ul>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 前端 </tag>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>梦境 | 偷鸡不成</title>
      <link href="/2022/03/12/0312/"/>
      <url>/2022/03/12/0312/</url>
      
        <content type="html"><![CDATA[<p>  <font color="#B2B2B2">哈哈……我这说的至少一个月一更变成拖更了……没办法精力太少不够用，我现在都想是不是我真的病了，我都想去上医院挂个中医看看是不是我有毛病了，太爱睡觉了，办公室里的人人家中午不眯一会都没事，我这中午不想法眯一会下儿午魂都没了，我估计大概率我是气血虚，找机会得挂个号看看中医调调了……</font><br><br><br>  我的手机用了四年了，性能有点跟不上了，而且续航也随着系统的更新出现了成反比增长的体验，本来是去年就想换了，但是奈何高通把骁龙888进行了一波反向优化，把我给整不会了，想着那就等一年吧，今天新的芯片新骁龙8，实际一测，还不如888呢，合着即835旗舰之后865旗舰有成钉子户了，但是865旗舰的机子不太好买了，折了个中，买了个870机子，两千出头，比我准备淘汰的机子还便宜700多……<br>  但是国内厂商给了我一波教育，他们用实际行动证明了什么叫学好不容易学坏一出溜，不给充电头不给充电线，我还得根据手机的功率买个充电头，还有充电线……<br>  匹配我买的手机的充电头是个33w的，我就进官方店铺里面找，之前了解过这个33w的充电头是89块，但是这次一进到商品页面变成单价一块了，然后我点进去一口气买了10个，然后我还截图留录屏做证据，还有他们商品页上乱七八糟的协议承诺啥的留作证据，心想到时候恢复原价我就69卖出去，到了付款界面，变成单价11了，我犹豫了不到一秒，果断付完款，静等发货。看着我的订单我这个乐啊，我寻思上回xxx的事我没赶上，这回赶上了我不高低搂一把？我回到商品页面，一看已经回到79的价格了，又看了一下是活动，优惠了10块，心想我69原装的往出卖我就不信有人不买，老子也包邮，就少捞点呗。由于太兴奋了，又去看了看订单，结果显示我只买了5个……这时我有了一种不好的预感，我看了一下价格，从原来的110变成了435了，我一看单价，89块，我正要找客服理论，心想即使到手了又能怎样，怪累的，直接退了的了，准备退单，进到订单页面，现实总价257，我本以为是优惠增加了或者是单价下调了，核对之后都没有，最后我详细看了一下订单，显示我只买了3个……</p><img src="../../../../medias/reward/greenmp.png" width="500px">]]></content>
      
      
      <categories>
          
          <category> 日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>闲聊 | 年结</title>
      <link href="/2022/01/05/0105/"/>
      <url>/2022/01/05/0105/</url>
      
        <content type="html"><![CDATA[<p>  <font color="#B2B2B2">不要想着我会写网上那种规规矩矩的格式，我做不到，如果有机会我也不会用那种格式，那跟抄没什么区别。</font><br><br><br>  2021对我来说挺操蛋的，本来能够尽早完成的事情硬是给我整到2021年的最后一天才完事，真就不到最后不罢休，上课踩点考试及格啊……<br>过去的一年其实没什么值得总结的，因为本身也没什么规划，也没做什么事情，况且规划这个东西对于我来说就是个累赘，你给我规划，我就越想拖，可能是叛逆的劲还没过去吧，反正我习惯一边走一边看，而不是一边看一边走，喜欢在自己的节奏里，我不干扰你，你也别过来干扰我，你要是干扰我，把我惹急了，那我就不敢保证后果是什么，小题大做的事我不是没干过。<br>  今年呢，其实有想法，但是我不敢保证我能不能执行或者一直执行。一是减肥，我是属于男性平均身高，164斤的体重，小小胖子，而且我原本是没有什么肌肉的，所以是一身的虚肉，但是我觉得我身上的虚肉多说也就小10斤，捡到150也就差不多了，再往下减可能就不是那么容易得了。减肥是从1月4号开始的，我的餐谱其实没有什么特别大的改变，早餐本来是吃面包，现在改成了两个清水煮鸡蛋加一杯牛奶，中午不变点外卖，因为我不是单纯的坐办公室，需要一定的碳水摄入，而且本来我下午就容易犯困，中午不睡觉整个下午就彻底废了，晚上本来是点外卖，元旦那会想过自己做菜，但是打算先往后放一放，暂时先吃一些圣女果西红柿苹果之类这些水果，黄瓜彩椒这类的蔬菜，反正我家里给我拿来的大米又够吃一阵的了……<br>  去年呢，给自己的定的目标是多看看书，买了四本书，一年过去了，就读完了两本，一本是李诞的《候场》，一本是《弃猫》，说实话，李诞那本感觉还可以，比较符合我的阅读习惯，后面那本说实话，类似于中学课本中非常普通的短篇小说的延申版，写的挺长，但是阅读起来不是很连贯，不知道是不是因为翻译的问题，5星满我只能给3星，即使是村上春树写的。剩下的两本《东北游记》只看了第一章，也挺清汤寡水的，不太推荐，但是如果说对东北文学感兴趣的话，可以看看班宇或者双雪涛的作品，极其推荐双雪涛的《平原上的摩西》……<br>  来到北京之后就没进过电影院，只是在住处把经典传颂的电影看完了，《怦然心动》《阿甘正传》《海上钢琴师》，看完之后我一度陷入自我怀疑，是我不懂艺术吗？还是说这种影片就压根不是给我看的？影片里的东西我都能看懂，但是我觉得我说的这三个除了过程比较平缓没有什么吸引我的，也不是老电影没有一个吸引我的，《肖申克的救赎》我觉得还是不错的，还有经典的《教父》之类的我暂时不想看了，当然也可能是看完电影解说的原因，对了，我有一个朋友每年圣诞节都会看一个叫《东京教父》的电影，说是对他来说看完就对这个时间有一种包容，对他的心灵有一种疗愈的感觉，就会重新燃起对生活的希望，但是我没看出什么来，我也不剧透了，感兴趣的可以看一看。<br>  前面也说了，原计划要做饭的，但是因为精力有限，先往后推一推，至于为什么想做饭，因为每天的花销太大了，面食不好下手，大米饭简单，菜可以从简单的入手，比如土豆丝……朋友们，相信我，为了自己能在自己喜欢的领域多花点钱，学做饭</p><img src="../../../../medias/reward/greenmp.png" width="500px">]]></content>
      
      
      <categories>
          
          <category> 日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>写在前面</title>
      <link href="/2021/12/25/preface/"/>
      <url>/2021/12/25/preface/</url>
      
        <content type="html"><![CDATA[<p>  折腾了好几天，终于是把自己想要的东西搭起来了，今天下午一直在修补博客，以后我的一些学习随笔就有地方放了，日记我也会在这里发一遍，也会跟公众号同步，所以大家尽情放心。<br>  大家可能也看到了，网址是fishpond.vip，可能有人会很疑惑，为什么要用这个网址，而且公众号菜单也写的是“我的鱼塘”。翻译一下，<code>fish pond</code>中文译为养鱼池，我呢，会把我学到的东西，想要表达的东西，扔到这里，再加上我给我自己的定位，就相当于把<code>天天不干正事研究些乱七八糟八辈子用不到的东西</code>当作鱼，俗称<code>知识的尘埃</code>，这些鱼需要一个地方去放他，养他，毕竟是我亲手摸出来的，我得负责养，但是不能用盆，以后肯定越摸越多，得找个大一点的地方，那就是养鱼池了，所以我第一时间想到用fishpond.com作为我的域名，但是问题来了，这个域名被一个国外的类似二手交易平台给注册了，他们自称是交易物品是鱼，然后大家在里面互相挑选然后进行交易……嗯，就是现在鱼塘的运营方式，钓鱼花钱，想拿走钓上来的鱼还得掏钱……至于为什么用vip做一级域名，因为三个字母的就他的使用频率较高，比较好记，有人可能会想不是因为vip好听吗？好听的多了，但是敲键盘累手啊……<br>  正好今天是圣诞节，估计大家过的都挺好的，我反正是挺困的，睡了一下午，中间醒了好几次，但是就是困，没办法，今天哪都没去，我来北京一年半，哪都没去，我可佩服我自己了……不对，其实也算是去了一个地方，去了趟上海，看了场比赛，但是感觉巨亏，因为自己喜欢的队伍没赢，场馆离海边挺近的，也没去成。唉，我是挺佩服还有精力关注游戏甚至关注战队的人的，我认识一个28的人，还关注刀塔2的战队还有前段时间的比赛，我现在快对游戏提不起兴趣了，不然我也不会睡一下午……<br>  好了，就是简单介绍一下我博客的情况，顺便测试一下我暂时调整的功能是不是还正常，如果不出意外的话接下来我要大规模的在我的博客上发东西了，同时也但愿我的小站能坚挺下去，我觉得没问题！</p><img src="../../../../medias/reward/greenmp.png" width="500px">]]></content>
      
      
      <categories>
          
          <category> 日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网站更新日志</title>
      <link href="/2019/01/02/update/"/>
      <url>/2019/01/02/update/</url>
      
        <content type="html"><![CDATA[<h2 id="更新目录"><a href="#更新目录" class="headerlink" title="更新目录"></a>更新目录</h2><h3 id="v1-2"><a href="#v1-2" class="headerlink" title="v1.2"></a>v1.2</h3><h4 id="更改："><a href="#更改：" class="headerlink" title="更改："></a>更改：</h4><p>公众号二维码位置<br>鼠标点击出现爱心变成随机正能量字词</p><h4 id="添加："><a href="#添加：" class="headerlink" title="添加："></a>添加：</h4><p>春季樱花飘落特效<br>页面开关灯<br>目录及其滚动条<br>动态标题栏</p><h2 id="历史更新日志"><a href="#历史更新日志" class="headerlink" title="历史更新日志"></a>历史更新日志</h2><h3 id="v1-1"><a href="#v1-1" class="headerlink" title="v1.1:"></a>v1.1:</h3><h4 id="修复："><a href="#修复：" class="headerlink" title="修复："></a>修复：</h4><p>页脚左下侧的多余字符<br><img src="../../../../medias/BUG/1/bug1.png"></p><h4 id="优化："><a href="#优化：" class="headerlink" title="优化："></a>优化：</h4><p>首页社交按钮鼠标经过浮窗多余字符<br>文章页目录级数<br>点击文章卡片以及搜索后显示的链接以新标签页方式访问</p><h4 id="移除："><a href="#移除：" class="headerlink" title="移除："></a>移除：</h4><p>首页和文章的颜色遮罩<br>文章结尾右下角豆瓣分享链接</p><h4 id="更改：-1"><a href="#更改：-1" class="headerlink" title="更改："></a>更改：</h4><p>菜单栏和页脚的颜色和样式<br>页面下浏览进度条的颜色<br>动态色带背景颜色</p><h4 id="添加：-1"><a href="#添加：-1" class="headerlink" title="添加："></a>添加：</h4><p>首页微信公众号的社交按钮<br>文章结尾公众号推广线下物料图<br>网站样式内容更新公告</p><h3 id="v1-0："><a href="#v1-0：" class="headerlink" title="v1.0："></a>v1.0：</h3><h4 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h4><p>添加了代码高亮、搜索、中文转拼音链接、字数统计、emoji表情等插件</p><h4 id="移除"><a href="#移除" class="headerlink" title="移除"></a>移除</h4><p>多余社交按钮</p><h4 id="更改"><a href="#更改" class="headerlink" title="更改"></a>更改</h4><p>首页轮播图</p><h4 id="添加"><a href="#添加" class="headerlink" title="添加"></a>添加</h4><p>首页圣诞飘雪效果<br>背景调整为黑色<br>动态彩带效果</p>]]></content>
      
      
      <categories>
          
          <category> 日志 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日志 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>administrator availability</title>
      <link href="/2019/01/01/adminupdate/"/>
      <url>/2019/01/01/adminupdate/</url>
      
        <content type="html"><![CDATA[<h1 id="Update-Demo"><a href="#Update-Demo" class="headerlink" title="Update Demo"></a>Update Demo</h1><h2 id="v1-1"><a href="#v1-1" class="headerlink" title="v1.1"></a>v1.1</h2><p>_config.yml：socialLink中新增微信公众号字段mpweixin；toc字段补全标题识别码<br>matery.css：progress-bar下background中颜色值的更改；bg-color中注释掉原有代码，改为黑色透明度；注释掉bg-cover:after和.bg-cover:before,.bg-cover:after中的所有代码<br>layout.ejs：注释掉了ribbon.js的文件引用<br>social-link.ejs：新增微信公众号社交按钮<br>各个文章末尾新增微信公众号线下推广物料图(url:<code>![](../../../../medias/reward/greenmp.png)</code>)<br>可使用&lt;img src=””&gt;标签进行自定义图片大小和样式，比如上面的物料图可写成：<br><code>&lt;img src="../../../../medias/reward/greenmp.png" width="500px"&gt;</code><br>可直接写在文章文件（.md）中，显示效果如下：<br><img src="../../../../medias/reward/greenmp.png" width="500px"><br>index.ejs：文章卡片a标签中添加target属性，值为_blank<br>新增search.js和search.ejs中a标签的target属性值为_blank</p><h1 id="Historical-version-Demo"><a href="#Historical-version-Demo" class="headerlink" title="Historical version Demo"></a>Historical version Demo</h1><h2 id="v1-0"><a href="#v1-0" class="headerlink" title="v1.0"></a>v1.0</h2><p>在source目录下添加CNAME文件，内容为fishpond.vip</p><h3 id="hexo相关："><a href="#hexo相关：" class="headerlink" title="hexo相关："></a>hexo相关：</h3><h4 id="config-yml："><a href="#config-yml：" class="headerlink" title="_config.yml："></a>_config.yml：</h4><p>1.更改Site部分（title\subtitle\author\language\timezone）<br>2.更改URL部分中url地址为<code>https://jason-663.github.io</code>；新增root根目录字段（root: /）<br>3.更改theme字段为主题文件夹名hexo-theme-matery<br>4.更改Deployment部分</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">deploy</span><span class="token punctuation">:</span>  <span class="token key atrule">type</span><span class="token punctuation">:</span> git  <span class="token key atrule">repository</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//github.com/jason<span class="token punctuation">-</span>663/jason<span class="token punctuation">-</span>663.github.io  <span class="token key atrule">branch</span><span class="token punctuation">:</span> master</code></pre><p>5.新增插件部分：<br>（1）代码高亮插件hexo-prism-plugin</p><pre class=" language-yaml"><code class="language-yaml">插件安装代码：npm i <span class="token punctuation">-</span>S hexo<span class="token punctuation">-</span>prism<span class="token punctuation">-</span>plugin更改该文件下highlight.enable的值为false然后将以下内容添加到文件中<span class="token key atrule">prism_plugin</span><span class="token punctuation">:</span>  <span class="token key atrule">mode</span><span class="token punctuation">:</span> <span class="token string">'preprocess'</span>    <span class="token comment" spellcheck="true"># realtime/preprocess</span>  <span class="token key atrule">theme</span><span class="token punctuation">:</span> <span class="token string">'tomorrow'</span>  <span class="token key atrule">line_number</span><span class="token punctuation">:</span> <span class="token boolean important">false    </span><span class="token comment" spellcheck="true"># default false</span>  <span class="token key atrule">custom_css</span><span class="token punctuation">:</span></code></pre><p>（2）搜索插件hexo-generator-search</p><pre class=" language-yaml"><code class="language-yaml">插件安装代码：npm install hexo<span class="token punctuation">-</span>generator<span class="token punctuation">-</span>search <span class="token punctuation">-</span><span class="token punctuation">-</span>save将以下内容添加到文件中：<span class="token key atrule">search</span><span class="token punctuation">:</span><span class="token key atrule">path</span><span class="token punctuation">:</span> search.xml  <span class="token key atrule">field</span><span class="token punctuation">:</span> post</code></pre><p>（3）中文链接转拼音（可选的）</p><pre class=" language-yaml"><code class="language-yaml">插件安装代码：npm i hexo<span class="token punctuation">-</span>permalink<span class="token punctuation">-</span>pinyin <span class="token punctuation">-</span><span class="token punctuation">-</span>save将以下内容添加到文件中：<span class="token key atrule">permalink_pinyin</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">separator</span><span class="token punctuation">:</span> <span class="token string">'-'</span> <span class="token comment" spellcheck="true"># default: '-'</span></code></pre><p>（4）字数统计</p><pre class=" language-yaml"><code class="language-yaml">插件安装代码：npm i <span class="token punctuation">-</span><span class="token punctuation">-</span>save hexo<span class="token punctuation">-</span>wordcount然后只需在hexo<span class="token punctuation">-</span>theme<span class="token punctuation">-</span>matery主题下的 _config.yml 文件中，激活wordCount配置项即可</code></pre><p>（5）添加 RSS 订阅支持（可选的）</p><pre class=" language-yaml"><code class="language-yaml">将以下内容添加到文件中：<span class="token key atrule">feed</span><span class="token punctuation">:</span>  <span class="token key atrule">type</span><span class="token punctuation">:</span> atom  <span class="token key atrule">path</span><span class="token punctuation">:</span> atom.xml  <span class="token key atrule">limit</span><span class="token punctuation">:</span> <span class="token number">20</span>  <span class="token key atrule">hub</span><span class="token punctuation">:</span>  <span class="token key atrule">content</span><span class="token punctuation">:</span>  <span class="token key atrule">content_limit</span><span class="token punctuation">:</span> <span class="token number">140</span>  <span class="token key atrule">content_limit_delim</span><span class="token punctuation">:</span> <span class="token string">' '</span>  <span class="token key atrule">order_by</span><span class="token punctuation">:</span> <span class="token punctuation">-</span>date</code></pre><p>（6）Hexo 插件来支持emoji</p><pre class=" language-yaml"><code class="language-yaml">插件安装代码：npm install hexo<span class="token punctuation">-</span>filter<span class="token punctuation">-</span>github<span class="token punctuation">-</span>emojis <span class="token punctuation">-</span><span class="token punctuation">-</span>save将以下内容添加到文件中：<span class="token key atrule">githubEmojis</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">className</span><span class="token punctuation">:</span> github<span class="token punctuation">-</span>emoji  <span class="token key atrule">inject</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">styles</span><span class="token punctuation">:</span>  <span class="token key atrule">customEmojis</span><span class="token punctuation">:</span></code></pre><p>（7）安装图片懒加载插件</p><pre class=" language-yaml"><code class="language-yaml">插件安装代码：hexo<span class="token punctuation">-</span>lazyload<span class="token punctuation">-</span>image将以下内容添加到文件中：<span class="token key atrule">lazyload</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true </span>  <span class="token key atrule">onlypost</span><span class="token punctuation">:</span> <span class="token boolean important">false  </span><span class="token comment" spellcheck="true"># 是否只对文章的图片做懒加载</span>  <span class="token key atrule">loadingImg</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true"># eg ./images/loading.gif</span></code></pre><h3 id="matery主题"><a href="#matery主题" class="headerlink" title="matery主题"></a>matery主题</h3><h4 id="config-yml"><a href="#config-yml" class="headerlink" title="_config.yml"></a>_config.yml</h4><p>菜单项menu：移除（注释掉）Contact（留言板）功能，配置了菜单相关项：<br><code>首先需要在hexo插件下的source文件夹下创建对应的文件夹（下面的英文名），并在各个文件夹中创建index.md文件，然后在文件中写入下面的内容：</code><br>（1）标签（categories）页</p><pre class=" language-md"><code class="language-md">---title: categoriesdate: 2018-09-30 17:25:30type: "categories"layout: "categories"---</code></pre><p>（2）分类（tags）页</p><pre class=" language-md"><code class="language-md">---title: tagsdate: 2018-09-30 18:23:38type: "tags"layout: "tags"---</code></pre><p>（3）留言板（contact）页（可选）</p><pre class=" language-md"><code class="language-md">---title: contactdate: 2021-12-27 20:31:48type: "contact"layout: "contact"---</code></pre><p>（4）关于（about）页</p><pre class=" language-md"><code class="language-md">---title: aboutdate: 2018-09-30 17:25:30type: "about"layout: "about"---</code></pre><p>（5）友情链接（friends）页</p><pre class=" language-md"><code class="language-md">---title: friendsdate: 2018-12-12 21:25:30type: "friends"layout: "friends"---</code></pre><p>同时，在你的博客 source 目录下新建 _data 目录，在 _data 目录中新建 friends.json 文件，文件内容如下所例：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">[</span><span class="token punctuation">{</span>    <span class="token property">"avatar"</span><span class="token operator">:</span> <span class="token string">"http://image.luokangyuan.com/1_qq_27922023.jpg"</span><span class="token punctuation">,</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"码酱"</span><span class="token punctuation">,</span>    <span class="token property">"introduction"</span><span class="token operator">:</span> <span class="token string">"我不是大佬，只是在追寻大佬的脚步"</span><span class="token punctuation">,</span>    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"http://luokangyuan.com/"</span><span class="token punctuation">,</span>    <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"前去学习"</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>    <span class="token property">"avatar"</span><span class="token operator">:</span> <span class="token string">"http://image.luokangyuan.com/4027734.jpeg"</span><span class="token punctuation">,</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"闪烁之狐"</span><span class="token punctuation">,</span>    <span class="token property">"introduction"</span><span class="token operator">:</span> <span class="token string">"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬"</span><span class="token punctuation">,</span>    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"https://blinkfox.github.io/"</span><span class="token punctuation">,</span>    <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"前去学习"</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>    <span class="token property">"avatar"</span><span class="token operator">:</span> <span class="token string">"http://image.luokangyuan.com/avatar.jpg"</span><span class="token punctuation">,</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"ja_rome"</span><span class="token punctuation">,</span>    <span class="token property">"introduction"</span><span class="token operator">:</span> <span class="token string">"平凡的脚步也可以走出伟大的行程"</span><span class="token punctuation">,</span>    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"ttps://me.csdn.net/jlh912008548"</span><span class="token punctuation">,</span>    <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"前去学习"</span><span class="token punctuation">}</span><span class="token punctuation">]</span></code></pre><p>（6）网页访问异常（404）页</p><pre class=" language-md"><code class="language-md">---title: 404layout: "404"description: "Oops～，我崩溃了！找不到你想要的页面 :("---</code></pre><p><code>其他配置文件如音乐，视频等详见主题手册。</code><br>站点运行时间time（可选）：更改year字段值<br>我的梦想dream：关闭首页显示梦想名言相关配置<br>站点图标favicon：更改了网站标签图标和logo图标<br>首页第二个按钮（indexbtn）:关闭该按钮，可客制化<br>首页第二行个人信息（socialLink）：修改了个人信息相关配置<br>打赏功能（reward）：关闭文章末尾打赏功能，支持客制化<br>追加版权信息（copyright）:修改了大于十个字符追加版权信息<br>文章信息统计（postInfo）：打开了全部文章信息统计的开关（安装字数统计插件前提下）<br>页面效果开关：<br>（1）clicklove：鼠标点击操作出现爱心图标<br>（以下为LuckySec主题新增，基于matery主题）<br>（2）sakura：页面飘落樱花效果<br>樱花效果细节：第212行~第225行<br>（3）mouseStar：鼠标拖尾星星效果<br>（4）snowdown：雪花飘落效果，另在其他文件也有相关js，见下“首页”部分<br>“关于”页个人信息（profile）：完善“关于”页个人信息<br>“关于”页“我的项目”信息（myProjects）：关闭客制化我的项目<br>“关于”页“我的技能”信息（mySkills）：关闭客制化我的技能<br>“关于”页“我的相册”配置（myGallery）：客制化我的相册<br>评论模块（不推荐）：valine可使用<br>heard右上角fork me on github：（GitHublink）：关闭该功能<br>文章阅读密码验证（verifyPassword）：默认关闭，可参考配置手册针对性设置<br>站外文章分享模块（sharejs）：修改站外分享按钮<br>副标题（subtitle）：修改了sub1和sub2的值<br>CDN访问加速（jsDelivr）：第一次使用本功能，一定要先配置url，再<code>hexo cl &amp;&amp; hexo g &amp;&amp; hexo d</code>部署到GitHub的仓库，注意！必须是GitHub的仓库！URL配置规则（例子如下）： <code>https://cdn.jsdelivr.net/gh/你的GitHub用户名/你的仓库名</code><br>  注：配置了此项，就代表着本地调试的时候，网站依然会去GitHub请求资源（原来的资源），本地调试的时候记得将此项配置注释或者删除掉</p><h4 id="其他文件"><a href="#其他文件" class="headerlink" title="其他文件"></a>其他文件</h4><p>footer.ejs：删除（注释掉）底部社交信息（第105行）；修改底部网站信息及样式居中（第8行~第104行）<br>matery.css：修改了菜单栏和底部的颜色（.bg-color第243行）<br>index.ejs：添加了三种雪花的js<br>ribbon.js：添加了该文件(matery主题下的source/js中，和source/libs/ribbon中，并在)，为背景添加动态彩带，自带黑色背景</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
