<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>《HCNA网络技术实验指南》实验</title>
      <link href="/2022/04/15/hcnalab/"/>
      <url>/2022/04/15/hcnalab/</url>
      
        <content type="html"><![CDATA[<h2 id="第一章-ensp与vrp的基础操作"><a href="#第一章-ensp与vrp的基础操作" class="headerlink" title="第一章 ensp与vrp的基础操作"></a>第一章 ensp与vrp的基础操作</h2><h3 id="内容描述"><a href="#内容描述" class="headerlink" title="内容描述"></a>内容描述</h3><h3 id="实例详情"><a href="#实例详情" class="headerlink" title="实例详情"></a>实例详情</h3><p>实验说明：配置telnet登录，使得可以通过ar1上的telnet进行远程访问<br>拓扑图：<img src="../../../../medias/network/1/1.1.png" alt="拓扑图"><br>编址：</p><table><thead><tr><th>设备</th><th>接口</th><th>IP地址</th><th>子网掩码</th><th>默认网关</th></tr></thead><tbody><tr><td>ar1</td><td>g0/0/0</td><td>10.1.1.254</td><td>24</td><td>-</td></tr><tr><td>ar2</td><td>g0/0/0</td><td>10.1.1.1</td><td>24</td><td>10.1.1.254</td></tr><tr><td>ar3</td><td>g0/0/0</td><td>10.1.1.20</td><td>24</td><td>10.1.1.254</td></tr></tbody></table><p>配置过程：<br>1.先将计划的IP地址分配到相应的设备和对应端口上，完成之后测试联通性</p><pre class=" language-markdown"><code class="language-markdown"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Huawei</span><span class="token punctuation">></span></span>Apr 13 2022 09:54:12-08:00 Huawei %%01IFPDT/4/IF<span class="token italic"><span class="token punctuation">_</span>STATE(l)[0]:Interface GigabitEthernet0/0/0 has turned into UP state.&lt;Huawei>sysEnter system view, return user view with Ctrl+Z.[Huawei]int g0/0/0[Huawei-GigabitEthernet0/0/0]ip add 10.1.1.254 24Apr 13 2022 09:55:10-08:00 Huawei %%01IFNET/4/LINK<span class="token punctuation">_</span></span>STATE(l)[1]:The line protocol IP on the interface GigabitEthernet0/0/0 has entered the UP state. [Huawei-GigabitEthernet0/0/0]</code></pre><p>ar2与ar3配置命令相似<br>2.配置telnet登录验证</p><pre class=" language-markdown"><code class="language-markdown"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Huawei</span><span class="token punctuation">></span></span>sysEnter system view, return user view with Ctrl+Z.[Huawei]user-inter    [Huawei]user-interface vty 0 4[Huawei-ui-vty0-4]aut    [Huawei-ui-vty0-4]authentication-mode pass    [Huawei-ui-vty0-4]authentication-mode passwordPlease configure the login password (maximum length 16):huawei[Huawei-ui-vty0-4]q[Huawei]</code></pre><p>这时通过其他两个任何一个路由器输入<code>telnet 10.1.1.254</code>，并输入密码，即可进入ar1的做界面<br>如果分不清到底是不是ar1的路由器，可以先将ar1路由器内的名称改为ar1，先进入配置视图（[Huawei]）然后输入<code>sysname 名称</code>。</p><h2 id="第二章-交换机基础配置"><a href="#第二章-交换机基础配置" class="headerlink" title="第二章 交换机基础配置"></a>第二章 交换机基础配置</h2><h3 id="内容描述-1"><a href="#内容描述-1" class="headerlink" title="内容描述"></a>内容描述</h3><h3 id="实例详情-1"><a href="#实例详情-1" class="headerlink" title="实例详情"></a>实例详情</h3><p>实验说明：三台交换机，1和2是接入，3是汇聚，交换机之间使用全双工，并配置接口速率<br>拓扑图：<img src="../../../../medias/network/2/2.1.png" alt="拓扑图"><br>编址：</p><table><thead><tr><th>设备</th><th>接口</th><th>IP地址</th><th>子网掩码</th><th>默认网关</th></tr></thead><tbody><tr><td>pc1</td><td>e0/0/1</td><td>10.1.1.1</td><td>24</td><td>-</td></tr><tr><td>pc2</td><td>e0/0/1</td><td>10.1.1.2</td><td>24</td><td>-</td></tr></tbody></table><p>配置过程：<br>先为PC配置好IP地址和子网掩码，并在其中一台pc机ping另一台pc机的IP地址，检查连通性<br>接下来配置交换机<br>1.配置交换机双工模式<br>配置前，由于交换机的自协商协议默认为开启状态，需先将该协议关闭，在进行配置</p><pre class=" language-markdown"><code class="language-markdown"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Huawei</span><span class="token punctuation">></span></span>sysEnter system view, return user view with Ctrl+Z.[Huawei]int g0/0/1[Huawei-GigabitEthernet0/0/1]undo ne[Huawei-GigabitEthernet0/0/1]undo negotiation au[Huawei-GigabitEthernet0/0/1]undo negotiation auto [Huawei-GigabitEthernet0/0/1]dupl[Huawei-GigabitEthernet0/0/1]duplex Apr 13 2022 11:11:22-08:00 Huawei DS/4/DATASYNC<span class="token italic"><span class="token punctuation">_</span>CFGCHANGE:OID 1.3.6.1.4.1.2011.5.25.191.3.1 configurations have been changed. The current change number is 4, the change loop count is 0, and the maximum number of records is 4095.fu[Huawei-GigabitEthernet0/0/1]duplex full [Huawei-GigabitEthernet0/0/1]Apr 13 2022 11:11:32-08:00 Huawei DS/4/DATASYNC<span class="token punctuation">_</span></span>CFGCHANGE:OID 1.3.6.1.4.1.2011.5.25.191.3.1 configurations have been changed. The current change number is 5, the change loop count is 0, and the maximum number of records is 4095.[Huawei-GigabitEthernet0/0/1]</code></pre><p>上下的三个端口分别配置此命令，至此，交换机间的工作模式全部切换为了全双工。<br>2.配置接口速率<br>由于用户（PC）较少，所以将GE口配置为100mbit/s，e口配置为10Mbit/s；配置前，由于交换机的自协商协议默认为开启状态，需先将该协议关闭，在进行配置</p><pre class=" language-markdown"><code class="language-markdown"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Huawei</span><span class="token punctuation">></span></span>sysEnter system view, return user view with Ctrl+Z.[Huawei]sys s1[s1]int Apr 13 2022 11:22:42-08:00 s1 DS/4/DATASYNC<span class="token italic"><span class="token punctuation">_</span>CFGCHANGE:OID 1.3.6.1.4.1.2011.5.25.191.3.1 configurations have been changed. The current change number is 6, the change loop count is 0, and the maximum number of records is 4095.e0/0/1[s1-Ethernet0/0/1]un[s1-Ethernet0/0/1]undo ne[s1-Ethernet0/0/1]undo negotiation au[s1-Ethernet0/0/1]undo negotiation auto [s1-Ethernet0/0/1]sp[s1-Ethernet0/0/1]speed Apr 13 2022 11:23:02-08:00 s1 DS/4/DATASYNC<span class="token punctuation">_</span></span>CFGCHANGE:OID 1.3.6.1.4.1.2011.5.25.191.3.1 configurations have been changed. The current change number is 7, the change loop count is 0, and the maximum number of records is 4095.10[s1-Ethernet0/0/1]Apr 13 2022 11:23:12-08:00 s1 DS/4/DATASYNC_CFGCHANGE:OID 1.3.6.1.4.1.2011.5.25.191.3.1 configurations have been changed. The current change number is 8, the change loop count is 0, and the maximum number of records is 4095.[s1-Ethernet0/0/1]int g0/0/1[s1-GigabitEthernet0/0/1]  </code></pre><p>注意每一个端口都要单独关掉</p><h4 id="arp与proxy-arp"><a href="#arp与proxy-arp" class="headerlink" title="arp与proxy arp"></a>arp与proxy arp</h4><p>实验说明：r1，s1，s2，配置静态arp且在路由器上配置arp代理<br>拓扑图：<img src="../../../../medias/network/2/2.2.png" alt="拓扑图"><br>编址：</p><table><thead><tr><th>设备</th><th>接口</th><th>IP地址</th><th>子网掩码</th><th>默认网关</th></tr></thead><tbody><tr><td>r1</td><td>g0/0/1</td><td>10.1.1.254</td><td>24</td><td>-</td></tr><tr><td>r1</td><td>g0/0/2</td><td>10.2.254</td><td>24</td><td>-</td></tr><tr><td>pc1</td><td>e0/0/1</td><td>10.1.1.1</td><td>16</td><td>-</td></tr><tr><td>pc2</td><td>e0/0/1</td><td>10.1.1.2</td><td>16</td><td>-</td></tr><tr><td>pc3</td><td>e0/0/1</td><td>10.1.2.3</td><td>16</td><td>-</td></tr></tbody></table><p>配置过程：<br>按照编址表将IP地址配置到各个位置，<br>配置静态arp</p><pre class=" language-markdown"><code class="language-markdown">[r1]arp static 10.1.1.1 5489-983D-766A   [r1]arp static 10.1.1.2 5489-9857-45FC   [r1]arp static 10.1.2.3 5489-9812-085E   [r1]</code></pre><p>配置proxy arp<br>华为交换机默认代理arp是关闭状态，上面的两个网段是不能相互访问的，需要将对应网段接口的代理arp打开</p><pre class=" language-markdown"><code class="language-markdown">[r1]int g0/0/1[r1-GigabitEthernet0/0/1]arp-pr[r1-GigabitEthernet0/0/1]arp-proxy en[r1-GigabitEthernet0/0/1]arp-proxy enable [r1-GigabitEthernet0/0/1]int g0/0/2[r1-GigabitEthernet0/0/2]arp-pr[r1-GigabitEthernet0/0/2]arp-proxy [r1-GigabitEthernet0/0/2]arp-proxy en[r1-GigabitEthernet0/0/2]</code></pre><p>这样10.1.1.0网段就能和10.1.2.0网段通信了</p><h2 id="第三章-valn"><a href="#第三章-valn" class="headerlink" title="第三章 valn"></a>第三章 valn</h2><h3 id="内容描述-2"><a href="#内容描述-2" class="headerlink" title="内容描述"></a>内容描述</h3><h3 id="实例详情-2"><a href="#实例详情-2" class="headerlink" title="实例详情"></a>实例详情</h3><h4 id="access"><a href="#access" class="headerlink" title="access"></a>access</h4><p>实验说明：只允许同部门可互相通信；配置access接口和vlan的基本配置<br>拓扑图：<img src="../../../../medias/network/3/3.1.png" alt="拓扑图"><br>编址：</p><table><thead><tr><th align="center">设备</th><th align="center">接口</th><th align="center">IP地址</th><th align="center">子网掩码</th><th align="center">默认网关</th></tr></thead><tbody><tr><td align="center">pc1</td><td align="center">e0/0/1</td><td align="center">10.1.1.1</td><td align="center">24</td><td align="center">-</td></tr><tr><td align="center">pc2</td><td align="center">e0/0/1</td><td align="center">10.1.1.2</td><td align="center">24</td><td align="center">-</td></tr><tr><td align="center">pc3</td><td align="center">e0/0/1</td><td align="center">10.1.1.3</td><td align="center">24</td><td align="center">-</td></tr><tr><td align="center">pc4</td><td align="center">e0/0/1</td><td align="center">10.1.1.4</td><td align="center">24</td><td align="center">-</td></tr><tr><td align="center">pc5</td><td align="center">e0/0/1</td><td align="center">10.1.1.5</td><td align="center">24</td><td align="center">-</td></tr></tbody></table><p>配置步骤：<br>按照编址表将IP地址分配到pc机上，并检查连通性<br>接下来创建vlan；默认存在vlan1，且所有接口都被划分在了vlan1中<br>先创建10和20两个vlan<br>然后在使用vlan bath同时创建两个vlan<br>完成之后查看一下当前设备中vlan的相关信息</p><pre class=" language-md"><code class="language-md">[s1][s1]vlan 10[s1-vlan10]vlan 20[s1-vlan20]vlan Apr 15 2022 16:32:00-08:00 s1 DS/4/DATASYNC_CFGCHANGE:OID 1.3.6.1.4.1.2011.5.25.191.3.1 configurations have been changed. The current change number is 6, the change loop count is 0, and the maximum number of records is 4095.b[s1-vlan20]vlan b[s1-vlan20]vlan ba[s1-vlan20]q      [s1]vlan batch 30 40Info: This operation may take a few seconds. Please wait for a moment...done.[s1]Apr 15 2022 16:32:30-08:00 s1 DS/4/DATASYNC_CFGCHANGE:OID 1.3.6.1.4.1.2011.5.25.191.3.1 configurations have been changed. The current change number is 7, the change loop count is 0, and the maximum number of records is 4095.[s1]dis vlanThe total number of vlans is : 5--------------------------------------------------------------------------------U: Up;         D: Down;         TG: Tagged;         UT: Untagged;MP: Vlan-mapping;               ST: Vlan-stacking;#: ProtocolTransparent-vlan;    *: Management-vlan;--------------------------------------------------------------------------------VID  Type    Ports                                                          --------------------------------------------------------------------------------1    common  UT:Eth0/0/1(U)     Eth0/0/2(U)     Eth0/0/3(U)     Eth0/0/4(D)                     Eth0/0/5(U)     Eth0/0/6(D)     Eth0/0/7(D)     Eth0/0/8(D)                     Eth0/0/9(D)     Eth0/0/10(D)    Eth0/0/11(D)    Eth0/0/12(D)                    Eth0/0/13(D)    Eth0/0/14(D)    Eth0/0/15(D)    Eth0/0/16(D)                    Eth0/0/17(D)    Eth0/0/18(D)    Eth0/0/19(D)    Eth0/0/20(D)                    Eth0/0/21(D)    Eth0/0/22(D)    GE0/0/1(D)      GE0/0/2(D)      10   common  20   common  30   common  40   common  VID  Status  Property      MAC-LRN Statistics Description      --------------------------------------------------------------------------------1    enable  default       enable  disable    VLAN 0001                         10   enable  default       enable  disable    VLAN 0010                         20   enable  default       enable  disable    VLAN 0020                         30   enable  default       enable  disable    VLAN 0030                         40   enable  default       enable  disable    VLAN 0040                         [s1]<Huawei>sysEnter system view, return user view with Ctrl+Z.[Huawei]sys s2[s2]vlan batch 40 4Apr 15 2022 16:36:11-08:00 s2 DS/4/DATASYNC_CFGCHANGE:OID 1.3.6.1.4.1.2011.5.25.191.3.1 configurations have been changed. The current change number is 4, the change loop count is 0, and the maximum number of rvlan batch 30 40Info: This operation may take a few seconds. Please wait for a moment...done.[s2]Apr 15 2022 16:36:31-08:00 s2 DS/4/DATASYNC_CFGCHANGE:OID 1.3.6.1.4.1.2011.5.25.191.3.1 configurations have been changed. The current change number is 5, the change loop count is 0, and the maximum number of records is 4095.[s2]dis vlanThe total number of vlans is : 3--------------------------------------------------------------------------------U: Up;         D: Down;         TG: Tagged;         UT: Untagged;MP: Vlan-mapping;               ST: Vlan-stacking;#: ProtocolTransparent-vlan;    *: Management-vlan;--------------------------------------------------------------------------------VID  Type    Ports                                                          --------------------------------------------------------------------------------1    common  UT:Eth0/0/1(U)     Eth0/0/2(U)     Eth0/0/3(D)     Eth0/0/4(D)                     Eth0/0/5(U)     Eth0/0/6(D)     Eth0/0/7(D)     Eth0/0/8(D)                     Eth0/0/9(D)     Eth0/0/10(D)    Eth0/0/11(D)    Eth0/0/12(D)                    Eth0/0/13(D)    Eth0/0/14(D)    Eth0/0/15(D)    Eth0/0/16(D)                    Eth0/0/17(D)    Eth0/0/18(D)    Eth0/0/19(D)    Eth0/0/20(D)                    Eth0/0/21(D)    Eth0/0/22(D)    GE0/0/1(D)      GE0/0/2(D)      30   common  40   common  VID  Status  Property      MAC-LRN Statistics Description      --------------------------------------------------------------------------------1    enable  default       enable  disable    VLAN 0001                         30   enable  default       enable  disable    VLAN 0030                         40   enable  default       enable  disable    VLAN 0040                         [s2]</code></pre><p>配置access<br>将所有连接交换机的的端口都配置为access，并配置接口的默认vlan同时加入到相应的vlan中</p><pre class=" language-markdown"><code class="language-markdown">[s2]int e0/0/1[s2-Ethernet0/0/1]port lin [s2-Ethernet0/0/1]port link-ty[s2-Ethernet0/0/1]port link-type ass[s2-Ethernet0/0/1]port link-type a  [s2-Ethernet0/0/1]port link-type access [s2-Ethernet0/0/1]Apr 15 2022 16:49:12-08:00 s2 DS/4/DATASYNC<span class="token italic"><span class="token punctuation">_</span>CFGCHANGE:OID 1.3.6.1.4.1.2011.5.25.191.3.1 configurations have been changed. The current change number is 6, the change loop count is 0, and the maximum number of records is 4095.por[s2-Ethernet0/0/1]port de     [s2-Ethernet0/0/1]port default vlan 30[s2-Ethernet0/0/1]int e0Apr 15 2022 16:50:42-08:00 s2 DS/4/DATASYNC<span class="token punctuation">_</span></span>CFGCHANGE:OID 1.3.6.1.4.1.2011.5.25.191.3.1 configurations have been changed. The current change number is 7, the change loop count is 0, and the maximum number of records is 4095./0/2[s2-Ethernet0/0/2]po[s2-Ethernet0/0/2]port lin[s2-Ethernet0/0/2]port link-t[s2-Ethernet0/0/2]port link-type acc[s2-Ethernet0/0/2]port link-type access [s2-Ethernet0/0/2]po[s2-Ethernet0/0/2]portde[s2-Ethernet0/0/2]port de[s2-Ethernet0/0/2]port default vlan Apr 15 2022 16:51:12-08:00 s2 DS/4/DATASYNC_CFGCHANGE:OID 1.3.6.1.4.1.2011.5.25.191.3.1 configurations have been changed. The current change number is 8, the change loop count is 0, and the maximum number of records is 4095.40[s2-Ethernet0/0/2]</code></pre><p>然后再看一下vlan信息</p><pre class=" language-md"><code class="language-md">[s1]dis vlan The total number of vlans is : 3--------------------------------------------------------------------------------U: Up;         D: Down;         TG: Tagged;         UT: Untagged;MP: Vlan-mapping;               ST: Vlan-stacking;#: ProtocolTransparent-vlan;    *: Management-vlan;--------------------------------------------------------------------------------VID  Type    Ports                                                          --------------------------------------------------------------------------------1    common  UT:Eth0/0/4(D)     Eth0/0/5(U)     Eth0/0/6(D)     Eth0/0/7(D)                     Eth0/0/8(D)     Eth0/0/9(D)     Eth0/0/10(D)    Eth0/0/11(D)                    Eth0/0/12(D)    Eth0/0/13(D)    Eth0/0/14(D)    Eth0/0/15(D)                    Eth0/0/16(D)    Eth0/0/17(D)    Eth0/0/18(D)    Eth0/0/19(D)                    Eth0/0/20(D)    Eth0/0/21(D)    Eth0/0/22(D)    GE0/0/1(D)                      GE0/0/2(D)                                                      10   common  UT:Eth0/0/1(U)     Eth0/0/2(U)                                     20   common  UT:Eth0/0/3(U)                                                     VID  Status  Property      MAC-LRN Statistics Description      --------------------------------------------------------------------------------1    enable  default       enable  disable    VLAN 0001                         10   enable  default       enable  disable    VLAN 0010                         20   enable  default       enable  disable    VLAN 0020                         [s1][s2]dis vlan The total number of vlans is : 3--------------------------------------------------------------------------------U: Up;         D: Down;         TG: Tagged;         UT: Untagged;MP: Vlan-mapping;               ST: Vlan-stacking;#: ProtocolTransparent-vlan;    *: Management-vlan;--------------------------------------------------------------------------------VID  Type    Ports                                                          --------------------------------------------------------------------------------1    common  UT:Eth0/0/3(D)     Eth0/0/4(D)     Eth0/0/5(U)     Eth0/0/6(D)                     Eth0/0/7(D)     Eth0/0/8(D)     Eth0/0/9(D)     Eth0/0/10(D)                    Eth0/0/11(D)    Eth0/0/12(D)    Eth0/0/13(D)    Eth0/0/14(D)                    Eth0/0/15(D)    Eth0/0/16(D)    Eth0/0/17(D)    Eth0/0/18(D)                    Eth0/0/19(D)    Eth0/0/20(D)    Eth0/0/21(D)    Eth0/0/22(D)                    GE0/0/1(D)      GE0/0/2(D)                                      30   common  UT:Eth0/0/1(U)                                                     40   common  UT:Eth0/0/2(U)                                                     VID  Status  Property      MAC-LRN Statistics Description      --------------------------------------------------------------------------------1    enable  default       enable  disable    VLAN 0001                         30   enable  default       enable  disable    VLAN 0030                         40   enable  default       enable  disable    VLAN 0040                         [s2]</code></pre><p>可以看到俩个交换机连接各个pc的端口都已划分到对应的vlan中，接下来验证结果，验证pc1能否与pc2，pc3通信</p><pre class=" language-md"><code class="language-md">PC>ping 10.1.1.2Ping 10.1.1.2: 32 data bytes, Press Ctrl_C to breakFrom 10.1.1.2: bytes=32 seq=1 ttl=128 time=32 msFrom 10.1.1.2: bytes=32 seq=2 ttl=128 time=47 msFrom 10.1.1.2: bytes=32 seq=3 ttl=128 time=63 msFrom 10.1.1.2: bytes=32 seq=4 ttl=128 time=46 msFrom 10.1.1.2: bytes=32 seq=5 ttl=128 time=47 ms--- 10.1.1.2 ping statistics ---  5 packet(s) transmitted  5 packet(s) received  0.00% packet loss  round-trip min/avg/max = 32/47/63 msPC>ping 10.1.1.3Ping 10.1.1.3: 32 data bytes, Press Ctrl_C to breakFrom 10.1.1.1: Destination host unreachableFrom 10.1.1.1: Destination host unreachableFrom 10.1.1.1: Destination host unreachableFrom 10.1.1.1: Destination host unreachableFrom 10.1.1.1: Destination host unreachable--- 10.1.1.3 ping statistics ---  5 packet(s) transmitted  0 packet(s) received  100.00% packet lossPC></code></pre><p>可以看到，pc1与pc2在同一个广播域中（vlan）中，可以通信，但是与pc3不在一个广播域中，不可以通信</p><h4 id="trunk"><a href="#trunk" class="headerlink" title="trunk"></a>trunk</h4><p>实验内容：<br>拓扑图：<img src="../../../../medias/network/3/3.2.png" alt="拓扑图"><br>编址表：</p><table><thead><tr><th align="center">设备</th><th align="center">接口</th><th align="center">IP地址</th><th align="center">子网掩码</th><th align="center">默认网关</th></tr></thead><tbody><tr><td align="center">pc1</td><td align="center">e0/0/1</td><td align="center">10.1.1.1</td><td align="center">255.255.255.0</td><td align="center">-</td></tr><tr><td align="center">pc2</td><td align="center">e0/0/1</td><td align="center">10.1.1.2</td><td align="center">255.255.255.0</td><td align="center">-</td></tr><tr><td align="center">pc3</td><td align="center">e0/0/1</td><td align="center">10.1.1.3</td><td align="center">255.255.255.0</td><td align="center">-</td></tr><tr><td align="center">pc4</td><td align="center">e0/0/1</td><td align="center">10.1.1.4</td><td align="center">255.255.255.0</td><td align="center">-</td></tr></tbody></table><p>配置过程：<br>首先在三台交换机上配置vlan</p><pre class=" language-md"><code class="language-md"><Huawei><Huawei><Huawei>syEnter system view, return user view with Ctrl+Z.[Huawei][Huawei]sys s1[s1]Apr 19 2022 09:59:57-08:00 s1 DS/4/DATASYNC_CFGCHANGE:OID 1.3.6.1.4.1.2011.5.25.191.3.1 configurations have been changed. The current change number is 4, the change loop count is 0, and the maximum number of records is 4095.[s1]vlan batch 10 20Info: This operation may take a few seconds. Please wait for a moment...done.[s1]Apr 19 2022 10:00:17-08:00 s1 DS/4/DATASYNC_CFGCHANGE:OID 1.3.6.1.4.1.2011.5.25.191.3.1 configurations have been changed. The current change number is 5, the change loop count is 0, and the maximum number of records is 4095.[s1]vlan 10 [s1-vlan10]de[s1-vlan10]description ?  TEXT  VLAN description(no more than 80 characters)[s1-vlan10]description R$D[s1-vlan10]Apr 19 2022 10:01:47-08:00 s1 DS/4/DATASYNC_CFGCHANGE:OID 1.3.6.1.4.1.2011.5.25.191.3.1 configurations have been changed. The current change number is 6, the change loop count is 0, and the maximum number of records is 4095.[s1-vlan10]vlan 20[s1-vlan20]de[s1-vlan20]description market[s1-vlan20]Apr 19 2022 10:06:47-08:00 s1 DS/4/DATASYNC_CFGCHANGE:OID 1.3.6.1.4.1.2011.5.25.191.3.1 configurations have been changed. The current change number is 7, the change loop count is 0, and the maximum number of records is 4095.q[s1]dis vlan <Huawei><Huawei>syEnter system view, return user view with Ctrl+Z.[Huawei]sys s2[s2]vlan batch 10 Apr 19 2022 10:00:30-08:00 s2 DS/4/DATASYNC_CFGCHANGE:OID 1.3.6.1.4.1.2011.5.25.191.3.1 configurations have been changed. The current change number is 4, the change loop count is 0, and the maximum number of records is 4095.20Info: This operation may take a few seconds. Please wait for a moment...done.[s2]Apr 19 2022 10:00:40-08:00 s2 DS/4/DATASYNC_CFGCHANGE:OID 1.3.6.1.4.1.2011.5.25.191.3.1 configurations have been changed. The current change number is 5, the change loop count is 0, and the maximum number of records is 4095.[s2]vlan 20[s2-vlan20]de[s2-vlan20]description mar[s2-vlan20]description market[s2-vlan20]Apr 19 2022 10:05:30-08:00 s2 DS/4/DATASYNC_CFGCHANGE:OID 1.3.6.1.4.1.2011.5.25.191.3.1 configurations have been changed. The current change number is 6, the change loop count is 0, and the maximum number of records is 4095.[s2-vlan20]vlan 10[s2-vlan10]d[s2-vlan10]de  [s2-vlan10]description r$d[s2-vlan10]Apr 19 2022 10:05:50-08:00 s2 DS/4/DATASYNC_CFGCHANGE:OID 1.3.6.1.4.1.2011.5.25.191.3.1 configurations have been changed. The current change number is 7, the change loop count is 0, and the maximum number of records is 4095.[s2-vlan10]<Huawei><Huawei><Huawei>sy Enter system view, return user view with Ctrl+Z.[Huawei]sys s3[s3]vlan 10[s3-vlan10]de[s3-vlan10]description Apr 19 2022 10:05:59-08:00 s3 DS/4/DATASYNC_CFGCHANGE:OID 1.3.6.1.4.1.2011.5.25.191.3.1 configurations have been changed. The current change number is 5, the change loop count is 0, and the maximum number of records is 4095. r$d[s3-vlan10]vlan 20Apr 19 2022 10:06:19-08:00 s3 DS/4/DATASYNC_CFGCHANGE:OID 1.3.6.1.4.1.2011.5.25.191.3.1 configurations have been changed. The current change number is 6, the change loop count is 0, and the maximum number of records is 4095.[s3-vlan20]de[s3-vlan20]description market[s3-vlan20]Apr 19 2022 10:06:29-08:00 s3 DS/4/DATASYNC_CFGCHANGE:OID 1.3.6.1.4.1.2011.5.25.191.3.1 configurations have been changed. The current change number is 8, the change loop count is 0, and the maximum number of records is 4095.[s3-vlan20]</code></pre><p>其中：<br>description命令为描述的意思，起到解释说明的功能，r$d 代表研发部，market 代表市场部。<br>查看vlan情况，以s3为例</p><pre class=" language-md"><code class="language-md">[s3]dis vlan The total number of vlans is : 3--------------------------------------------------------------------------------U: Up;         D: Down;         TG: Tagged;         UT: Untagged;MP: Vlan-mapping;               ST: Vlan-stacking;#: ProtocolTransparent-vlan;    *: Management-vlan;--------------------------------------------------------------------------------VID  Type    Ports                                                          --------------------------------------------------------------------------------1    common  UT:GE0/0/1(U)      GE0/0/2(U)      GE0/0/3(D)      GE0/0/4(D)                      GE0/0/5(D)      GE0/0/6(D)      GE0/0/7(D)      GE0/0/8(D)                      GE0/0/9(D)      GE0/0/10(D)     GE0/0/11(D)     GE0/0/12(D)                     GE0/0/13(D)     GE0/0/14(D)     GE0/0/15(D)     GE0/0/16(D)                     GE0/0/17(D)     GE0/0/18(D)     GE0/0/19(D)     GE0/0/20(D)                     GE0/0/21(D)     GE0/0/22(D)     GE0/0/23(D)     GE0/0/24(D)     10   common  20   common  VID  Status  Property      MAC-LRN Statistics Description      --------------------------------------------------------------------------------1    enable  default       enable  disable    VLAN 0001                         10   enable  default       enable  disable    r$d                               20   enable  default       enable  disable    market                            [s3]</code></pre><p>在s1和s2上配置access接口以及相关配置</p><pre class=" language-md"><code class="language-md">[s1]int e0/0/2[s1-Ethernet0/0/2]po[s1-Ethernet0/0/2]portl[s1-Ethernet0/0/2]port l[s1-Ethernet0/0/2]port link-t[s1-Ethernet0/0/2]port link-type ac[s1-Ethernet0/0/2]port link-type access [s1-Ethernet0/0/2]por Apr 19 2022 10:23:38-08:00 s1 DS/4/DATASYNC_CFGCHANGE:OID 1.3.6.1.4.1.2011.5.25.191.3.1 configurations have been changed. The current change number is 8, the change loop count is 0, and the maximum number of records is 4095 de vlan 10[s1-Ethernet0/0/2]int Apr 19 2022 10:23:48-08:00 s1 DS/4/DATASYNC_CFGCHANGE:OID 1.3.6.1.4.1.2011.5.25.191.3.1 configurations have been changed. The current change number is 9, the change loop count is 0, and the maximum number of records is 4095.e0/0/3[s1-Ethernet0/0/3]port link-type access[s1-Ethernet0/0/3]por de vlan 10       Apr 19 2022 10:23:58-08:00 s1 DS/4/DATASYNC_CFGCHANGE:OID 1.3.6.1.4.1.2011.5.25.191.3.1 configurations have been changed. The current change number is 10, the change loop count is 0, and the maximum number of records is 40920[s1-Ethernet0/0/3]Apr 19 2022 10:24:08-08:00 s1 DS/4/DATASYNC_CFGCHANGE:OID 1.3.6.1.4.1.2011.5.25.191.3.1 configurations have been changed. The current change number is 11, the change loop count is 0, and the maximum number of records is 4095.[s1-Ethernet0/0/3][s2]int e 0/0/3[s2-Ethernet0/0/3]port link-type accsee                                 ^Error: Unrecognized command found at '^' position.[s2-Ethernet0/0/3]port link-t          [s2-Ethernet0/0/3]port link-type acc[s2-Ethernet0/0/3]port link-type access [s2-Ethernet0/0/3]por[s2-Ethernet0/0/3]port d[s2-Ethernet0/0/3]port de     [s2-Ethernet0/0/3]port default vlan 10Apr 19 2022 10:24:51-08:00 s2 DS/4/DATASYNC_CFGCHANGE:OID 1.3.6.1.4.1.2011.5.25.191.3.1 configurations have been changed. The current change number is 8, the change loop count is 0, and the maximum number of records is 4095.[s2-Ethernet0/0/3]int Apr 19 2022 10:25:01-08:00 s2 DS/4/DATASYNC_CFGCHANGE:OID 1.3.6.1.4.1.2011.5.25.191.3.1 configurations have been changed. The current change number is 9, the change loop count is 0, and the maximum number of records is 4095.e0/0/4[s2-Ethernet0/0/4]port link-type access[s2-Ethernet0/0/4]port default vlan 10 Apr 19 2022 10:25:11-08:00 s2 DS/4/DATASYNC_CFGCHANGE:OID 1.3.6.1.4.1.2011.5.25.191.3.1 configurations have been changed. The current change number is 10, the change loop count is 0, and the maximum number of records is 40920[s2-Ethernet0/0/4]Apr 19 2022 10:25:21-08:00 s2 DS/4/DATASYNC_CFGCHANGE:OID 1.3.6.1.4.1.2011.5.25.191.3.1 configurations have been changed. The current change number is 11, the change loop count is 0, and the maximum number of records is 4095.[s2-Ethernet0/0/4]</code></pre><p>在s1和s2上配置trunk以及相关配置</p><pre class=" language-md"><code class="language-md">[s1-Ethernet0/0/3]int e0/0/1[s1-Ethernet0/0/1]por link-t trunk[s1-Ethernet0/0/1]Apr 19 2022 10:28:28-08:00 s1 DS/4/DATASYNC_CFGCHANGE:OID 1.3.6.1.4.1.2011.5.25.191.3.1 configurations have been changed. The current change number is 12, the change loop count is 0, and the maximum number of records is 4095.por[s1-Ethernet0/0/1]port tru[s1-Ethernet0/0/1]port trunk all[s1-Ethernet0/0/1]port trunk allow-pass vlan 10 20[s1-Ethernet0/0/1]Apr 19 2022 10:28:48-08:00 s1 DS/4/DATASYNC_CFGCHANGE:OID 1.3.6.1.4.1.2011.5.25.191.3.1 configurations have been changed. The current change number is 13, the change loop count is 0, and the maximum number of records is 4095.[s1-Ethernet0/0/1][s2-Ethernet0/0/4]int e0/0/2[s2-Ethernet0/0/2]por[s2-Ethernet0/0/2]port link-t t[s2-Ethernet0/0/2]port link-t trunk [s2-Ethernet0/0/2]por tApr 19 2022 10:29:31-08:00 s2 DS/4/DATASYNC_CFGCHANGE:OID 1.3.6.1.4.1.2011.5.25.191.3.1 configurations have been changed. The current change number is 12, the change loop count is 0, and the maximum number of records is 4095. a vlan 10 20[s2-Ethernet0/0/2]Apr 19 2022 10:29:51-08:00 s2 DS/4/DATASYNC_CFGCHANGE:OID 1.3.6.1.4.1.2011.5.25.191.3.1 configurations have been changed. The current change number is 13, the change loop count is 0, and the maximum number of records is 4095.[s2-Ethernet0/0/2]</code></pre><p>在s3上配置trunk，并通过所有vlan，最后使用display port vlan查看vlan和接口配置情况</p><pre class=" language-md"><code class="language-md">[s3]int g0/0/1[s3-GigabitEthernet0/0/1]por[s3-GigabitEthernet0/0/1]port link-t t[s3-GigabitEthernet0/0/1]port t a vlan allApr 19 2022 10:30:30-08:00 s3 DS/4/DATASYNC_CFGCHANGE:OID 1.3.6.1.4.1.2011.5.25.191.3.1 configurations have been changed. The current change number is 9, the change loop count is 0, and the maximum number of records is 4095.[s3-GigabitEthernet0/0/1]int g0/0/2[s3-GigabitEthernet0/0/2]port link-t t    [s3-GigabitEthernet0/0/2]port t a vlan allApr 19 2022 10:30:40-08:00 s3 DS/4/DATASYNC_CFGCHANGE:OID 1.3.6.1.4.1.2011.5.25.191.3.1 configurations have been changed. The current change number is 11, the change loop count is 0, and the maximum number of records is 4095.[s3-GigabitEthernet0/0/2]Apr 19 2022 10:30:50-08:00 s3 DS/4/DATASYNC_CFGCHANGE:OID 1.3.6.1.4.1.2011.5.25.191.3.1 configurations have been changed. The current change number is 12, the change loop count is 0, and the maximum number of records is 4095.q[s3]dis port vlan Port                    Link Type    PVID  Trunk VLAN List-------------------------------------------------------------------------------GigabitEthernet0/0/1    trunk        1     1-4094GigabitEthernet0/0/2    trunk        1     1-4094GigabitEthernet0/0/3    hybrid       1     -                                   GigabitEthernet0/0/4    hybrid       1     -                                   GigabitEthernet0/0/5    hybrid       1     -                                   GigabitEthernet0/0/6    hybrid       1     -                                   GigabitEthernet0/0/7    hybrid       1     -                                   GigabitEthernet0/0/8    hybrid       1     -                                   GigabitEthernet0/0/9    hybrid       1     -                                   GigabitEthernet0/0/10   hybrid       1     -                                   GigabitEthernet0/0/11   hybrid       1     -                                   GigabitEthernet0/0/12   hybrid       1     -                                   GigabitEthernet0/0/13   hybrid       1     -                                   GigabitEthernet0/0/14   hybrid       1     -                                   GigabitEthernet0/0/15   hybrid       1     -                                   GigabitEthernet0/0/16   hybrid       1     -                                   GigabitEthernet0/0/17   hybrid       1     -                                   GigabitEthernet0/0/18   hybrid       1     -                                   GigabitEthernet0/0/19   hybrid       1     -                                   GigabitEthernet0/0/20   hybrid       1     -                                   GigabitEthernet0/0/21   hybrid       1     -                                   GigabitEthernet0/0/22   hybrid       1     -                                   GigabitEthernet0/0/23   hybrid       1     -                                   GigabitEthernet0/0/24   hybrid       1     -                                   [s3] </code></pre><p>测试连通性，pc1与pc3的通信，pc2与pc4的通信</p><pre class=" language-md"><code class="language-md">PC>ping 10.1.1.3Ping 10.1.1.3: 32 data bytes, Press Ctrl_C to breakFrom 10.1.1.3: bytes=32 seq=1 ttl=128 time=141 msFrom 10.1.1.3: bytes=32 seq=2 ttl=128 time=140 msFrom 10.1.1.3: bytes=32 seq=3 ttl=128 time=110 msFrom 10.1.1.3: bytes=32 seq=4 ttl=128 time=93 msFrom 10.1.1.3: bytes=32 seq=5 ttl=128 time=125 ms--- 10.1.1.3 ping statistics ---  5 packet(s) transmitted  5 packet(s) received  0.00% packet loss  round-trip min/avg/max = 93/121/141 msPC>PC>ping 10.1.1.4Ping 10.1.1.4: 32 data bytes, Press Ctrl_C to breakFrom 10.1.1.4: bytes=32 seq=1 ttl=128 time=156 msFrom 10.1.1.4: bytes=32 seq=2 ttl=128 time=109 msFrom 10.1.1.4: bytes=32 seq=3 ttl=128 time=125 msFrom 10.1.1.4: bytes=32 seq=4 ttl=128 time=94 msFrom 10.1.1.4: bytes=32 seq=5 ttl=128 time=125 ms--- 10.1.1.4 ping statistics ---  5 packet(s) transmitted  5 packet(s) received  0.00% packet loss  round-trip min/avg/max = 94/121/156 msPC></code></pre><p>检查pc1与pc2的连通性</p><pre class=" language-md"><code class="language-md">PC>ping 10.1.1.2Ping 10.1.1.2: 32 data bytes, Press Ctrl_C to breakFrom 10.1.1.1: Destination host unreachableFrom 10.1.1.1: Destination host unreachableFrom 10.1.1.1: Destination host unreachableFrom 10.1.1.1: Destination host unreachableFrom 10.1.1.1: Destination host unreachable--- 10.1.1.2 ping statistics ---  5 packet(s) transmitted  0 packet(s) received  100.00% packet lossPC></code></pre><h4 id="hybrid"><a href="#hybrid" class="headerlink" title="hybrid"></a>hybrid</h4><p>实验内容：只允许部门内部通讯，部门之间不允许通讯；it部门可以访问所有部门<br>拓扑图：<img src="../../../../medias/network/3/3.3.png" alt="拓扑图"><br>编址表：</p><table><thead><tr><th align="center">设备</th><th align="center">接口</th><th align="center">IP地址</th><th align="center">子网掩码</th><th align="center">默认网关</th></tr></thead><tbody><tr><td align="center">pc1</td><td align="center">e0/0/1</td><td align="center">192.168.1.1</td><td align="center">24</td><td align="center">-</td></tr><tr><td align="center">pc2</td><td align="center">e0/0/1</td><td align="center">192.168.1.2</td><td align="center">24</td><td align="center">-</td></tr><tr><td align="center">pc3</td><td align="center">e0/0/1</td><td align="center">192.168.1.3</td><td align="center">24</td><td align="center">-</td></tr><tr><td align="center">pc4</td><td align="center">e0/0/1</td><td align="center">192.168.1.4</td><td align="center">24</td><td align="center">-</td></tr><tr><td align="center">pc5</td><td align="center">e0/0/1</td><td align="center">192.168.1.100</td><td align="center">24</td><td align="center">-</td></tr></tbody></table><p>配置步骤：<br>将IP地址按照编址表配置到对应位置<br>默认情况下，交换机上的所有接口地都处于hybrid状态，接口的pvid为vlan1.<br>下面按要求进行内通信，组隔离的配置</p><pre class=" language-md"><code class="language-md">[s1]vlan 10[s1-vlan10]vlan 20[s1-vlan20]Apr 19 2022 15:24:58-08:00 s1 DS/4/DATASYNC_CFGCHANGE:OID 1.3.6.1.4.1.2011.5.25.191.3.1 configurations have been changed. The current change number is 6, the change loop count is 0, and the maximum number of records is 4095.[s1-vlan20]int e0/0/2[s1-Ethernet0/0/2]por[s1-Ethernet0/0/2]port l[s1-Ethernet0/0/2]port link-t a[s1-Ethernet0/0/2]port Apr 19 2022 15:25:38-08:00 s1 DS/4/DATASYNC_CFGCHANGE:OID 1.3.6.1.4.1.2011.5.25.191.3.1 configurations have been changed. The current change number is 7, the change loop count is 0, and the maximum number of records is 4095.de vlan 20[s1-Ethernet0/0/2]Apr 19 2022 15:25:58-08:00 s1 DS/4/DATASYNC_CFGCHANGE:OID 1.3.6.1.4.1.2011.5.25.191.3.1 configurations have been changed. The current change number is 8, the change loop count is 0, and the maximum number of records is 4095.[s1-Ethernet0/0/2]int e0/0/3     [s1-Ethernet0/0/3]port link-t a  [s1-Ethernet0/0/3]port de vlan 10[s1-Ethernet0/0/3]Apr 19 2022 15:26:28-08:00 s1 DS/4/DATASYNC_CFGCHANGE:OID 1.3.6.1.4.1.2011.5.25.191.3.1 configurations have been changed. The current change number is 10, the change loop count is 0, and the maximum number of records is 4095.[s1-Ethernet0/0/3][s1-Ethernet0/0/3]int e0/0/1[s1-Ethernet0/0/1]port link-t t[s1-Ethernet0/0/1]port t all vlan aApr 19 2022 15:29:18-08:00 s1 DS/4/DATASYNC_CFGCHANGE:OID 1.3.6.1.4.1.2011.5.25.191.3.1 configurations have been changed. The current change number is 11, the change loop count is 0, and the maximum number of records is 4095.ll[s1-Ethernet0/0/1]Apr 19 2022 15:29:28-08:00 s1 DS/4/DATASYNC_CFGCHANGE:OID 1.3.6.1.4.1.2011.5.25.191.3.1 configurations have been changed. The current change number is 12, the change loop count is 0, and the maximum number of records is 4095.[s1-Ethernet0/0/1][s2]vlan 10[s2-vlan10]vlan 20[s2-vlan20]int e0/0/Apr 19 2022 15:27:10-08:00 s2 DS/4/DATASYNC_CFGCHANGE:OID 1.3.6.1.4.1.2011.5.25.191.3.1 configurations have been changed. The current change number is 6, the change loop count is 0, and the maximum number of records is 4095.2[s2-Ethernet0/0/2]port link-t a[s2-Ethernet0/0/2]port de a                          ^Error: Unrecognized command found at '^' position.[s2-Ethernet0/0/2]Apr 19 2022 15:27:30-08:00 s2 DS/4/DATASYNC_CFGCHANGE:OID 1.3.6.1.4.1.2011.5.25.191.3.1 configurations have been changed. The current change number is 7, the change loop count is 0, and the maximum number of records is 4095.port de vlan 20[s2-Ethernet0/0/2]Apr 19 2022 15:27:40-08:00 s2 DS/4/DATASYNC_CFGCHANGE:OID 1.3.6.1.4.1.2011.5.25.191.3.1 configurations have been changed. The current change number is 8, the change loop count is 0, and the maximum number of records is 4095.int e0/0/3     [s2-Ethernet0/0/3]port de a                             ^Error: Unrecognized command found at '^' position.[s2-Ethernet0/0/3]port link-t a  [s2-Ethernet0/0/3]port de vlan 10[s2-Ethernet0/0/3]Apr 19 2022 15:28:00-08:00 s2 DS/4/DATASYNC_CFGCHANGE:OID 1.3.6.1.4.1.2011.5.25.191.3.1 configurations have been changed. The current change number is 10, the change loop count is 0, and the maximum number of records is 4095.[s2-Ethernet0/0/3]int e0/0/1[s2-Ethernet0/0/1]por[s2-Ethernet0/0/1]port l[s2-Ethernet0/0/1]port link-t[s2-Ethernet0/0/1]port link-type t[s2-Ethernet0/0/1]por[s2-Ethernet0/0/1]port t[s2-Ethernet0/0/1]port trunk Apr 19 2022 15:28:30-08:00 s2 DS/4/DATASYNC_CFGCHANGE:OID 1.3.6.1.4.1.2011.5.25.191.3.1 configurations have been changed. The current change number is 11, the change loop count is 0, and the maximum number of records is 4095.[s2-Ethernet0/0/1]port trunk ?  allow-pass  Allowed vlan  pvid        Specify current port's PVID VLAN characteristics[s2-Ethernet0/0/1]port trunk all vlan all[s2-Ethernet0/0/1]Apr 19 2022 15:29:00-08:00 s2 DS/4/DATASYNC_CFGCHANGE:OID 1.3.6.1.4.1.2011.5.25.191.3.1 configurations have been changed. The current change number is 12, the change loop count is 0, and the maximum number of records is 4095.[s2-Ethernet0/0/1]</code></pre><p>查看一下vlan</p><pre class=" language-md"><code class="language-md">[s1]dis vlanThe total number of vlans is : 3--------------------------------------------------------------------------------U: Up;         D: Down;         TG: Tagged;         UT: Untagged;MP: Vlan-mapping;               ST: Vlan-stacking;#: ProtocolTransparent-vlan;    *: Management-vlan;--------------------------------------------------------------------------------VID  Type    Ports                                                          --------------------------------------------------------------------------------1    common  UT:Eth0/0/1(U)     Eth0/0/4(U)     Eth0/0/5(D)     Eth0/0/6(D)                     Eth0/0/7(D)     Eth0/0/8(D)     Eth0/0/9(D)     Eth0/0/10(D)                    Eth0/0/11(D)    Eth0/0/12(D)    Eth0/0/13(D)    Eth0/0/14(D)                    Eth0/0/15(D)    Eth0/0/16(D)    Eth0/0/17(D)    Eth0/0/18(D)                    Eth0/0/19(D)    Eth0/0/20(D)    Eth0/0/21(D)    Eth0/0/22(D)                    GE0/0/1(D)      GE0/0/2(D)                                      10   common  UT:Eth0/0/3(U)                                                                  TG:Eth0/0/1(U)                                                     20   common  UT:Eth0/0/2(U)                                                                  TG:Eth0/0/1(U)                                                     VID  Status  Property      MAC-LRN Statistics Description      --------------------------------------------------------------------------------1    enable  default       enable  disable    VLAN 0001                         10   enable  default       enable  disable    VLAN 0010                         20   enable  default       enable  disable    VLAN 0020                         [s1][s2]dis vlan The total number of vlans is : 3--------------------------------------------------------------------------------U: Up;         D: Down;         TG: Tagged;         UT: Untagged;MP: Vlan-mapping;               ST: Vlan-stacking;#: ProtocolTransparent-vlan;    *: Management-vlan;--------------------------------------------------------------------------------VID  Type    Ports                                                          --------------------------------------------------------------------------------1    common  UT:Eth0/0/1(U)     Eth0/0/4(D)     Eth0/0/5(D)     Eth0/0/6(D)                     Eth0/0/7(D)     Eth0/0/8(D)     Eth0/0/9(D)     Eth0/0/10(D)                    Eth0/0/11(D)    Eth0/0/12(D)    Eth0/0/13(D)    Eth0/0/14(D)                    Eth0/0/15(D)    Eth0/0/16(D)    Eth0/0/17(D)    Eth0/0/18(D)                    Eth0/0/19(D)    Eth0/0/20(D)    Eth0/0/21(D)    Eth0/0/22(D)                    GE0/0/1(D)      GE0/0/2(D)                                      10   common  UT:Eth0/0/3(U)                                                                  TG:Eth0/0/1(U)                                                     20   common  UT:Eth0/0/2(U)                                                                  TG:Eth0/0/1(U)                                                     VID  Status  Property      MAC-LRN Statistics Description      --------------------------------------------------------------------------------1    enable  default       enable  disable    VLAN 0001                         10   enable  default       enable  disable    VLAN 0010                         20   enable  default       enable  disable    VLAN 0020                         [s2]</code></pre><p>接下来测试一下连通性</p><pre class=" language-md"><code class="language-md">PC>ping 192.168.1.3Ping 192.168.1.3: 32 data bytes, Press Ctrl_C to breakFrom 192.168.1.3: bytes=32 seq=1 ttl=128 time=78 msFrom 192.168.1.3: bytes=32 seq=2 ttl=128 time=94 msFrom 192.168.1.3: bytes=32 seq=3 ttl=128 time=78 msFrom 192.168.1.3: bytes=32 seq=4 ttl=128 time=78 msFrom 192.168.1.3: bytes=32 seq=5 ttl=128 time=78 ms--- 192.168.1.3 ping statistics ---  5 packet(s) transmitted  5 packet(s) received  0.00% packet loss  round-trip min/avg/max = 78/81/94 msPC>ping 192.168.1.2Ping 192.168.1.2: 32 data bytes, Press Ctrl_C to breakFrom 192.168.1.1: Destination host unreachableFrom 192.168.1.1: Destination host unreachableFrom 192.168.1.1: Destination host unreachableFrom 192.168.1.1: Destination host unreachableFrom 192.168.1.1: Destination host unreachable--- 192.168.1.2 ping statistics ---  5 packet(s) transmitted  0 packet(s) received  100.00% packet lossPC></code></pre><p>可以观察到，在单台交换机及跨交换机间的访问控制使用Trunk和Access类型接口实现了需求，但同样的需求使用Hybrid实现会更灵活。<br>S1的E 0/0/2接口连接PC-1主机，该接口收到的PC-1发送的Untagged的帧会被交换机转发到VLAN 20。同样，交换机从其他接口收到VLAN 20的发往PC-1的帧也会以Untagged的方式从E 0/0/2接口发送。S1的E 0/0/3接口连接PC-2主机，该接口收到Untagged的帧会被转发到VLAN 10。如果交换机收到的VLAN 10的发往PC-2的帧也会以Untagged的方式从接口E 0/0/3发送。VLAN 10和VLAN 20的帧也要经过交换机间链路发送至邻居交换机S2。反之，S1收到来自邻居交换机S2的Tagged的帧后，也会根据VLAN Tag转发到相应的VLAN。<br>接下来先将刚刚配置完成的端口恢复成默认配置，再根据hybrid类型的特性和实验要求进行配置；先恢复默认vlan，再恢复接口类型。<br>先恢复s1上的e0/0/2</p><pre class=" language-md"><code class="language-md">[s1]int e0/0/2[s1-Ethernet0/0/2]undo port de vlan[s1-Ethernet0/0/2]Apr 21 2022 09:24:31-08:00 s1 DS/4/DATASYNC_CFGCHANGE:OID 1.3.6.1.4.1.2011.5.25.191.3.1 configurations have been changed. The current change number is 1, the change loop count is 0, and the maximum number of records is 4095.port link-t h[s1-Ethernet0/0/2]Apr 21 2022 09:24:51-08:00 s1 DS/4/DATASYNC_CFGCHANGE:OID 1.3.6.1.4.1.2011.5.25.191.3.1 configurations have been changed. The current change number is 2, the change loop count is 0, and the maximum number of records is 4095.[s1-Ethernet0/0/2]</code></pre><p>然后配置vlan tag剥离，使得数据包在进行转发时，剥离掉vlan tag，以untagged的方式发送</p><pre class=" language-md"><code class="language-md">[s1-Ethernet0/0/2]port hybrid untagged vlan 20[s1-Ethernet0/0/2]Apr 21 2022 09:27:01-08:00 s1 DS/4/DATASYNC_CFGCHANGE:OID 1.3.6.1.4.1.2011.5.25.191.3.1 configurations have been changed. The current change number is 3, the change loop count is 0, and the maximum number of records is 4095.</code></pre><p>配置该接口hybrid的默认vlan id，即该端口在接收到pc发来的未带vlan tag的数据包时，加上指定vlan tag，并转发到对应vlan中</p><pre class=" language-md"><code class="language-md">[s1-Ethernet0/0/2]port hybrid pvid vlan 20[s1-Ethernet0/0/2]Apr 21 2022 09:27:21-08:00 s1 DS/4/DATASYNC_CFGCHANGE:OID 1.3.6.1.4.1.2011.5.25.191.3.1 configurations have been changed. The current change number is 4, the change loop count is 0, and the maximum number of records is 4095.</code></pre><p>在s1的e0/0/3端口上做相应配置</p><pre class=" language-md"><code class="language-md">[s1]int e0/0/3[s1-Ethernet0/0/3]undo port de vlan[s1-Ethernet0/0/3]port link-t h     [s1-Ethernet0/0/3]Apr 21 2022 11:44:06-08:00 s1 DS/4/DATASYNC_CFGCHANGE:OID 1.3.6.1.4.1.2011.5.25.191.3.1 configurations have been changed. The current change number is 6, the change loop count is 0, and the maximum number of records is 4095.[s1-Ethernet0/0/3]port hy pvid vlan 10[s1-Ethernet0/0/3]port hy un vlan 10Apr 21 2022 11:44:26-08:00 s1 DS/4/DATASYNC_CFGCHANGE:OID 1.3.6.1.4.1.2011.5.25.191.3.1 configurations have been changed. The current change number is 7, the change loop count is 0, and the maximum number of records is 4095.[s1-Ethernet0/0/3]</code></pre><p>s1的e0/0/1端口负责跨交换机通信，按照需求，需要将vlan10和vlan20两个广播域的数据包发送过去</p><pre class=" language-md"><code class="language-md">[s1-Ethernet0/0/1]port hybrid ta[s1-Ethernet0/0/1]port hybrid tagged vlan 10 20[s1-Ethernet0/0/1]Apr 21 2022 11:57:27-08:00 s1 DS/4/DATASYNC_CFGCHANGE:OID 1.3.6.1.4.1.2011.5.25.191.3.1 configurations have been changed. The current change number is 13, the change loop count is 0, and the maximum number of records is 4095.[s1-Ethernet0/0/1]</code></pre><p>在s2上的应用端口也做同样的配置</p><pre class=" language-md"><code class="language-md">[s2]int e0/0/2[s2-Ethernet0/0/2]undo port de vlan [s2-Ethernet0/0/2]Apr 21 2022 11:58:54-08:00 s2 DS/4/DATASYNC_CFGCHANGE:OID 1.3.6.1.4.1.2011.5.25.191.3.1 configurations have been changed. The current change number is 1, the change loop count is 0, and the maximum number of records is 4095.[s2-Ethernet0/0/2]port link-t h[s2-Ethernet0/0/2]port hApr 21 2022 11:59:14-08:00 s2 DS/4/DATASYNC_CFGCHANGE:OID 1.3.6.1.4.1.2011.5.25.191.3.1 configurations have been changed. The current change number is 2, the change loop count is 0, and the maximum number of records is 4095. [s2-Ethernet0/0/2]port hybrid un[s2-Ethernet0/0/2]port hybrid untagged vlan 20[s2-Ethernet0/0/2]port hyApr 21 2022 11:59:44-08:00 s2 DS/4/DATASYNC_CFGCHANGE:OID 1.3.6.1.4.1.2011.5.25.191.3.1 configurations have been changed. The current change number is 3, the change loop count is 0, and the maximum number of records is 4095.[s2-Ethernet0/0/2]port hybrid pv[s2-Ethernet0/0/2]port hybrid pvid vlan 20[s2-Ethernet0/0/2]Apr 21 2022 12:00:04-08:00 s2 DS/4/DATASYNC_CFGCHANGE:OID 1.3.6.1.4.1.2011.5.25.191.3.1 configurations have been changed. The current change number is 4, the change loop count is 0, and the maximum number of records is 4095.[s2-Ethernet0/0/2]int e0/0/3[s2-Ethernet0/0/3]undo port de vlan           [s2-Ethernet0/0/3]port link-t h               Apr 21 2022 12:00:24-08:00 s2 DS/4/DATASYNC_CFGCHANGE:OID 1.3.6.1.4.1.2011.5.25.191.3.1 configurations have been changed. The current change number is 5, the change loop count is 0, and the maximum number of recport hybrid untagged                             [s2-Ethernet0/0/3]port hybrid untagged vlan 20                       ^Error: Unrecognized command found at '^' position.[s2-Ethernet0/0/3]port hybrid untagged vlan 10                       ^Error: Unrecognized command found at '^' position.[s2-Ethernet0/0/3]port link-t h               [s2-Ethernet0/0/3]port hybrid untagged vlan 10[s2-Ethernet0/0/3]undo port de vlan           Apr 21 2022 12:01:54-08:00 s2 DS/4/DATASYNC_CFGCHANGE:OID 1.3.6.1.4.1.2011.5.25.191.3.1 configurations have been changed. The current change number is 7, the change loop count is 0, and the maximum number ofport hybrid pvid vlan 10[s2-Ethernet0/0/3]Apr 21 2022 12:02:04-08:00 s2 DS/4/DATASYNC_CFGCHANGE:OID 1.3.6.1.4.1.2011.5.25.191.3.1 configurations have been changed. The current change number is 8, the change loop count is 0, and the maximum number of records is 4095.[s2-Ethernet0/0/3]int e0/0/1[s2-Ethernet0/0/1]port tr[s2-Ethernet0/0/1]port trunk all[s2-Ethernet0/0/1]port trunk allow-pass vlan 1 [s2-Ethernet0/0/1]port link-t hError: Please renew the default configurations.[s2-Ethernet0/0/1]q[s2]clear configuration interface Ethernet 0/0/1Warning: All configurations of the interface will be cleared, and its state will be shutdown. Continue? [Y/N] :yInfo: Total execute 2 command(s), 2 successful, 0 failed.[s2]Apr 21 2022 13:34:48-08:00 s2 DS/4/DATASYNC_CFGCHANGE:OID 1.3.6.1.4.1.2011.5.25.191.3.1 configurations have been changed. The current change number is 11, the change loop count is 0, and the maximum number of records is 4095.Apr 21 2022 13:34:48-08:00 s2 %%01PHY/1/PHY(l)[1]:    Ethernet0/0/1: change status to down[s2]int e0/0/1[s2-Ethernet0/0/1]undo shutdown[s2-Ethernet0/0/1]Apr 21 2022 13:35:03-08:00 s2 %%01PHY/1/PHY(l)[2]:    Ethernet0/0/1: change status to up[s2-Ethernet0/0/1]Apr 21 2022 13:35:08-08:00 s2 DS/4/DATASYNC_CFGCHANGE:OID 1.3.6.1.4.1.2011.5.25.191.3.1 configurations have been changed. The current change number is 12, the change loop count is 0, and the maximum number of records is 4095.[s2-Ethernet0/0/1]port link-t hy[s2-Ethernet0/0/1]port hy ta vlan 10 20[s2-Ethernet0/0/1]Apr 21 2022 13:35:58-08:00 s2 DS/4/DATASYNC_CFGCHANGE:OID 1.3.6.1.4.1.2011.5.25.191.3.1 configurations have been changed. The current change number is 13, the change loop count is 0, and the maximum number of records is 4095.[s2-Ethernet0/0/1]</code></pre><p>完成后查看一下vlan和接口的对应关系</p><pre class=" language-md"><code class="language-md">[s1]dis vlanThe total number of vlans is : 3--------------------------------------------------------------------------------U: Up;         D: Down;         TG: Tagged;         UT: Untagged;MP: Vlan-mapping;               ST: Vlan-stacking;#: ProtocolTransparent-vlan;    *: Management-vlan;--------------------------------------------------------------------------------VID  Type    Ports                                                          --------------------------------------------------------------------------------1    common  UT:Eth0/0/1(U)     Eth0/0/2(U)     Eth0/0/3(U)     Eth0/0/4(U)                     Eth0/0/5(D)     Eth0/0/6(D)     Eth0/0/7(D)     Eth0/0/8(D)                     Eth0/0/9(D)     Eth0/0/10(D)    Eth0/0/11(D)    Eth0/0/12(D)                    Eth0/0/13(D)    Eth0/0/14(D)    Eth0/0/15(D)    Eth0/0/16(D)                    Eth0/0/17(D)    Eth0/0/18(D)    Eth0/0/19(D)    Eth0/0/20(D)                    Eth0/0/21(D)    Eth0/0/22(D)    GE0/0/1(D)      GE0/0/2(D)      10   common  UT:Eth0/0/3(U)                                                                  TG:Eth0/0/1(U)                                                     20   common  UT:Eth0/0/2(U)                                                                  TG:Eth0/0/1(U)                                                     VID  Status  Property      MAC-LRN Statistics Description      --------------------------------------------------------------------------------1    enable  default       enable  disable    VLAN 0001                         10   enable  default       enable  disable    VLAN 0010                         20   enable  default       enable  disable    VLAN 0020                         [s1][s2-Ethernet0/0/1]dis vlanThe total number of vlans is : 3--------------------------------------------------------------------------------U: Up;         D: Down;         TG: Tagged;         UT: Untagged;MP: Vlan-mapping;               ST: Vlan-stacking;#: ProtocolTransparent-vlan;    *: Management-vlan;--------------------------------------------------------------------------------VID  Type    Ports                                                          --------------------------------------------------------------------------------1    common  UT:Eth0/0/1(U)     Eth0/0/2(U)     Eth0/0/3(U)     Eth0/0/4(D)                     Eth0/0/5(D)     Eth0/0/6(D)     Eth0/0/7(D)     Eth0/0/8(D)                     Eth0/0/9(D)     Eth0/0/10(D)    Eth0/0/11(D)    Eth0/0/12(D)                    Eth0/0/13(D)    Eth0/0/14(D)    Eth0/0/15(D)    Eth0/0/16(D)                    Eth0/0/17(D)    Eth0/0/18(D)    Eth0/0/19(D)    Eth0/0/20(D)                    Eth0/0/21(D)    Eth0/0/22(D)    GE0/0/1(D)      GE0/0/2(D)      10   common  UT:Eth0/0/3(U)                                                                  TG:Eth0/0/1(U)                                                     20   common  UT:Eth0/0/2(U)                                                                  TG:Eth0/0/1(U)                                                     VID  Status  Property      MAC-LRN Statistics Description      --------------------------------------------------------------------------------1    enable  default       enable  disable    VLAN 0001                         10   enable  default       enable  disable    VLAN 0010                         20   enable  default       enable  disable    VLAN 0020                         [s2-Ethernet0/0/1]</code></pre><p>经过上面的操作后，现在也能够实现access和trunk那套配置的效果了。<br>接下来实现it可以访问任何部门，即在各单位不能互相访问的基础上，只允许vlan30到vlan10和20的单向访问，</p><pre class=" language-md"><code class="language-md">[s1]vlan 30[s1-vlan30]int e0/0/4Apr 21 2022 13:46:31-08:00 s1 DS/4/DATASYNC_CFGCHANGE:OID 1.3.6.1.4.1.2011.5.25.191.3.1 configurations have been changed. The current change number is 14, the change loop count is 0, and the maximum number of records is 4095.[s1-Ethernet0/0/4]por[s1-Ethernet0/0/4]port h[s1-Ethernet0/0/4]port hybrid p[s1-Ethernet0/0/4]port hybrid pvid vlan 30[s1-Ethernet0/0/4]</code></pre><p>因为华为交换机各个端口默认是hybrid类型，所以类型无需修改<br>s1收到vlan10，20，30都要从该接口发送至pc，所以需要配置上述三个vlan的数据包以untagged方式从该接口发送出去</p><pre class=" language-md"><code class="language-md">[s1-Ethernet0/0/4]port hybrid untagged vlan 10 20 30</code></pre><p>同理，端口e0/0/2接pc1的端口收到untagged帧要发送到vlan20，</p><pre class=" language-md"><code class="language-md"></code></pre><blockquote><p>交换机tagged与untagged的关系<br>端口接收数据时:<br>如果端口是tagged方式，当数据包本身不包含VLAN的话，输入的数据包就加上该缺省vlan;如果数据包本<br>身已经包含了VLAN,那么就不再添加。<br>如果是untagged方式，输入的数据包全部都要加上该缺省vlan。不管输入的数据包是否已经有VLAN标记。<br>端口发送数据时:<br>如果端口是tagged方式,如果端口缺省VLAN等于发送的数据包所含的VLAN,那么就会将VLAN标记从发送<br>的数据包中去掉;如果不相等，则数据包将带着VLAN发送出去，实现VLAN的透传。<br>如果是untagged方式，则不管端口缺省VLAN为多少,是否等于要输出的数据包的VLAN,都会将VLAN ID<br>从数据包中去掉。</p></blockquote><h1 id="上面hy部分暂时烂尾，需重新调整"><a href="#上面hy部分暂时烂尾，需重新调整" class="headerlink" title="上面hy部分暂时烂尾，需重新调整"></a>上面hy部分暂时烂尾，需重新调整</h1><h4 id="单臂路由"><a href="#单臂路由" class="headerlink" title="单臂路由"></a>单臂路由</h4><p>实验内容：<br>拓扑图：<img src="../../../../medias/network/3/3.4.png" alt="拓扑图"><br>编址表：</p><table><thead><tr><th align="center">设备</th><th align="center">接口</th><th align="center">IP地址</th><th align="center">子网掩码</th><th align="center">默认网关</th></tr></thead><tbody><tr><td align="center">r1</td><td align="center">g0/0/1.1</td><td align="center">192.168.1.254</td><td align="center">24</td><td align="center">-</td></tr><tr><td align="center">r1</td><td align="center">g0/0/1.2</td><td align="center">192.168.2.254</td><td align="center">24</td><td align="center">-</td></tr><tr><td align="center">r1</td><td align="center">g0/0/1.3</td><td align="center">192.168.3.254</td><td align="center">24</td><td align="center">-</td></tr><tr><td align="center">pc1</td><td align="center">e0/0/1</td><td align="center">192.168.1.1</td><td align="center">24</td><td align="center">192.168.1.254</td></tr><tr><td align="center">pc2</td><td align="center">e0/0/1</td><td align="center">192.168.2.1</td><td align="center">24</td><td align="center">192.168.2.254</td></tr><tr><td align="center">pc3</td><td align="center">e0/0/1</td><td align="center">192.168.3.1</td><td align="center">24</td><td align="center">192.168.3.254</td></tr></tbody></table><p>实验步骤：<br>s2创建vlan access trunk</p><pre class=" language-md"><code class="language-md"><S2>sysEnter system view, return user view with Ctrl+Z.[S2]vlan 10[S2-vlan10]des HR[S2-vlan10]vlan 20[S2-vlan20]des MARKET[S2-vlan20]int e0/0/1[S2-Ethernet0/0/1]port link-t acc[S2-Ethernet0/0/1]port de vlan 10[S2-Ethernet0/0/1]int e0/0/2[S2-Ethernet0/0/2]port link-t acc[S2-Ethernet0/0/2]port de vlan 20[S2-Ethernet0/0/2]</code></pre><p>s3做同样配置</p><pre class=" language-md"><code class="language-md"><S3><S3>sysEnter system view, return user view with Ctrl+Z.[S3]vlan 30[S3-vlan30]des Manager[S3-vlan30]int e0/0/1[S3-Ethernet0/0/1]port link-t acc[S3-Ethernet0/0/1]port de vlan 30[S3-Ethernet0/0/1]</code></pre><p>交换机与同设备或网络设备连接的端口需要使用trunk，且需要允许所有vlan通过</p><pre class=" language-md"><code class="language-md">[S2]int g0/0/2[S2-GigabitEthernet0/0/2]port link-t t[S2-GigabitEthernet0/0/2]port tr all vlan all[S2-GigabitEthernet0/0/2][S3]int g0/0/2[S3-GigabitEthernet0/0/2]port link-t tr[S3-GigabitEthernet0/0/2]port tr all vlan all[S3-GigabitEthernet0/0/2]</code></pre><p>在S1上做相同的配置</p><pre class=" language-md"><code class="language-md">[S1]vlan 10[S1-vlan10]vlan 20[S1-vlan20]vlan 30[S1-vlan30]int g0/0/2[S1-GigabitEthernet0/0/2]port link-t tr[S1-GigabitEthernet0/0/2]port tr all vlan all[S1-GigabitEthernet0/0/2]int g0/0/3[S1-GigabitEthernet0/0/3]port link-t tr[S1-GigabitEthernet0/0/3]port tr all vlan all[S1-GigabitEthernet0/0/3]int g0/0/1[S1-GigabitEthernet0/0/1]port link-t tr[S1-GigabitEthernet0/0/1]port tr all vlan all[S1-GigabitEthernet0/0/1]</code></pre><p>根据编址表配置路由器子接口和IP地址</p><pre class=" language-md"><code class="language-md">[R1]int g0/0/1.1[R1-GigabitEthernet0/0/1.1]ip add 192.168.1.254 24[R1-GigabitEthernet0/0/1.1]int g0/0/1.2           [R1-GigabitEthernet0/0/1.2]ip add 192.168.2.254 24[R1-GigabitEthernet0/0/1.2]int g0/0/1.3           [R1-GigabitEthernet0/0/1.3]ip add 192.168.3.254 24[R1-GigabitEthernet0/0/1.3]</code></pre><p>在pc1上查看连通性</p><pre class=" language-md"><code class="language-md">PC>ping 192.168.2.1Ping 192.168.2.1: 32 data bytes, Press Ctrl_C to breakFrom 192.168.1.1: Destination host unreachableFrom 192.168.1.1: Destination host unreachableFrom 192.168.1.1: Destination host unreachableFrom 192.168.1.1: Destination host unreachableFrom 192.168.1.1: Destination host unreachable--- 192.168.1.254 ping statistics ---  5 packet(s) transmitted  0 packet(s) received  100.00% packet lossPC>ping 192.168.3.1Ping 192.168.3.1: 32 data bytes, Press Ctrl_C to breakFrom 192.168.1.1: Destination host unreachableFrom 192.168.1.1: Destination host unreachableFrom 192.168.1.1: Destination host unreachableFrom 192.168.1.1: Destination host unreachableFrom 192.168.1.1: Destination host unreachable--- 192.168.1.254 ping statistics ---  5 packet(s) transmitted  0 packet(s) received  100.00% packet lossPC></code></pre><p>可以看到没有正常联通，接下来配置子接口封装vlan，</p><pre class=" language-md"><code class="language-md">[R1-GigabitEthernet0/0/1.3]int g0/0/1.1[R1-GigabitEthernet0/0/1.1]dot1q termination vid 10[R1-GigabitEthernet0/0/1.1]arp broadcast enable[R1-GigabitEthernet0/0/1.1]</code></pre><p>2和3的子接口同理</p><pre class=" language-md"><code class="language-md">[R1-GigabitEthernet0/0/1.1]int g0/0/1.2[R1-GigabitEthernet0/0/1.2]dot1q ter vid 20[R1-GigabitEthernet0/0/1.2]arp broad enable[R1-GigabitEthernet0/0/1.2]int g0/0/1.3    [R1-GigabitEthernet0/0/1.3]dot1q ter vid 30[R1-GigabitEthernet0/0/1.3]arp broad enable[R1-GigabitEthernet0/0/1.3]</code></pre><p>接下来查看路由器接口状态</p><pre class=" language-md"><code class="language-md">[R1]dis ip int bri*down: administratively down^down: standby(l): loopback(s): spoofingThe number of interface that is UP in Physical is 5The number of interface that is DOWN in Physical is 2The number of interface that is UP in Protocol is 4The number of interface that is DOWN in Protocol is 3Interface                         IP Address/Mask      Physical   Protocol  GigabitEthernet0/0/0              unassigned           down       down      GigabitEthernet0/0/1              unassigned           up         down      GigabitEthernet0/0/1.1            192.168.1.254/24     up         up        GigabitEthernet0/0/1.2            192.168.2.254/24     up         up        GigabitEthernet0/0/1.3            192.168.3.254/24     up         up        GigabitEthernet0/0/2              unassigned           down       down      NULL0                             unassigned           up         up(s)     [R1]</code></pre><p>查看路由表</p><pre class=" language-Bash"><code class="language-Bash">[R1]dis ip rouRoute Flags: R - relay, D - download to fib------------------------------------------------------------------------------Routing Tables: Public         Destinations : 13       Routes : 13       Destination/Mask    Proto   Pre  Cost      Flags NextHop         Interface      127.0.0.0/8   Direct  0    0           D   127.0.0.1       InLoopBack0      127.0.0.1/32  Direct  0    0           D   127.0.0.1       InLoopBack0127.255.255.255/32  Direct  0    0           D   127.0.0.1       InLoopBack0    192.168.1.0/24  Direct  0    0           D   192.168.1.254   GigabitEthernet0/0/1.1  192.168.1.254/32  Direct  0    0           D   127.0.0.1       GigabitEthernet0/0/1.1  192.168.1.255/32  Direct  0    0           D   127.0.0.1       GigabitEthernet0/0/1.1    192.168.2.0/24  Direct  0    0           D   192.168.2.254   GigabitEthernet0/0/1.2  192.168.2.254/32  Direct  0    0           D   127.0.0.1       GigabitEthernet0/0/1.2  192.168.2.255/32  Direct  0    0           D   127.0.0.1       GigabitEthernet0/0/1.2    192.168.3.0/24  Direct  0    0           D   192.168.3.254   GigabitEthernet0/0/1.3  192.168.3.254/32  Direct  0    0           D   127.0.0.1       GigabitEthernet0/0/1.3  192.168.3.255/32  Direct  0    0           D   127.0.0.1       GigabitEthernet0/0/1.3255.255.255.255/32  Direct  0    0           D   127.0.0.1       InLoopBack0[R1]</code></pre><p>在pc1上查看连通性</p><pre class=" language-md"><code class="language-md">PC>ping 192.168.1.254Ping 192.168.1.254: 32 data bytes, Press Ctrl_C to breakFrom 192.168.1.254: bytes=32 seq=1 ttl=255 time=94 msFrom 192.168.1.254: bytes=32 seq=2 ttl=255 time=63 msFrom 192.168.1.254: bytes=32 seq=3 ttl=255 time=62 msFrom 192.168.1.254: bytes=32 seq=4 ttl=255 time=63 msFrom 192.168.1.254: bytes=32 seq=5 ttl=255 time=62 ms--- 192.168.1.254 ping statistics ---  5 packet(s) transmitted  5 packet(s) received  0.00% packet loss  round-trip min/avg/max = 62/68/94 msPC>ping 192.168.2.1Ping 192.168.2.1: 32 data bytes, Press Ctrl_C to breakRequest timeout!From 192.168.2.1: bytes=32 seq=2 ttl=127 time=109 msFrom 192.168.2.1: bytes=32 seq=3 ttl=127 time=157 msFrom 192.168.2.1: bytes=32 seq=4 ttl=127 time=140 msFrom 192.168.2.1: bytes=32 seq=5 ttl=127 time=110 ms--- 192.168.2.1 ping statistics ---  5 packet(s) transmitted  4 packet(s) received  20.00% packet loss  round-trip min/avg/max = 0/129/157 msPC></code></pre><p>发现可以正常通信，接下来在pc1上tracert pc2</p><pre class=" language-md"><code class="language-md">PC>tracert 192.168.2.1traceroute to 192.168.2.1, 8 hops max(ICMP), press Ctrl+C to stop 1  192.168.1.254   63 ms  62 ms  63 ms 2  192.168.2.1   109 ms  141 ms  125 msPC></code></pre><p>可以看到pc1先把ping包发送了网关1.254，然后再通过网关发送给了pc2</p><h6 id="编辑中……"><a href="#编辑中……" class="headerlink" title="编辑中……"></a>编辑中……</h6><p><strong><font color="red" size="5">（未完待续……）</font></strong><br><strong>更多内容：</strong></p><ul><li><a href="https://fishpond.vip/2022/03/23/hcna/">《HCNA网络技术实验指南》梳理</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 网络 </tag>
            
            <tag> 运维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>matery主题部署(完善中，暂不开放)</title>
      <link href="/2022/04/15/hexothemematery/"/>
      <url>/2022/04/15/hexothemematery/</url>
      
        <content type="html"><![CDATA[<h1 id="阅读须知"><a href="#阅读须知" class="headerlink" title="阅读须知"></a>阅读须知</h1><blockquote><p>注意，这篇文章篇幅较长，主要针对新手，每一步很详细，所以可能会显得比较哕嗦，所以建议基础比较好小伙伴根<br>据目录选择自己感兴趣的部分跳着看，不要文章没看，上来先喷一 下!谢谢0o0。<br>教程内容随意复制使用，弓|用的话请加一个参考链接，谢谢!</p></blockquote><h1 id="博客开源"><a href="#博客开源" class="headerlink" title="博客开源"></a>博客开源</h1><p>倒腾了一两周总算把个人博客网站完善了，目前这个版本使用应该是够了，当然还有一些优化项和功能增加后续在慢慢更<br>新，为为回馈开源，天准备把我自己修改完善的<code>blog</code>网站源代码开源。这还不是生成后的网页文件,是您可以直接使用<br>的源码，您只需要把博客相关信息换成您自己的就可以部署了,对于新手或者不懂编程的小伙伴来说，简直是福音,极大<br>简化了您构建博客的工作量和复杂度，每个人都可以下载并修改成自己喜欢样式!如果你有修改想法，欢迎PR!最后,我<br>们还是给这个开源小项目取个名字吧，就叫hexo-blog-fly吧， 怎么样? &lt;&lt;&lt;&lt;&lt;<a href="https://github.com/shw2018/hexo-blog-fly">源代码下载</a>&gt;&gt;&gt;&gt;&gt;<br>本博客基盱Hexo框架搭建，到<a href="https://github.com/shw2018/hexo-theme-matery">hexo-theme-matery</a>主题,并在此基础之上做了很多修改,修复了一些bug, 增加了- -些<br>新的特性和功能，博客地址: <a href="https://shw2018.github.io/">https://shw2018.github.io</a>，博客演示: <a href="http://sunhwee.com/">sunhwee.com</a>.<br><strong>简单使用方法:</strong><br>1.<code>star</code> 本项目仓库^o^<br>2.安装<a href="https://git-scm.com/downloads">Git</a>,安装<a href="https://nodejs.org/en/">nodejs</a><br>3.你可以直接<code>fork</code>一份源码到你的仓库，<code>clone</code>到本地<br>4.在本地博客仓库运行<code>npm i</code>令安装依赖包<br>5.修改配置信息,改成自己的信息<br>6.运行命令<code>hexo clean</code> (清除生成文件) ，<code>hexo g</code> (生成网页) ，<code>hexo s</code>(本地预览) ，<code>hexo d</code>(部署)</p><blockquote><p>更多详情教程，强烈推荐看我写的: <a href="https://sunhwee.com/posts/6e8839eb.html">Hexo+ Github博客搭建完全教程</a></p></blockquote><p>有什么问题可以在文章最后评论区<strong>留言和讨论</strong>，当然，欢迎点击文章最后的打赏按键，请博主一杯冰阔乐，笑~</p><blockquote><p>最后，如果项目和教程对你有所帮助或者你看见了还算比较喜欢，欢迎给我<code>star</code>，谢谢您!</p></blockquote><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>去年在博客园注册了自己的第一个博客 ，当时初衷就是想拿来作为自己的在线笔记本，做做学习记录，分享一些学到的东<br>西，使用第三方提供的博客服务其实也挺方便,现在市面上提供类似服务的博客网站也很多,如CSDN,博客园，简等<br>平台，可以直接在上面发表,户交互做的好,写的文章百度也能搜索的到。但是缺点是比较不自由,受到平台的各种<br>限制和恶心的广告，个性化不足。而咱己购买域名和服务器，搭建博客的成本实在是太高了，不光是说这些购买成本，单<br>是花气自己搭这么一个网站，还要定期的维护它,对于我们大多数人来说，也是没有这样的精力和时间。那么,我<br>们能不能自己定制一个自己喜欢的个性化博客，同时也不用付出太高的成本啦?<br>这就引出了第三种选择,汙开源框架搭建博客,然后直接在github page 平台上托管我们的博客。这样就可以安心的来<br>写作，不需要定期维护，汙这个想法，今年8月初的时候开始搭建第- 个属于自己的独立博客, 前后断续弄了近一<br>周，到现在稍微有点模样了。我想可能有很多小伙伴应该也想过搭建一个自己的博客, 当然，网_ 上地有-堆详细教程。写<br>这篇博客的目的大概有两个，第一个是当做自己的搭建记录，方便以后自己随时查看提示修改,第二个是稍稍总结一下具<br>体的搭建步骤以及一支持个性化定制的博客源码修改的教程，稍稍分享一下这些修改经验， 当然，更多的一些个性化操<br>作需要你自己以后在这个基础上慢慢去摸索，有些写的不太好的地方还希望看到的小伙伴多多包涵。<br>博喀初步的页面效果可以看一下我的博客: sunhwee.com, 欢迎大家支持。<br>本博榕基于Hexo,所以首先要了解一下我们搭建博客所要用到的框架。 Hexo 高效的静态网站生成框架，它汙<br>Node.js ,快速,简单且功能强大，是搭建博客的首选框架。大家可以进入hexo官网进行详细查看,因为Hexo的创建者<br>是台湾人，对中文的支持很友好，可以选择中文进行查看。过Hexo，你可以直接使用Markdown语法来撰写博客。相信<br>很多小伙伴写工程都写过README . md文件吧，对,就是这个格式的!完后织需两三条命令即可将生成的网页上传到<br>github或者coding等代码管理托管平台,然后别人就可以浏览你的博客网页啦。不是很简单?你无需关心网页源代码<br>的具体生成细节,只需要用心写好你的博客文章内容就行了。</p><blockquote><p>简单总结: Hexo, 产品成熟，使用简单，功能强大，有丰富的各种插件资源;但，像发布后台、站内搜索，评论系统类似诉求，虽然有对应的工具，但也需要自己折腾下，后续我们一步一步介绍。</p></blockquote><p>教程大致分三个部分，</p><ul><li>第一部分:<code>hexo</code>的初级搭建还有部罢到<code>github page</code>上,以及个人域名的绑定。</li></ul><ul><li>第二部分:<code>hexo</code>的基本配置，更换主题，实现多终端工作,以及在<code>coding page</code>部署实现国内外分流</li></ul><ul><li>第三部分：<code>hexo</code>添加各种功能，包括搜索的<code>SEO</code>，阅读量统计，访问量统计和评论系统等。<h1 id="第一部分-搭建"><a href="#第一部分-搭建" class="headerlink" title="第一部分 搭建"></a>第一部分 搭建</h1><code>hexo</code>的初级搭建还有部署到<code>github page</code>上，以及个人域名的绑定。<h2 id="Hexo搭建步骤"><a href="#Hexo搭建步骤" class="headerlink" title="Hexo搭建步骤"></a>Hexo搭建步骤</h2></li></ul><p>1.安装<code>Git</code><br>2.安装<code>Node.js</code><br>3.安装<code>Hexo</code><br>4.<code>GitHub</code>创建个人仓库<br>5.生成<code>SSH</code>添加到<code>GitHub</code><br>6.将<code>hexo</code>部署到<code>GitHub</code><br>7.设置个人域名<br>8.发布文章</p><h3 id="1-安装Git"><a href="#1-安装Git" class="headerlink" title="1.安装Git"></a>1.安装Git</h3><p>为了把本地的网页文件上传到<code>github</code>上面去，需要用到工具———Git[<a href="">下载地址</a>]。Git是目前世界上最先进的分布式版本控制系统，可以有效、高速的处理从很小到非常大的项目版本管理。Git非常强大，建议每个人都去了解一下。廖雪峰老师的Git教程写的非常好，大家可以看一下。<a href="https://www.liaoxuefeng.com/wiki/896043488029600">Git教程</a></p><p>windows：到git官网上下载.exe文件,Download git,安装选项还是全部默认，只不过最后一步添加路径时选择Use Git from the Windows Command Prompt，这样我们就可以直接在命令提示符里打开git了。</p><blockquote><p>顺便说一下，windows在git安装完后，就可以直接使用git bash来敲命令行了，不用自带的cmd，cmd有点难用。</p></blockquote><p>linux：对linux来说实在是太简单了，因为最早的git就是在linux上编写的，只需要一行代码</p><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> <span class="token function">git</span></code></pre><p>安装完成后在命令提示符中输入git –version来查看一下版本验证是否安装成功。</p><h3 id="2-安装nodejs"><a href="#2-安装nodejs" class="headerlink" title="2.安装nodejs"></a>2.安装nodejs</h3><p>Hexo是基于node.js编写的，所以需要安装一下node.js和里面的npm工具。</p><p>windows：下载稳定版或者最新版都可以Node.js，安装选项全部默认，一路点击Next。<br>最后安装好之后，按Win+R打开命令提示符，输入node -v和npm -v，如果出现版本号，那么就安装成功了。</p><p>linux：命令行安装：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> nodejs<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> <span class="token function">npm</span></code></pre><p>不过不推荐命令行安装，有时候有问题，建议直接到官网去下载编译好的压缩文件，如下所示:</p><p>然后解压到你指定的文件夹即可，比如我解压到我系统的/home/shw/MySoftwares目录下了，如图:</p><p>注意本压缩包是.tar.xz格式的，需要两次解压</p><p>配置一下环境变量</p><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> vim /etc/profile</code></pre><p>复制下面两行到刚打开的profile文件最底部(注意node的安装地址/home/shw/MySoftwares/node-v12.8.0-linux-x64换成自己的)：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">export</span> NODE_HOME<span class="token operator">=</span>/home/shw/MySoftwares/node-v12.8.0-linux-x64<span class="token function">export</span> PATH<span class="token operator">=</span><span class="token variable">$PATH</span><span class="token keyword">:</span><span class="token variable">$NODE_HOME</span>/bin</code></pre><p>保存后退出，再执行下面命令将环境变量生效：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">source</span> /etc/profile</code></pre><p>将目录软链接到全局环境下（命令后面的/usr/local/bin/node是固定的）</p><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">ln</span> -s /home/shw/MySoftwares/node-v12.8.0-linux-x64/node /usr/local/bin/node<span class="token function">sudo</span> <span class="token function">ln</span> -s /home/shw/MySoftwares/node-v12.8.0-linux-x64/npm /usr/local/bin/npm</code></pre><p>这样安装好了以后使用npm安装的包(比如：ionic serve)，使用包的命令时可能会提示找不到命令，没关系，在用户目录下终端执行下面命令固定写法：</p><pre class=" language-bash"><code class="language-bash"><span class="token keyword">echo</span> -e <span class="token string">"export PATH=<span class="token variable"><span class="token variable">$(</span><span class="token function">npm</span> prefix -g<span class="token variable">)</span></span>/bin:<span class="token variable">$PATH</span>"</span> <span class="token operator">>></span> ~/.bashrc <span class="token operator">&amp;&amp;</span> <span class="token function">source</span> ~/.bashrc</code></pre><p>这样我们在所有用户下，都可以使用npm，也可以使用npm安装的包的命令。成功的将nodejs安装并配置到全局环境下。</p><p>安装完后，打开命令行终端，输入:</p><pre class=" language-bash"><code class="language-bash">node -v<span class="token function">npm</span> -v</code></pre><p>检查一下有没有安装成功</p><p>添加国内镜像源<br>如果没有梯子的话，可以使用阿里的国内镜像进行加速。</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> config <span class="token keyword">set</span> registry https://registry.npm.taobao.org</code></pre><h3 id="3-安装Hexo"><a href="#3-安装Hexo" class="headerlink" title="3.安装Hexo"></a>3.安装Hexo</h3><p>前面git和nodejs安装好后，就可以安装hexo了，你可以先创建一个文件夹MyBlog，用来存放自己的博客文件，然后cd到这个文件夹下（或者在这个文件夹下直接右键git bash打开）。</p><p>比如我的博客文件都存放在D:\Study\MyBlog目录下。</p><p>在该目录下右键点击Git bash Here，打开git的控制台窗口，以后我们所有的操作都在git控制台进行，就不用Windows自带的cmd了。</p><p>定位到该目录下，输入npm install -g hexo-cli安装Hexo。可能会有几个报错，无视它就行。</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> -g hexo-cli</code></pre><p>安装完后输入hexo -v验证是否安装成功。</p><p>至此hexo就安装完了。</p><p>接下来初始化一下hexo,即初始化我们的网站，输入hexo init初始化文件夹</p><pre class=" language-bash"><code class="language-bash">hexo init MyBlog</code></pre><p>这个MyBlog可以自己取什么名字都行，然后，接着输入npm install安装必备的组件。</p><pre class=" language-bash"><code class="language-bash"><span class="token function">cd</span> MyBlog      //进入这个MyBlog文件夹<span class="token function">npm</span> <span class="token function">install</span></code></pre><p>新建完成后，指定文件夹MyBlog目录下有：</p><p>node_modules: 依赖包<br>public：存放生成的页面<br>scaffolds：生成文章的一些模板<br>source：用来存放你的文章<br>themes：主题**<br>_config.yaml: 博客的配置文件**<br>这样本地的网站配置也弄好啦，输入hexo g生成静态网页，然后输入hexo s打开本地服务器，</p><pre class=" language-bash"><code class="language-bash">hexo ghexo server<span class="token punctuation">(</span>或者简写:hexo s）<span class="token punctuation">)</span></code></pre><p>然后浏览器打开<a href="http://localhost:4000/%EF%BC%8C%E5%B0%B1%E5%8F%AF%E4%BB%A5%E7%9C%8B%E5%88%B0%E6%88%91%E4%BB%AC%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%95%A6%EF%BC%8C%E6%95%88%E6%9E%9C%E5%A6%82%E4%B8%8B%EF%BC%9A">http://localhost:4000/，就可以看到我们的博客啦，效果如下：</a></p><p>按ctrl+c关闭本地服务器。</p><h3 id="4-注册Github账号创建个人仓库"><a href="#4-注册Github账号创建个人仓库" class="headerlink" title="4.注册Github账号创建个人仓库"></a>4.注册Github账号创建个人仓库</h3><p>接下来就去注册一个github账号，用来存放我们的网站。大多数小伙伴应该都有了吧，作为一个合格的程序猿（媛）还是要有一个的。</p><p>打开<a href="https://github.com/%EF%BC%8C%E6%96%B0%E5%BB%BA%E4%B8%80%E4%B8%AA%E9%A1%B9%E7%9B%AE%E4%BB%93%E5%BA%93New">https://github.com/，新建一个项目仓库New</a> repository，如下所示：</p><p>然后如下图所示，输入自己的项目名字，后面一定要加.github.io后缀，README初始化也要勾上。</p><p>要创建一个和你用户名相同的仓库，后面加.<a href="http://github.io,只有这样,将来要部署到`github/">http://github.io，只有这样，将来要部署到`GitHub</a> page的时候，才会被识别，也就是<a href="http://xxxx.github.io，其中xxx就是你注册GitHub`的用户名。例如我的：http://shw2018.github.io">http://xxxx.github.io，其中xxx就是你注册GitHub`的用户名。例如我的：http://shw2018.github.io</a></p><h3 id="5-生成SSH添加到GitHub"><a href="#5-生成SSH添加到GitHub" class="headerlink" title="5.生成SSH添加到GitHub"></a>5.生成SSH添加到GitHub</h3><p>生成SSH添加到GitHub，连接Github与本地。<br>右键打开git bash，然后输入下面命令：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> config --global user.name <span class="token string">"yourname"</span><span class="token function">git</span> config --global user.email <span class="token string">"youremail"</span></code></pre><p>这里的yourname输入你的GitHub用户名，youremail输入你GitHub的邮箱。这样GitHub才能知道你是不是对应它的账户。例如我的：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> config --global user.name <span class="token string">"shw2018"</span><span class="token function">git</span> config --global user.email <span class="token string">"hwsun@std.uestc.edu.cn"</span></code></pre><p>可以用以下两条，检查一下你有没有输对</p><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> config user.name<span class="token function">git</span> config user.email</code></pre><p>然后创建SSH,一路回车</p><p>ssh，简单来讲，就是一个秘钥，其中，id_rsa是你这台电脑的私人秘钥，不能给别人看的，id_rsa.pub是公共秘钥，可以随便给别人看。把这个公钥放在GitHub上，这样当你链接GitHub自己的账户时，它就会根据公钥匹配你的私钥，当能够相互匹配时，才能够顺利的通过git上传你的文件到GitHub上。</p><pre class=" language-bash"><code class="language-bash">ssh-keygen -t rsa -C <span class="token string">"youremail"</span></code></pre><p>这个时候它会告诉你已经生成了.ssh的文件夹。在你的电脑中找到这个文件夹。或者git bash中输入</p><pre class=" language-bash"><code class="language-bash"><span class="token function">cat</span> ~/.ssh/id_rsa.pub</code></pre><p>将输出的内容复制到框中，点击确定保存。</p><p>打开github，在头像下面点击settings，再点击SSH and GPG keys，新建一个SSH，名字随便取一个都可以，把你的id_rsa.pub里面的信息复制进去。如图：</p><p>在git bash输入ssh -T <a href="mailto:git@github.com">git@github.com</a>，如果如下图所示，出现你的用户名，那就成功了。</p><h3 id="6-将hexo部署到GitHub"><a href="#6-将hexo部署到GitHub" class="headerlink" title="6.将hexo部署到GitHub"></a>6.将hexo部署到GitHub</h3><p>这一步，我们就可以将hexo和GitHub关联起来，也就是将hexo生成的文章部署到GitHub上，打开博客根目录下的_config.yaml文件，这是博客的配置文件，在这里你可以修改与博客配置相关的各种信息。</p><p>修改最后一行的配置：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">deploy</span><span class="token punctuation">:</span>  <span class="token key atrule">type</span><span class="token punctuation">:</span> git  <span class="token key atrule">repository</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//github.com/shw2018/shw2018.github.io  <span class="token key atrule">branch</span><span class="token punctuation">:</span> master</code></pre><p>repository修改为你自己的github项目地址即可，就是部署时，告诉工具，将生成网页通过git方式上传到你对应的链接仓库中。</p><p>这个时候需要先安装deploy-git ，也就是部署的命令,这样你才能用命令部署到GitHub。</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-deployer-git --save</code></pre><p>然后</p><pre class=" language-bash"><code class="language-bash">hexo cleanhexo generatehexo deploy</code></pre><p>其中 hexo clean清除了你之前生成的东西，也可以不加。 hexo generate顾名思义，生成静态文章，可以用 hexo g缩写 ，hexo deploy部署文章，可以用hexo d缩写</p><p>注意deploy时可能要你输入username和password。</p><p>得到下图就说明部署成功了，过一会儿就可以在<a href="http://yourname.github.io/">http://yourname.github.io</a> 这个网站看到你的博客了！！</p><h3 id="7-设置个人域名"><a href="#7-设置个人域名" class="headerlink" title="7.设置个人域名"></a>7.设置个人域名</h3><p>现在你的个人网站的地址是yourname.github.io，如果觉得这个网址逼格不太够，这就需要你设置个人域名了。但是需要花钱。</p><p>不过，这一步不是必要的，如果目前还不想买域名可以先跳过，继续看后面的，以后想买域名了在还看这块</p><p>首先你得购买一个专属域名，xx云都能买，看你个人喜好了。</p><p>这篇以腾讯云为例，腾讯云官网购买：</p><p>然后实名认证后进入腾讯云控制台，点云解析进去，找到你刚买的域名，点进去添加两条解析记录，如下图所示：</p><p>然后打开你的github博客项目，点击settings，拉到下面Custom domain处，填上你自己的域名，保存：</p><p>这时候你的项目根目录应该会出现一个名为CNAME的文件了。如果没有的话，打开你本地博客/source目录，我的是D:\Study\MyBlog\source，新建CNAME文件，注意没有后缀。然后在里面写上你的域名，保存。最后运行hexo g、hexo d上传到github。</p><p>过不了多久，再打开你的浏览器，输入你自己的专属域名，就可以看到搭建的网站啦！</p><h3 id="8-写文章、发布文章"><a href="#8-写文章、发布文章" class="headerlink" title="8.写文章、发布文章"></a>8.写文章、发布文章</h3><p>首先在博客根目录下右键打开git bash，安装一个扩展npm i hexo-deployer-git。</p><p>然后输入hexo new post “article title”，新建一篇文章。</p><p>然后打开D:\Study\MyBlog\source_posts的目录，可以发现下面多了一个文件夹和一个.md文件，一个用来存放你的图片等数据，另一个就是你的文章文件啦。<br>你可以会直接在vscode里面编写markdown文件，可以实时预览，也可以用用其他编辑md文件的软件的工具编写。<br>编写完markdown文件后，根目录下输入hexo g生成静态网页，然后输入hexo s可以本地预览效果，最后输入hexo d上传到github上。这时打开你的github.io主页就能看到发布的文章啦。</p><p>到这儿基本第一部分就完成了，已经完整搭建起一个比较简陋的个人博客了，接下来我们就可以对我们的博客进行个性化定制了。</p><h1 id="第二部分-定制"><a href="#第二部分-定制" class="headerlink" title="第二部分 定制"></a>第二部分 定制</h1><p>我们要定制自己的博客的话，首先就要来了解一下Hexo博客的一些目录和文件的作用，以及如何平滑更换漂亮的主题模板并加入自己的定制源代码实现个性化定制</p><h2 id="1-Hexo相关目录文件"><a href="#1-Hexo相关目录文件" class="headerlink" title="1.Hexo相关目录文件"></a>1.Hexo相关目录文件</h2><h3 id="1-1-博客目录构成介绍"><a href="#1-1-博客目录构成介绍" class="headerlink" title="1.1 博客目录构成介绍"></a>1.1 博客目录构成介绍</h3><p>从上图可以看出，博客的目录结构如下：</p><pre class=" language-json"><code class="language-json">- node_modules- public- scaffolds- source    - _data    - _posts    - about    - archives    - categories    - friends    - tags- themes</code></pre><p>node_modules是node.js各种库的目录，public是生成的网页文件目录，scaffolds里面就三个文件，存储着新文章和新页面的初始设置，source是我们最常用到的一个目录，里面存放着文章、各类页面、图像等文件，themes存放着主题文件，一般也用不到。</p><p>我们平时写文章只需要关注source/_posts这个文件夹就行了。</p><h3 id="1-2-hexo基本配置"><a href="#1-2-hexo基本配置" class="headerlink" title="1.2 hexo基本配置"></a>1.2 hexo基本配置</h3><p>在文件根目录下的_config.yaml，就是整个hexo框架的配置文件了。可以在里面修改大部分的配置。详细可参考官方的配置描述。</p><h4 id="1-2-1-网站"><a href="#1-2-1-网站" class="headerlink" title="1.2.1 网站"></a>1.2.1 网站</h4><p>参数描述title网站标题subtitle网站副标题description网站描述author您的名字language网站使用的语言timezone网站时区。Hexo 默认使用您电脑的时区。时区列表。比如说：America/New_York, Japan, 和 UTC 。</p><p>其中，description主要用于SEO，告诉搜索引擎一个关于您站点的简单描述，通常建议在其中包含您网站的关键词。author参数用于主题显示文章的作者。</p><h4 id="1-2-2-网址"><a href="#1-2-2-网址" class="headerlink" title="1.2.2 网址"></a>1.2.2 网址</h4><p>参数描述url网址root网站根目录 permalink文章的永久链接格式permalink_defaults永久链接中各部分的默认值</p><p>在这里，你需要把url改成你的网站域名。</p><p>permalink，也就是你生成某个文章时的那个链接格式。</p><p>比如我新建一个文章叫temp.md，那么这个时候他自动生成的地址就是<a href="http://yoursite.com/2018/09/05/temp%E3%80%82">http://yoursite.com/2018/09/05/temp。</a></p><p>以下是官方给出的示例，关于链接的变量还有很多，需要的可以去官网上查找 永久链接 。</p><p>参数结果:year/:month/:day/:title/2019/08/10/hello-world :year-:month-:day-:title.html 2019-08-10-hello-world.html :category/:titlefoo/bar/hello-world</p><p>再往下翻，中间这些都默认就好了。</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">theme</span><span class="token punctuation">:</span> landscap</code></pre><p>theme就是选择什么主题，也就是在themes这个文件夹下，在官网上有很多个主题，默认给你安装的是lanscape这个主题。当你需要更换主题时，在官网上下载，把主题的文件放在themes文件夹下，再修改这个主题参数就可以了。</p><h4 id="1-2-3-Front-matter"><a href="#1-2-3-Front-matter" class="headerlink" title="1.2.3 Front-matter"></a>1.2.3 Front-matter</h4><p>Front-matter 是md文件最上方以 —分隔的区域，用于指定个别文件的变量，举例来说：</p><p>title: Hexo+Github博客搭建记录<br>date: 2019-08-10 21:44:44<br>下是预先定义的参数，您可在模板中使用这些参数值并加以利用。</p><p>参数描述layout布局title标题date建立日期updated更新日期comments开启文章的评论功能tags标签（不适用于分页）categories分类（不适用于分页）permalink覆盖文章网址</p><p>其中，分类和标签需要区别一下，分类具有顺序性和层次性，也就是说Foo，Bar不等于Bar，Foo；而标签没有顺序和层次。</p><pre class=" language-yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> Hexo+Github博客搭建记录<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2019-08-10 21:44:44</span><span class="token key atrule">author</span><span class="token punctuation">:</span> 洪卫<span class="token key atrule">img</span><span class="token punctuation">:</span> /medias/banner/7.jpg<span class="token key atrule">coverImg</span><span class="token punctuation">:</span> /medias/banner/7.jpg<span class="token key atrule">top</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token key atrule">cover</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token key atrule">toc</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token key atrule">password</span><span class="token punctuation">:</span> 5f15b28ffe43f8be4f239bdd9b69af9d80dbafcb20a5f0df5d1677a120ae9110<span class="token key atrule">mathjax</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token key atrule">summary</span><span class="token punctuation">:</span> 这是你自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要<span class="token key atrule">tags</span><span class="token punctuation">:</span><span class="token punctuation">-</span> Hexo<span class="token punctuation">-</span> Github<span class="token punctuation">-</span> 博客<span class="token key atrule">categories</span><span class="token punctuation">:</span><span class="token punctuation">-</span> 软件安装与配置<span class="token punctuation">---</span></code></pre><h4 id="1-2-4-layout（布局）"><a href="#1-2-4-layout（布局）" class="headerlink" title="1.2.4 layout（布局）"></a>1.2.4 layout（布局）</h4><h5 id="1-2-4-1-post"><a href="#1-2-4-1-post" class="headerlink" title="1.2.4.1 post"></a>1.2.4.1 post</h5><p>当你每一次使用代码</p><pre class=" language-bash"><code class="language-bash">hexo new XXX</code></pre><p>它其实默认使用的是post这个布局，也就是在source文件夹下的_post里面。</p><p>Hexo有三种默认布局：post、page和draft，它们分别对应不同的路径，而您自定义的其他布局和post相同，都将储存到source/_posts文件夹。</p><p>而new这个命令其实是：</p><pre class=" language-bash"><code class="language-bash">hexo new <span class="token punctuation">[</span>layout<span class="token punctuation">]</span> <span class="token operator">&lt;</span>title<span class="token operator">></span></code></pre><p>只不过这个layout默认是post罢了。</p><h5 id="1-2-4-2-page"><a href="#1-2-4-2-page" class="headerlink" title="1.2.4.2 page"></a>1.2.4.2 page</h5><p>如果你想另起一页，那么可以使用</p><pre class=" language-bash"><code class="language-bash">hexo new page newpage</code></pre><p>系统会自动给你在source文件夹下创建一个newpage文件夹，以及newpage文件夹中的index.md，这样你访问的newpage对应的链接就是<a href="http://xxx.xxx/newpage">http://xxx.xxx/newpage</a></p><h5 id="1-2-4-3-draft"><a href="#1-2-4-3-draft" class="headerlink" title="1.2.4.3 draft"></a>1.2.4.3 draft</h5><p>draft是草稿的意思，也就是你如果想写文章，又不希望被看到，那么可以</p><pre class=" language-bash"><code class="language-bash">hexo new draft newdraft</code></pre><p>这样会在source/_draft中新建一个newdraft.md文件，如果你的草稿文件写的过程中，想要预览一下，那么可以使用</p><pre class=" language-bash"><code class="language-bash">hexo server --draft</code></pre><p>在本地端口中开启服务预览。</p><p>如果你的草稿文件写完了，想要发表到post中，</p><pre class=" language-bash"><code class="language-bash">hexo publish draft newdraft</code></pre><p>就会自动把newdraft.md发送到post中。</p><h2 id="2-更换主题"><a href="#2-更换主题" class="headerlink" title="2.更换主题"></a>2.更换主题</h2><p>我们在了解Hexo博客文件基础之后，知道主题文件就放在themes文件下，那么我们就可以去Hexo官网下载喜欢的主题，复制进去然后修改参数即可。<br>网上大多数主题都是github排名第一的Next主题，但是我个人不是很喜欢，我在网上看到一个主题感觉还不错：hexo-theme-matery，地址在传送门。这个主题看着比较漂亮，并且响应式比较友好，点起来很舒服，功能也比较很多。</p><p>当然，人各有异，这个主题风格也不一定是你喜欢，那么你也可以跟着这教程类似的方法替换成你喜欢的就行了。</p><p>特性：</p><p>简单漂亮，文章内容美观易读<br>Material Design 设计<br>响应式设计，博客在桌面端、平板、手机等设备上均能很好的展现<br>首页轮播文章及每天动态切换 Banner 图片<br>瀑布流式的博客文章列表（文章无特色图片时会有 24 张漂亮的图片代替）<br>时间轴式的归档页<br>词云的标签页和雷达图的分类页<br>丰富的关于我页面（包括关于我、文章统计图、我的项目、我的技能、相册等）<br>可自定义的数据的友情链接页面<br>支持文章置顶和文章打赏<br>支持 MathJax<br>TOC 目录<br>可设置复制文章内容时追加版权信息<br>可设置阅读文章时做密码验证<br>Gitalk、Gitment、Valine 和 Disqus 评论模块（推荐使用 Gitalk）<br>集成了不蒜子统计、谷歌分析（Google Analytics）和文章字数统计等功能<br>支持在首页的音乐播放和视频播放功能<br>他的介绍文档写得非常的详细，还有中英文两个版本。效果图如下：</p><p>首先先按照文档教程安装一遍主题，然后是可以正常打开的，如果你是一般使用的话，基本没啥问题了。不过有些地方有些地方可以根据你自己的习惯和喜好修改一下， 下面记录一下我这个博客修改了的一些地方。</p><h3 id="2-1-新建文章模板修改"><a href="#2-1-新建文章模板修改" class="headerlink" title="2.1 新建文章模板修改"></a>2.1 新建文章模板修改</h3><p>首先为了新建文章方便，我们可以修改一下文章模板，建议将/scaffolds/post.md修改为如下代码：</p><pre class=" language-json"><code class="language-json">---title<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> title <span class="token punctuation">}</span><span class="token punctuation">}</span>date<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> date <span class="token punctuation">}</span><span class="token punctuation">}</span>author<span class="token operator">:</span> img<span class="token operator">:</span> coverImg<span class="token operator">:</span> top<span class="token operator">:</span> <span class="token boolean">false</span>cover<span class="token operator">:</span> <span class="token boolean">false</span>toc<span class="token operator">:</span> <span class="token boolean">true</span>mathjax<span class="token operator">:</span> <span class="token boolean">false</span>password<span class="token operator">:</span>summary<span class="token operator">:</span>tags<span class="token operator">:</span>categories<span class="token operator">:</span>---</code></pre><p>这样新建文章后 一些Front-matter参数不用你自己补充了，修改对应信息就可以了。</p><h3 id="2-2-添加404页面"><a href="#2-2-添加404页面" class="headerlink" title="2.2 添加404页面"></a>2.2 添加404页面</h3><p>原来的主题没有404页面，我们加一个。首先在/source/目录下新建一个404.md，内容如下：</p><pre class=" language-json"><code class="language-json">title<span class="token operator">:</span> <span class="token number">404</span>date<span class="token operator">:</span> <span class="token number">2019</span>-<span class="token number">08</span>-<span class="token number">5</span> <span class="token number">16</span><span class="token operator">:</span><span class="token number">41</span><span class="token operator">:</span><span class="token number">10</span>type<span class="token operator">:</span> <span class="token string">"404"</span>layout<span class="token operator">:</span> <span class="token string">"404"</span>description<span class="token operator">:</span> <span class="token string">"Oops～，我崩溃了！找不到你想要的页面 :("</span></code></pre><p>然后在/themes/matery/layout/目录下新建一个404.ejs文件，内容如下：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token comment" spellcheck="true">/* don't remove. */</span>    <span class="token selector"><span class="token class">.about-cover</span> </span><span class="token punctuation">{</span>        <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">75</span>vh<span class="token punctuation">;</span>    <span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>bg-cover pd-header about-cover<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>row<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col s10 offset-s1 m8 offset-m2 l8 offset-l2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>brand<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>title center-align<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        404                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>description center-align<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        &lt;%= page.description %>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token comment" spellcheck="true">// 每天切换 banner 图.  Switch banner image every day.</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.bg-cover'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">'background-image'</span><span class="token punctuation">,</span> <span class="token string">'url(/medias/banner/'</span> <span class="token operator">+</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDay</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'.jpg)'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><h3 id="2-3“关于”页面增加简历（可选）"><a href="#2-3“关于”页面增加简历（可选）" class="headerlink" title="2.3“关于”页面增加简历（可选）"></a>2.3“关于”页面增加简历（可选）</h3><p>修改/themes/matery/layout/about.ejs，找到</p><div class="card">标签，然后找到它对应的</div>标签，接在后面新增一个card，语句如下：<p></p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>card<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>card-content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>card-content article-card-content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>title center-align<span class="token punctuation">"</span></span> <span class="token attr-name">data-aos</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>zoom-in-up<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fa fa-address-book<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity" title="&nbsp;">&amp;nbsp;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>%-</span> <span class="token attr-name">__('myCV')</span> <span class="token attr-name">%</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>articleContent<span class="token punctuation">"</span></span> <span class="token attr-name">data-aos</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fade-up<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>%-</span> <span class="token attr-name">page.content</span> <span class="token attr-name">%</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre><p>这样就会多出一张card，然后可以在/source/about/index.md下面写上你的简历了，当然这里的位置随你自己设置，你也可以把简历作为第一个card。</p><h3 id="2-4-数学公式渲染和代码高亮"><a href="#2-4-数学公式渲染和代码高亮" class="headerlink" title="2.4 数学公式渲染和代码高亮"></a>2.4 数学公式渲染和代码高亮</h3><h4 id="2-4-1-解决mathjax与代码高亮的冲突"><a href="#2-4-1-解决mathjax与代码高亮的冲突" class="headerlink" title="2.4.1 解决mathjax与代码高亮的冲突"></a>2.4.1 解决mathjax与代码高亮的冲突</h4><p>如果你按照教程安装了代码高亮插件hexo-prism-plugin，单独使用是没有问题的，但如果你又使用了mathjax，并且按照网上教程，安装kramed插件并修改了js文件里的正则表达式（为了解决markdown和mathjax的语法冲突），那你的代码就无法高亮了。解决方法很简单，别用kramed插件了，还用原来自带的marked插件，直接改它的正则表达式就行了。</p><h4 id="2-4-2-加数学公式显示"><a href="#2-4-2-加数学公式显示" class="headerlink" title="2.4.2 加数学公式显示"></a>2.4.2 加数学公式显示</h4><p>打开/themes/matery/layout中的post.ejs文件，在最下方粘贴如下代码：</p><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=default"></script><p>Javascript<br>由于markdown语法与mathjax语法存在冲突，所以还需要修改源文件。</p><p>打开/node_modules/marked/lib中的marked.js文件，第539行的escape:处替换成：</p><pre class=" language-js"><code class="language-js">escape<span class="token punctuation">:</span> <span class="token regex">/^$[`*\[\]()#$+\-.!_>])/</span></code></pre><p>第553行的em:处替换成：</p><pre class=" language-js"><code class="language-js">em<span class="token punctuation">:</span> <span class="token regex">/^\*((?:\*\*|[\s\S])+?)\*(?!\*)/</span></code></pre><p>这时在文章里写数学公式基本没有问题了，但是要注意：<br>数学公式中如果出现了连续两个{，中间一定要加空格！</p><p>举个例子:<br>行内公式：y=f(x)<br>代码：</p><pre class=" language-tex"><code class="language-tex">$y = f(x)$</code></pre><p>行间公式：</p><p>y=fg1(x)</p><p>代码：</p><pre class=" language-tex"><code class="language-tex">\\[y = {f_{ {g_1}}}(x)\\]</code></pre><p>注意上面花括号之间有空格！</p><h3 id="2-5-增加建站时间"><a href="#2-5-增加建站时间" class="headerlink" title="2.5 增加建站时间"></a>2.5 增加建站时间</h3><p>修改/themes/matery/layout/_partial中的footer.ejs，在最后加上：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">language</span><span class="token attr-value"><span class="token punctuation">=</span>javascript</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">function</span> <span class="token function">siteTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        window<span class="token punctuation">.</span><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token string">"siteTime()"</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> seconds <span class="token operator">=</span> <span class="token number">1000</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> minutes <span class="token operator">=</span> seconds <span class="token operator">*</span> <span class="token number">60</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> hours <span class="token operator">=</span> minutes <span class="token operator">*</span> <span class="token number">60</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> days <span class="token operator">=</span> hours <span class="token operator">*</span> <span class="token number">24</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> years <span class="token operator">=</span> days <span class="token operator">*</span> <span class="token number">365</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> today <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> todayYear <span class="token operator">=</span> today<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> todayMonth <span class="token operator">=</span> today<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> todayDate <span class="token operator">=</span> today<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> todayHour <span class="token operator">=</span> today<span class="token punctuation">.</span><span class="token function">getHours</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> todayMinute <span class="token operator">=</span> today<span class="token punctuation">.</span><span class="token function">getMinutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> todaySecond <span class="token operator">=</span> today<span class="token punctuation">.</span><span class="token function">getSeconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">/* Date.UTC() -- 返回date对象距世界标准时间(UTC)1970年1月1日午夜之间的毫秒数(时间戳)        year - 作为date对象的年份，为4位年份值        month - 0-11之间的整数，做为date对象的月份        day - 1-31之间的整数，做为date对象的天数        hours - 0(午夜24点)-23之间的整数，做为date对象的小时数        minutes - 0-59之间的整数，做为date对象的分钟数        seconds - 0-59之间的整数，做为date对象的秒数        microseconds - 0-999之间的整数，做为date对象的毫秒数 */</span>        <span class="token keyword">var</span> t1 <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">UTC</span><span class="token punctuation">(</span><span class="token number">2017</span><span class="token punctuation">,</span> <span class="token number">09</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">00</span><span class="token punctuation">,</span> <span class="token number">00</span><span class="token punctuation">,</span> <span class="token number">00</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//北京时间2018-2-13 00:00:00</span>        <span class="token keyword">var</span> t2 <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">UTC</span><span class="token punctuation">(</span>todayYear<span class="token punctuation">,</span> todayMonth<span class="token punctuation">,</span> todayDate<span class="token punctuation">,</span> todayHour<span class="token punctuation">,</span> todayMinute<span class="token punctuation">,</span> todaySecond<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> diff <span class="token operator">=</span> t2 <span class="token operator">-</span> t1<span class="token punctuation">;</span>        <span class="token keyword">var</span> diffYears <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>diff <span class="token operator">/</span> years<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> diffDays <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span>diff <span class="token operator">/</span> days<span class="token punctuation">)</span> <span class="token operator">-</span> diffYears <span class="token operator">*</span> <span class="token number">365</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> diffHours <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span>diff <span class="token operator">-</span> <span class="token punctuation">(</span>diffYears <span class="token operator">*</span> <span class="token number">365</span> <span class="token operator">+</span> diffDays<span class="token punctuation">)</span> <span class="token operator">*</span> days<span class="token punctuation">)</span> <span class="token operator">/</span> hours<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> diffMinutes <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span>diff <span class="token operator">-</span> <span class="token punctuation">(</span>diffYears <span class="token operator">*</span> <span class="token number">365</span> <span class="token operator">+</span> diffDays<span class="token punctuation">)</span> <span class="token operator">*</span> days <span class="token operator">-</span> diffHours <span class="token operator">*</span> hours<span class="token punctuation">)</span> <span class="token operator">/</span> minutes<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> diffSeconds <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span>diff <span class="token operator">-</span> <span class="token punctuation">(</span>diffYears <span class="token operator">*</span> <span class="token number">365</span> <span class="token operator">+</span> diffDays<span class="token punctuation">)</span> <span class="token operator">*</span> days <span class="token operator">-</span> diffHours <span class="token operator">*</span> hours <span class="token operator">-</span> diffMinutes <span class="token operator">*</span> minutes<span class="token punctuation">)</span> <span class="token operator">/</span> seconds<span class="token punctuation">)</span><span class="token punctuation">;</span>        document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"sitetime"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerhtml <span class="token operator">=</span> <span class="token string">"本站已运行 "</span> <span class="token operator">+</span>diffYears<span class="token operator">+</span><span class="token string">" 年 "</span><span class="token operator">+</span>diffDays <span class="token operator">+</span> <span class="token string">" 天 "</span> <span class="token operator">+</span> diffHours <span class="token operator">+</span> <span class="token string">" 小时 "</span> <span class="token operator">+</span> diffMinutes <span class="token operator">+</span> <span class="token string">" 分钟 "</span> <span class="token operator">+</span> diffSeconds <span class="token operator">+</span> <span class="token string">" 秒"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token comment" spellcheck="true">/*因为建站时间还没有一年，就将之注释掉了。需要的可以取消*/</span>    <span class="token function">siteTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><p>然后在合适的地方（比如copyright声明后面）加上下面的代码就行了：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sitetime<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span></code></pre><h3 id="2-6-修改不蒜子初始化计数"><a href="#2-6-修改不蒜子初始化计数" class="headerlink" title="2.6 修改不蒜子初始化计数"></a>2.6 修改不蒜子初始化计数</h3><p>因为不蒜子至今未开放注册，所以没办法在官网修改初始化，只能自己动手了。和上一条一样，我们在/themes/matery/layout/_partial里的footer.ejs文件最后加上：</p><pre class=" language-js"><code class="language-js"><span class="token operator">&lt;</span>script<span class="token operator">></span>    <span class="token function">$</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ready</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">var</span> int <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span>fixCount<span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 50ms周期检测函数</span>        <span class="token keyword">var</span> pvcountOffset <span class="token operator">=</span> <span class="token number">80000</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 初始化首次数据</span>        <span class="token keyword">var</span> uvcountOffset <span class="token operator">=</span> <span class="token number">20000</span><span class="token punctuation">;</span>        <span class="token keyword">function</span> <span class="token function">fixCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"busuanzi_container_site_pv"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">!=</span> <span class="token string">"none"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#busuanzi_value_site_pv"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#busuanzi_value_site_pv"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> pvcountOffset<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">clearInterval</span><span class="token punctuation">(</span>int<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#busuanzi_container_site_pv"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"display"</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token string">"none"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#busuanzi_value_site_uv"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#busuanzi_value_site_uv"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> uvcountOffset<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 加上初始数据 </span>                <span class="token function">clearInterval</span><span class="token punctuation">(</span>int<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 停止检测</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><p>然后把上面几行有段代码：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>%</span> <span class="token attr-name">if</span> <span class="token attr-name">(theme.busuanziStatistics</span> <span class="token attr-name">&amp;&amp;</span> <span class="token attr-name">theme.busuanziStatistics.totalTraffic)</span> <span class="token attr-name">{</span> <span class="token attr-name">%</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>busuanzi_container_site_pv<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fa fa-heart-o<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>        本站总访问量 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>busuanzi_value_site_pv<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>white-color<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>%</span> <span class="token attr-name">}</span> <span class="token attr-name">%</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>%</span> <span class="token attr-name">if</span> <span class="token attr-name">(theme.busuanziStatistics</span> <span class="token attr-name">&amp;&amp;</span> <span class="token attr-name">theme.busuanziStatistics.totalNumberOfvisitors)</span> <span class="token attr-name">{</span> <span class="token attr-name">%</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>busuanzi_container_site_uv<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        人次,<span class="token entity" title="&nbsp;">&amp;nbsp;</span>访客数 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>busuanzi_value_site_uv<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>white-color<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span> 人.    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>%</span> <span class="token attr-name">}</span> <span class="token attr-name">%</span><span class="token punctuation">></span></span></code></pre><p>修改为：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>%</span> <span class="token attr-name">if</span> <span class="token attr-name">(theme.busuanziStatistics</span> <span class="token attr-name">&amp;&amp;</span> <span class="token attr-name">theme.busuanziStatistics.totalTraffic)</span> <span class="token attr-name">{</span> <span class="token attr-name">%</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>busuanzi_container_site_pv<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">='</span><span class="token attr-value"><span class="token property">display</span><span class="token punctuation">:</span>none</span><span class="token punctuation">'</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fa fa-heart-o<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>        本站总访问量 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>busuanzi_value_site_pv<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>white-color<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>%</span> <span class="token attr-name">}</span> <span class="token attr-name">%</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>%</span> <span class="token attr-name">if</span> <span class="token attr-name">(theme.busuanziStatistics</span> <span class="token attr-name">&amp;&amp;</span> <span class="token attr-name">theme.busuanziStatistics.totalNumberOfvisitors)</span> <span class="token attr-name">{</span> <span class="token attr-name">%</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>busuanzi_container_site_uv<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">='</span><span class="token attr-value"><span class="token property">display</span><span class="token punctuation">:</span>none</span><span class="token punctuation">'</span></span><span class="token punctuation">></span></span>        人次,<span class="token entity" title="&nbsp;">&amp;nbsp;</span>访客数 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>busuanzi_value_site_uv<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>white-color<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span> 人.    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>%</span> <span class="token attr-name">}</span> <span class="token attr-name">%</span><span class="token punctuation">></span></span></code></pre><p>其实就是增加了两个style=’display:none’而已。</p><h3 id="2-7-添加动漫人物"><a href="#2-7-添加动漫人物" class="headerlink" title="2.7 添加动漫人物"></a>2.7 添加动漫人物</h3><p>其实三步就行了，不用像网上有些教程那么复杂。</p><p>第一步：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> --save hexo-helper-live2d</code></pre><p>第二步：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> live2d-widget-model-shizuku</code></pre><p>这里的动漫模型可以改，只需要下载对应模型就行了，你可以官方仓库去看有哪些模型，下载你喜欢的就行。</p><p>第三步：<br>在根目录配置文件中添加如下代码：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">live2d</span><span class="token punctuation">:</span>    <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token key atrule">scriptFrom</span><span class="token punctuation">:</span> local    <span class="token key atrule">pluginRootPath</span><span class="token punctuation">:</span> live2dw/    <span class="token key atrule">pluginjsPath</span><span class="token punctuation">:</span> lib/    <span class="token key atrule">pluginModelPath</span><span class="token punctuation">:</span> assets/    <span class="token key atrule">tagMode</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>    <span class="token key atrule">log</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>    <span class="token key atrule">model</span><span class="token punctuation">:</span>        <span class="token key atrule">use</span><span class="token punctuation">:</span> live2d<span class="token punctuation">-</span>widget<span class="token punctuation">-</span>model<span class="token punctuation">-</span>shizuku    <span class="token key atrule">display</span><span class="token punctuation">:</span>        <span class="token key atrule">position</span><span class="token punctuation">:</span> right        <span class="token key atrule">width</span><span class="token punctuation">:</span> <span class="token number">150</span>        <span class="token key atrule">height</span><span class="token punctuation">:</span> <span class="token number">300</span>    <span class="token key atrule">mobile</span><span class="token punctuation">:</span>        <span class="token key atrule">show</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>    <span class="token key atrule">react</span><span class="token punctuation">:</span>        <span class="token key atrule">opacity</span><span class="token punctuation">:</span> <span class="token number">0.7</span></code></pre><p>然后hexo g再hexo s就能预览出效果了，但是有个注意的地方，这个动漫人物最好不要和不蒜子同时使用，不然不蒜子会显示不出来。至于解决办法后续更新。</p><p>解决动漫人物和不蒜子不能同时使用的bug（2019.08.11）：</p><p>打开themes\matery\layout_partial中的footer.ejs，将本站总访问量和访客数的代码改为如下：</p><pre class=" language-js"><code class="language-js"><span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>busuanziStatistics <span class="token operator">&amp;&amp;</span> theme<span class="token punctuation">.</span>busuanziStatistics<span class="token punctuation">.</span>totalTraffic<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">></span>          <span class="token operator">&lt;</span>span id<span class="token operator">=</span><span class="token string">"busuanzi_container_site_pv"</span> style<span class="token operator">=</span><span class="token string">'display:none'</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>        <span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fa fa-heart-o"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">></span>        本站总访问量 <span class="token operator">&lt;</span>span id<span class="token operator">=</span><span class="token string">"busuanzi_value_site_pv"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"white-color"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>busuanziStatistics <span class="token operator">&amp;&amp;</span> theme<span class="token punctuation">.</span>busuanziStatistics<span class="token punctuation">.</span>totalNumberOfvisitors<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">></span>    <span class="token operator">&lt;</span>span id<span class="token operator">=</span><span class="token string">"busuanzi_container_site_uv"</span> style<span class="token operator">=</span><span class="token string">'display:none'</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>        人次<span class="token punctuation">,</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>访客数 <span class="token operator">&lt;</span>span id<span class="token operator">=</span><span class="token string">"busuanzi_value_site_uv"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"white-color"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span> 人<span class="token punctuation">.</span><span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">></span></code></pre><p>变化就在下面两句，将源代码对应字段后面的＜/span＞写在前面了。</p><pre class=" language-js"><code class="language-js"><span class="token operator">&lt;</span>span id<span class="token operator">=</span><span class="token string">"busuanzi_container_site_pv"</span> style<span class="token operator">=</span><span class="token string">'display:none'</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span><span class="token operator">&lt;</span>span id<span class="token operator">=</span><span class="token string">"busuanzi_container_site_uv"</span> style<span class="token operator">=</span><span class="token string">'display:none'</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span></code></pre><p>发现按照上面改了过后，又出现一个新bug：文章头部的阅读次数不显示了，解决办法：（2019.08.11）：</p><p>打开themes\matery\layout_partial中的post-detail.ejs，找到对应代码字段：</p><pre class=" language-js"><code class="language-js"><span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>busuanziStatistics <span class="token operator">&amp;&amp;</span> theme<span class="token punctuation">.</span>busuanziStatistics<span class="token punctuation">.</span>enable<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">></span>    <span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"busuanzi_container_page_pv"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"info-break-policy"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fa fa-eye fa-fw"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'readCount'</span><span class="token punctuation">)</span> <span class="token operator">%</span><span class="token operator">></span><span class="token punctuation">:</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>        <span class="token operator">&lt;</span>span id<span class="token operator">=</span><span class="token string">"busuanzi_value_page_pv"</span> <span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">></span></code></pre><p>修改为下面的就可以了：</p><pre class=" language-js"><code class="language-js"><span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>busuanziStatistics <span class="token operator">&amp;&amp;</span> theme<span class="token punctuation">.</span>busuanziStatistics<span class="token punctuation">.</span>enable<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">></span>        <span class="token operator">&lt;</span>span id<span class="token operator">=</span><span class="token string">"busuanzi_container_site_pv"</span> style<span class="token operator">=</span><span class="token string">'display:none'</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>        <span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fa fa-eye fa-fw"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'readCount'</span><span class="token punctuation">)</span> <span class="token operator">%</span><span class="token operator">></span><span class="token punctuation">:</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>        <span class="token operator">&lt;</span>span id<span class="token operator">=</span><span class="token string">"busuanzi_value_page_pv"</span> <span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">></span></code></pre><h3 id="2-8-添加评论插件"><a href="#2-8-添加评论插件" class="headerlink" title="2.8 添加评论插件"></a>2.8 添加评论插件</h3><p>由于这个主题自带了gittalk、gitment、valine等评论插件，所以我们只需要对应插件参数就行了，这个博客用的是gittalk，如下：</p><p>当然也可以用其他评论插件，只需要配置对应项就是了，不是自带的可以照着网上的教程自己弄一个，类似的文章有很多，可以搜索关键字就行了。</p><h3 id="2-9-添加网易云音乐BGM"><a href="#2-9-添加网易云音乐BGM" class="headerlink" title="2.9 添加网易云音乐BGM"></a>2.9 添加网易云音乐BGM</h3><p>写文章的时候，想插入一段BGM怎么办？</p><p>其实我们可以借助一些在线音乐的外链播放方式，首先打开网易云网页版，找到想听的歌曲，然后点击生成外链：</p><p>可能你会遇到问题，比如点击生成外链会提示你由于版权原因，不能生成，那么可以用下面办法目前还有效，不知道后面会不会失效<br>(以 Chrome为例，其他浏览器类似) 打开歌单页面，在“生成外链播放器”上右击，点击审查元素（检查）ctrl+shift+i；<br>接着找到生成外链播放器这段文字直接双击复制前面的/outchain/2/20707408/</p><p>然后在浏览器地址栏修改歌单链接，示例：<a href="http://music.163.com/#//outchain/2/20707408/">http://music.163.com/#//outchain/2/20707408/</a><br>然后就转到外链设置页面了。<br>复制如下代码：</p><p>粘贴到文章对应位置就行了，为了美观，设置一下居中，具体代码如下：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>middle<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>这里粘贴刚刚复制的代码<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre><h3 id="2-10-博客音乐板块"><a href="#2-10-博客音乐板块" class="headerlink" title="2.10 博客音乐板块"></a>2.10 博客音乐板块</h3><p>如果我们自己写博客写疲劳了，想放松一下听听歌又不想切出博客主页，那么我们可以自己定制一个博客音乐播放界面，把自己喜欢的歌曲都放进来，这里用到是Aplayer插件，但是歌曲来源需要我们自己定义，但是，因为各大音乐平台，由于版权原因，很多歌曲是不支持外链播放的，难道我们就必须每首歌下载然后上传云空间，再获取词曲封面么？这就比较麻烦了。其实不然，研究了半个小时，我发现可以采取下面的办法，很方便：</p><p>首先我们找到网易云在线平台，任意找到一首歌点进去播放，可以在地址栏拿到音乐ID号<br>然后通过下面网址：<a href="http://music.163.com/song/media/outer/url?id=XXXXXX.mp3%EF%BC%8C">http://music.163.com/song/media/outer/url?id=XXXXXX.mp3，</a> XXXXXX就是歌曲ID号，每一首歌我们只需要换掉这个ID号就行了,就相当于每一首的外链了<br>最后封面图也可以按F12去找页面元素的链接，填到对应的musics.jason文件中就可以，批量填入，听到好听的歌曲随时更换随时新增，很方便。<br>操作如下图：</p><h3 id="2-11-增加emoji支持"><a href="#2-11-增加emoji支持" class="headerlink" title="2.11 增加emoji支持"></a>2.11 增加emoji支持</h3><p>为博客新增对emoji表情的支持，使用到了 hexo-filter-github-emojis 的 Hexo 插件来支持 emoji表情的生成，把对应的markdown emoji语法（::,例如：<span class="github-emoji"><span>😄</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f604.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> <span class="github-emoji"><span>😄</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f604.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>）转变成会跳跃的emoji表情，安装命令如下：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-filter-github-emojis --save</code></pre><p>在 Hexo 根目录下的 _config.yaml 文件中，新增以下的配置项：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">githubEmojis</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">className</span><span class="token punctuation">:</span> github<span class="token punctuation">-</span>emoji  <span class="token key atrule">inject</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">styles</span><span class="token punctuation">:</span>  <span class="token key atrule">customEmojis</span><span class="token punctuation">:</span></code></pre><p>执行 hexo clean &amp;&amp; hexo g 重新生成博客文件，然后就可以在文章中对应位置看到你用emoji语法写的表情了。<br>如下图：</p><p>emoji支持<br>emoji支持</p><h3 id="2-12-Valine评论模块修改"><a href="#2-12-Valine评论模块修改" class="headerlink" title="2.12 Valine评论模块修改"></a>2.12 Valine评论模块修改</h3><p>matery主题已经集成Valine评论模块，在主题配置文件.yaml中配置相应的字段就行了。enable: true，XXX字段是需要自己注册登录leancloud官网，创建应用然后获取appId和appKey，其他参数根据自己的需求修改就是，如下：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">valine</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">appId</span><span class="token punctuation">:</span> XXXXXXXXXXXXXXXXXXXXX  <span class="token key atrule">appKey</span><span class="token punctuation">:</span> XXXXXXXXXXXXXXXXXXXX  <span class="token key atrule">notify</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">verify</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">visitor</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">avatar</span><span class="token punctuation">:</span> <span class="token string">'mm'</span> <span class="token comment" spellcheck="true"># Gravatar style : mm/identicon/monsterid/wavatar/retro/hide</span>  <span class="token key atrule">pageSize</span><span class="token punctuation">:</span> <span class="token number">10</span>  <span class="token key atrule">placeholder</span><span class="token punctuation">:</span> <span class="token string">'just go go'</span> <span class="token comment" spellcheck="true"># Comment Box placeholder</span></code></pre><p>注意：Valine用在matery主题上有个bug就是第一条评论位置会错位</p><p>如下图：</p><p>位置错位<br>位置错位<br>解决办法：<br>F12开发者模式，控制台定位bug位置，修改参数，调整对应主题源文件参数，得以解决，如下图示：</p><p>定位bug位置<br>定位bug位置</p><p>修改图示<br>修改图示</p><h3 id="2-13-添加博客动态标签"><a href="#2-13-添加博客动态标签" class="headerlink" title="2.13 添加博客动态标签"></a>2.13 添加博客动态标签</h3><p>原理就是给博客增加一个事件判断，如下图所示：</p><p>打开博客主题文件夹，路径：themes/matery/layout/layout.ejs，在对应位置添加如下代码：</p><pre class=" language-js"><code class="language-js"><span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">"text/javascript"</span><span class="token operator">></span>    <span class="token keyword">var</span> OriginTitile <span class="token operator">=</span> document<span class="token punctuation">.</span>title<span class="token punctuation">,</span>        st<span class="token punctuation">;</span>    document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"visibilitychange"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        document<span class="token punctuation">.</span>hidden <span class="token operator">?</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>title <span class="token operator">=</span> <span class="token string">"看不见我🙈~看不见我🙈~"</span><span class="token punctuation">,</span> <span class="token function">clearTimeout</span><span class="token punctuation">(</span>st<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>title <span class="token operator">=</span>            <span class="token string">"(๑•̀ㅂ•́) ✧被发现了～"</span><span class="token punctuation">,</span> st <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                document<span class="token punctuation">.</span>title <span class="token operator">=</span> OriginTitile            <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">3e3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><p>然后 hexo clean &amp;&amp; hexo g 即可。</p><h3 id="2-14-添加鼠标点击烟花爆炸效果"><a href="#2-14-添加鼠标点击烟花爆炸效果" class="headerlink" title="2.14 添加鼠标点击烟花爆炸效果"></a>2.14 添加鼠标点击烟花爆炸效果</h3><p>在 /themes/matery/source/js 新建文件 fireworks.js，并添加如下代码</p><p> Download Now</p><p>然后在 /themes/matery/layout/_partial/footer.ejs 中添加如下代码：</p><pre class=" language-js"><code class="language-js"><span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>fireworks<span class="token punctuation">.</span>enable<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">></span><span class="token operator">&lt;</span>canvas <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fireworks"</span> style<span class="token operator">=</span><span class="token string">"position: fixed; left: 0; top: 0; z-index: 1; pointer-events: none;"</span> <span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>canvas<span class="token operator">></span><span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">"text/javascript"</span> src<span class="token operator">=</span><span class="token string">"//cdn.bootcss.com/animejs/2.2.0/anime.min.js"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">"text/javascript"</span> src<span class="token operator">=</span><span class="token string">"/js/fireworks.js"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">></span></code></pre><p>在主题配置文件 .yaml中配置:</p><pre class=" language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># 鼠标点击烟花爆炸动效</span><span class="token key atrule">fireworks</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span></code></pre><h3 id="2-15-添加页面樱花飘落动效"><a href="#2-15-添加页面樱花飘落动效" class="headerlink" title="2.15 添加页面樱花飘落动效"></a>2.15 添加页面樱花飘落动效</h3><p>在 /themes/matery/source/js 新建文件 sakura.js，并添加如下代码</p><p> Download Now</p><p>然后在 /themes/matery/layout/_partial/head.ejs 中添加如下代码：</p><pre class=" language-js"><code class="language-js"><span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>sakura<span class="token punctuation">.</span>enable<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">></span>    <span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">"text/javascript"</span><span class="token operator">></span>    <span class="token comment" spellcheck="true">//只在桌面版网页启用特效</span>    <span class="token keyword">var</span> windowWidth <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span>window<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>windowWidth <span class="token operator">></span> <span class="token number">768</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">'&lt;script type="text/javascript" src="/js/sakura.js">&lt;/script>'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">></span></code></pre><p>在主题配置文件 .yaml中配置:</p><pre class=" language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># 页面樱花飘落动效</span><span class="token key atrule">sakura</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span></code></pre><h3 id="2-16-添加鼠标点击文字特效"><a href="#2-16-添加鼠标点击文字特效" class="headerlink" title="2.16 添加鼠标点击文字特效"></a>2.16 添加鼠标点击文字特效</h3><p>在 /themes/matery/source/js 新建文件 wenzi.js，并添加如下代码</p><p> Download Now</p><p>然后在 /themes/matery/layout/_partial/head.ejs 中添加如下代码：</p><pre class=" language-js"><code class="language-js"><span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>wenzi<span class="token punctuation">.</span>enable<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">></span>    <span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">"text/javascript"</span><span class="token operator">></span>    <span class="token comment" spellcheck="true">//只在桌面版网页启用特效</span>    <span class="token keyword">var</span> windowWidth <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span>window<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>windowWidth <span class="token operator">></span> <span class="token number">768</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">'&lt;script type="text/javascript" src="/js/wenzi.js">&lt;/script>'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">></span></code></pre><p>在主题配置文件 .yaml中配置:</p><pre class=" language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># 页面樱花飘落动效</span><span class="token key atrule">wenzi</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span></code></pre><h3 id="2-17-添加页面雪花飘落动效"><a href="#2-17-添加页面雪花飘落动效" class="headerlink" title="2.17 添加页面雪花飘落动效"></a>2.17 添加页面雪花飘落动效</h3><p>在 /themes/matery/source/js 新建文件 xuehuapiaoluo.js，并添加如下代码</p><p> Download Now</p><p>然后在 /themes/matery/layout/_partial/head.ejs 中添加如下代码：</p><pre class=" language-js"><code class="language-js"><span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>xuehuapiaoluo<span class="token punctuation">.</span>enable<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">></span>    <span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">"text/javascript"</span><span class="token operator">></span>    <span class="token comment" spellcheck="true">//只在桌面版网页启用特效</span>    <span class="token keyword">var</span> windowWidth <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span>window<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>windowWidth <span class="token operator">></span> <span class="token number">768</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">'&lt;script type="text/javascript" src="/js/xuehuapiaoluo.js">&lt;/script>'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">></span></code></pre><p>在主题配置文件 .yaml中配置:</p><pre class=" language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># 页面樱花飘落动效</span><span class="token key atrule">xuehuapiaoluo</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span></code></pre><h3 id="2-18-添加博客天气插件"><a href="#2-18-添加博客天气插件" class="headerlink" title="2.18 添加博客天气插件"></a>2.18 添加博客天气插件</h3><p>在搜寻插件的过程中无意间用 google 搜到的一个网站，使用非常简单，在这里附上插件添加的方法</p><p>中国天气网：<a href="https://cj.weather.com.cn/plugin/pc">https://cj.weather.com.cn/plugin/pc</a></p><p>选择自定义插件—&gt;自定义样式——&gt;生成代码，然后会生成这样一段代码</p><pre class=" language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!-- Weather Widget --></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"> WIDGET <span class="token operator">=</span> <span class="token punctuation">{</span>FID<span class="token punctuation">:</span> <span class="token string">'your FID'</span><span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://apip.weatherdt.com/float/static/js/r.js?v<span class="token punctuation">=</span>1111<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><p>在 /themes/matery/source/layout/_widget 新建文件 weather.ejs，把上面生成的代码添加进入,可以设置只有桌面端显示,如下修改:</p><pre class=" language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!-- 天气接口  洪卫 shw2018 add 2019.09.09 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">  WIDGET <span class="token operator">=</span> <span class="token punctuation">{</span>FID<span class="token punctuation">:</span> <span class="token string">'1tFpFZ5Mtj'</span><span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!-- &lt;script type="text/javascript" src="https://apip.weatherdt.com/float/static/js/r.js?v=1111">&lt;/script> --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">  <span class="token comment" spellcheck="true">//只在桌面版网页启用特效</span>  <span class="token keyword">var</span> windowWidth <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span>window<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>windowWidth <span class="token operator">></span> <span class="token number">768</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">'&lt;script type="text/javascript" src="https://apip.weatherdt.com/float/static/js/r.js?v=1111">&lt;\/script>'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><p>然后在 /themes/matery/layout/_partial/layout.ejs 中添加如下代码：</p><pre class=" language-js"><code class="language-js"><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 天气接口控件  洪卫 shw2018 add <span class="token number">2019.09</span><span class="token punctuation">.</span><span class="token number">09</span> <span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>weather<span class="token punctuation">.</span>enable<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_widget/weather'</span><span class="token punctuation">)</span> <span class="token operator">%</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">></span></code></pre><p>在主题配置文件 .yaml中配置:</p><pre class=" language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># 天气接口插件</span><span class="token key atrule">weather</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span></code></pre><p>展示效果可以参考我的主页</p><p>当然,如果你不想搞这么复杂,可以直接将下面代码插入 /themes/matery/layout/_partial/layout.ejs 中即可使用:</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">    WIDGET <span class="token operator">=</span> <span class="token punctuation">{</span>FID<span class="token punctuation">:</span> <span class="token string">'1tFpFZ5Mtj'</span><span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://apip.weatherdt.com/float/static/js/r.js?v<span class="token punctuation">=</span>1111<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><h3 id="2-19-修复-Valine-头像不显示问题"><a href="#2-19-修复-Valine-头像不显示问题" class="headerlink" title="2.19 修复 Valine 头像不显示问题"></a>2.19 修复 Valine 头像不显示问题</h3><p>关于头像显示问题，先去注册Gravatar，之前看文档说是七天的同步时间，结果一直也没有显示头像，检查查看头像链接，发现把&amp;v=1.3.x 去掉就可以了，于是下载 js 文件 valine，下载后然后编辑，搜索关键字 &amp;v=，找到 g.params=”?d=”+i.indexOf(a&gt;-1?a:”mp”)+”&amp;v=”+o+d，将 “&amp;v=”+o+d 删除即可，然后在 Gravatar 拿到头像的 url 填上去就行了</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">valine</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">appId</span><span class="token punctuation">:</span>   <span class="token key atrule">appKey</span><span class="token punctuation">:</span>   <span class="token key atrule">notify</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">verify</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">visitor</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token comment" spellcheck="true"># avatar: 'mp' # Gravatar style : mm/identicon/monsterid/wavatar/retro/hide</span>  <span class="token key atrule">avatar</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//s.gravatar.com/avatar/0007991f99268c04f1aa4cdd9bea93b4<span class="token punctuation">?</span>s=80   <span class="token key atrule">pageSize</span><span class="token punctuation">:</span> <span class="token number">10</span>  <span class="token key atrule">placeholder</span><span class="token punctuation">:</span> <span class="token string">'没有Github账号的在这里留言评论～'</span> <span class="token comment" spellcheck="true"># Comment Box placeholder</span></code></pre><p>原因就是链接后跟了个 &amp;v=1.3.x，解决就是将这段删掉就可以了，具体到 Valine.mini.js 文件就是删掉 &amp;v=”+o+d即可</p><h3 id="2-20-增加二级菜单"><a href="#2-20-增加二级菜单" class="headerlink" title="2.20 增加二级菜单"></a>2.20 增加二级菜单</h3><p>都知道，我们标题栏宽度有限，我们项目一多了，就放不下了，这时候你肯定就需要一个二级菜单来拆分一下项目，既可以减少标题栏项目数，使之更加清爽，又可以间项目分类，逻辑清晰。</p><p>好了，如果你用的matery主题，那么废话不多说，直接上教程，其实需要修改的就四个地方：matery.css/matery.js/navgation.ejs/mobile-nav.ejs</p><p>第一步，在 /themes/matery/layout/_partial 中找到 mobile-nav.ejs ，找到下面这段代码：</p><pre class=" language-js"><code class="language-js"><span class="token operator">&lt;</span>ul <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"menu-list mobile-menu-list"</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">%</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>theme<span class="token punctuation">.</span>menu<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">></span>    <span class="token operator">&lt;</span>li<span class="token operator">></span>        <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"&lt;%- theme.menu[key].url %>"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"waves-effect waves-light"</span><span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>menu<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">.</span>icon <span class="token operator">&amp;&amp;</span> theme<span class="token punctuation">.</span>menu<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">.</span>icon<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">></span>            <span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fa fa-fw &lt;%- theme.menu[key].icon %>"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">></span>            <span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fa fa-fw fa-link"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>language <span class="token operator">===</span> <span class="token string">'zh-CN'</span> <span class="token operator">&amp;&amp;</span> menuMap<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">?</span> menuMap<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token punctuation">:</span> key <span class="token operator">%</span><span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token operator">%</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>githubLink <span class="token operator">&amp;&amp;</span> theme<span class="token punctuation">.</span>githubLink<span class="token punctuation">.</span>enable<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">></span>    <span class="token operator">&lt;</span>li<span class="token operator">></span><span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"divider"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>    <span class="token operator">&lt;</span>li<span class="token operator">></span>        <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"&lt;%- theme.githubLink.url %>"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"waves-effect waves-light"</span> target<span class="token operator">=</span><span class="token string">"_blank"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fa fa-github-square fa-fw"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> theme<span class="token punctuation">.</span>githubLink<span class="token punctuation">.</span>title <span class="token operator">%</span><span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">></span></code></pre><p>替换成下面的：</p><pre class=" language-js"><code class="language-js"><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 支持二级菜单特性 洪卫 shw2018 modify <span class="token number">2019.09</span><span class="token punctuation">.</span><span class="token number">17</span>  <span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span>ul <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"menu-list mobile-menu-list"</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">%</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>theme<span class="token punctuation">.</span>menu<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">></span>        <span class="token operator">&lt;</span>li <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"m-nav-item"</span><span class="token operator">></span>                <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>theme<span class="token punctuation">.</span>menu<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">.</span>children<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">></span>                    <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"&lt;%- theme.menu[key].url %>"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"waves-effect waves-light"</span><span class="token operator">></span>                        <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>menu<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">.</span>icon <span class="token operator">&amp;&amp;</span> theme<span class="token punctuation">.</span>menu<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">.</span>icon<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">></span>                        <span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fa fa-fw &lt;%- theme.menu[key].icon %>"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">></span>                        <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">></span>                        <span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fa fa-fw fa-link"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">></span>                        <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">></span>                        <span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>language <span class="token operator">===</span> <span class="token string">'zh-CN'</span> <span class="token operator">&amp;&amp;</span> menuMap<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">?</span> menuMap<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token punctuation">:</span> key <span class="token operator">%</span><span class="token operator">></span>                    <span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span>              <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">></span>                    <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"javascript:;"</span><span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>menu<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">.</span>icon <span class="token operator">&amp;&amp;</span> theme<span class="token punctuation">.</span>menu<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">.</span>icon<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">></span>                            <span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fa fa-fw &lt;%- theme.menu[key].icon %>"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">></span>                            <span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fa fa-fw fa-link"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>language <span class="token operator">===</span> <span class="token string">'zh-CN'</span> <span class="token operator">&amp;&amp;</span> menuMap<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">?</span> menuMap<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token punctuation">:</span> key <span class="token operator">%</span><span class="token operator">></span>                            <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"m-icon"</span><span class="token operator">></span><span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fa fa-chevron-right"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>                    <span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span>                <span class="token operator">&lt;</span>ul<span class="token operator">></span>                  <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> childrenLink <span class="token keyword">of</span> theme<span class="token punctuation">.</span>menu<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">.</span>children<span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">></span>                    <span class="token operator">&lt;</span>li<span class="token operator">></span>                       <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"&lt;%- url_for(childrenLink.url)%>"</span> <span class="token operator">></span>                           <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>childrenLink<span class="token punctuation">.</span>icon <span class="token operator">&amp;&amp;</span> childrenLink<span class="token punctuation">.</span>icon<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">></span>                            <span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fa &lt;%- childrenLink.icon %>"</span> style<span class="token operator">=</span><span class="token string">"left: 25px; position: absolute;"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">></span>                       <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">></span>                       <span class="token operator">&lt;</span>span<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> childrenLink<span class="token punctuation">.</span>name <span class="token operator">%</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>                      <span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span>                    <span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>                  <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">></span>                 <span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">></span>              <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token operator">%</span><span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>githubLink <span class="token operator">&amp;&amp;</span> theme<span class="token punctuation">.</span>githubLink<span class="token punctuation">.</span>enable<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">></span>        <span class="token operator">&lt;</span>li<span class="token operator">></span><span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"divider"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>        <span class="token operator">&lt;</span>li<span class="token operator">></span>            <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"&lt;%- theme.githubLink.url %>"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"waves-effect waves-light"</span> target<span class="token operator">=</span><span class="token string">"_blank"</span><span class="token operator">></span>                <span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fa fa-github-square fa-fw"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> theme<span class="token punctuation">.</span>githubLink<span class="token punctuation">.</span>title <span class="token operator">%</span><span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">></span></code></pre><p>第二步，在 /themes/matery/layout/_partial 中找到 navagtion.ejs ，找到下面这段代码：</p><pre class=" language-js"><code class="language-js"><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"#"</span> data<span class="token operator">-</span>target<span class="token operator">=</span><span class="token string">"mobile-nav"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"sidenav-trigger button-collapse"</span><span class="token operator">></span><span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fa fa-navicon"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token operator">&lt;</span>ul <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"right"</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">%</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>theme<span class="token punctuation">.</span>menu<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">></span>    <span class="token operator">&lt;</span>li <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"hide-on-med-and-down"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"&lt;%- theme.menu[key].url %>"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"waves-effect waves-light"</span><span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>menu<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">.</span>icon <span class="token operator">&amp;&amp;</span> theme<span class="token punctuation">.</span>menu<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">.</span>icon<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">></span>            <span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fa &lt;%- theme.menu[key].icon %>"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">></span>            <span class="token operator">&lt;</span>span<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>language <span class="token operator">===</span> <span class="token string">'zh-CN'</span> <span class="token operator">&amp;&amp;</span> menuMap<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">?</span> menuMap<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token punctuation">:</span> key <span class="token operator">%</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token operator">%</span><span class="token operator">></span>    <span class="token operator">&lt;</span>li<span class="token operator">></span>        <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"#searchModal"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"modal-trigger waves-effect waves-light"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>i id<span class="token operator">=</span><span class="token string">"searchIcon"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fa fa-search"</span> title<span class="token operator">=</span><span class="token string">"&lt;%= __('search') %>"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">></span></code></pre><p>替换成下面的：</p><pre class=" language-js"><code class="language-js"><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 支持二级菜单特性 洪卫 shw2018 modify <span class="token number">2019.09</span><span class="token punctuation">.</span><span class="token number">17</span>  <span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"#"</span> data<span class="token operator">-</span>target<span class="token operator">=</span><span class="token string">"mobile-nav"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"sidenav-trigger button-collapse"</span><span class="token operator">></span><span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fa fa-navicon"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token operator">&lt;</span>ul <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"right nav-menu"</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">%</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>theme<span class="token punctuation">.</span>menu<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">></span>      <span class="token operator">&lt;</span>li <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"hide-on-med-and-down nav-item"</span> <span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>theme<span class="token punctuation">.</span>menu<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">.</span>children<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">></span>            <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"&lt;%- theme.menu[key].url %>"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"waves-effect waves-light"</span><span class="token operator">></span>              <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>menu<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">.</span>icon <span class="token operator">&amp;&amp;</span> theme<span class="token punctuation">.</span>menu<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">.</span>icon<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">></span>                <span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fa &lt;%- theme.menu[key].icon %>"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">></span>              <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">></span>              <span class="token operator">&lt;</span>span<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>language <span class="token operator">===</span> <span class="token string">'zh-CN'</span> <span class="token operator">&amp;&amp;</span> menuMap<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">?</span> menuMap<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token punctuation">:</span> key <span class="token operator">%</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">></span>              <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"&lt;%- theme.menu[key].url %>"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"waves-effect waves-light"</span><span class="token operator">></span>                <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>menu<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">.</span>icon <span class="token operator">&amp;&amp;</span> theme<span class="token punctuation">.</span>menu<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">.</span>icon<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">></span>                  <span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fa &lt;%- theme.menu[key].icon %>"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">></span>                <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">></span>                <span class="token operator">&lt;</span>span<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>language <span class="token operator">===</span> <span class="token string">'zh-CN'</span> <span class="token operator">&amp;&amp;</span> menuMap<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">?</span> menuMap<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token punctuation">:</span> key <span class="token operator">%</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>                <span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fa fa-chevron-down"</span> aria<span class="token operator">-</span>hidden<span class="token operator">=</span><span class="token string">"true"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">></span>              <span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span>            <span class="token operator">&lt;</span>ul <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"sub-nav menus_item_child "</span><span class="token operator">></span>              <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> childrenLink <span class="token keyword">of</span> theme<span class="token punctuation">.</span>menu<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">.</span>children<span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">></span>                <span class="token operator">&lt;</span>li<span class="token operator">></span>                   <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"&lt;%- url_for(childrenLink.url)%>"</span> <span class="token operator">></span>                    <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>childrenLink<span class="token punctuation">.</span>icon <span class="token operator">&amp;&amp;</span> childrenLink<span class="token punctuation">.</span>icon<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">></span>                      <span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fa &lt;%- childrenLink.icon %>"</span> style<span class="token operator">=</span><span class="token string">"margin-top: -20px;"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">></span>                    <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">></span>                    <span class="token operator">&lt;</span>span<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> childrenLink<span class="token punctuation">.</span>name <span class="token operator">%</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>                  <span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span>                <span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>              <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">></span>          <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token operator">%</span><span class="token operator">></span>    <span class="token operator">&lt;</span>li<span class="token operator">></span>        <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"#searchModal"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"modal-trigger waves-effect waves-light"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>i id<span class="token operator">=</span><span class="token string">"searchIcon"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fa fa-search"</span> title<span class="token operator">=</span><span class="token string">"&lt;%= __('search') %>"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">></span></code></pre><p>第三步，在 /themes/matery/source/css 中找到 matery.css ，在最后添加下面这段代码：</p><pre class=" language-css"><code class="language-css"><span class="token comment" spellcheck="true">/* 二级菜单样式定义 洪卫 shw2018 add 2019.09.17 */</span><span class="token selector"><span class="token class">.nav-menu</span> </span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.nav-menu</span> li <span class="token class">.sub-nav</span> </span><span class="token punctuation">{</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">77</span>px<span class="token punctuation">;</span>    <span class="token property">list-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token property">margin-left</span><span class="token punctuation">:</span> -<span class="token number">20</span>px<span class="token punctuation">;</span>    <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.nav-menu</span> li <span class="token class">.sub-nav</span> li </span><span class="token punctuation">{</span>    <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>    <span class="token property">clear</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">140</span>px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">35</span>px<span class="token punctuation">;</span>    <span class="token property">line-height</span><span class="token punctuation">:</span> <span class="token number">35</span>px<span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.nav-menu</span> li <span class="token class">.sub-nav</span> li a </span><span class="token punctuation">{</span>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">34</span>px<span class="token punctuation">;</span>    <span class="token property">line-height</span><span class="token punctuation">:</span> <span class="token number">34</span>px<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">138</span>px<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">0</span>px<span class="token punctuation">;</span>    <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">5</span>px<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#000</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.nav-show</span> i<span class="token attribute">[aria-hidden=true]</span> </span><span class="token punctuation">{</span>    <span class="token property">-webkit-transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">180</span>deg<span class="token punctuation">)</span> <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token property">-moz-transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">180</span>deg<span class="token punctuation">)</span> <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token property">-o-transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">180</span>deg<span class="token punctuation">)</span> <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token property">-ms-transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">180</span>deg<span class="token punctuation">)</span> <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">180</span>deg<span class="token punctuation">)</span> <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token property">-webkit-transition</span><span class="token punctuation">:</span> all <span class="token number">.3</span>s<span class="token punctuation">;</span>    <span class="token property">-moz-transition</span><span class="token punctuation">:</span> all <span class="token number">.3</span>s<span class="token punctuation">;</span>    <span class="token property">-o-transition</span><span class="token punctuation">:</span> all <span class="token number">.3</span>s<span class="token punctuation">;</span>    <span class="token property">-ms-transition</span><span class="token punctuation">:</span> all <span class="token number">.3</span>s<span class="token punctuation">;</span>    <span class="token property">transition</span><span class="token punctuation">:</span> all <span class="token number">.3</span>s<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.menus_item_child</span> </span><span class="token punctuation">{</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">255</span>, <span class="token number">255</span>, <span class="token number">255</span>, <span class="token number">.8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> fit-content<span class="token punctuation">;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">10</span>px<span class="token punctuation">;</span>    <span class="token property">-webkit-box-shadow</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">5</span>px <span class="token number">20</span>px -<span class="token number">4</span>px <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">.5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">box-shadow</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">5</span>px <span class="token number">20</span>px -<span class="token number">4</span>px <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">.5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token property">opacity</span><span class="token punctuation">:</span> <span class="token number">0.98</span><span class="token punctuation">;</span>    <span class="token property">-ms-filter</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token property">filter</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token property">-webkit-animation</span><span class="token punctuation">:</span> sub_menus <span class="token number">.3</span>s <span class="token number">.1</span>s ease both<span class="token punctuation">;</span>    <span class="token property">-moz-animation</span><span class="token punctuation">:</span> sub_menus <span class="token number">.3</span>s <span class="token number">.1</span>s ease both<span class="token punctuation">;</span>    <span class="token property">-o-animation</span><span class="token punctuation">:</span> sub_menus <span class="token number">.3</span>s <span class="token number">.1</span>s ease both<span class="token punctuation">;</span>    <span class="token property">-ms-animation</span><span class="token punctuation">:</span> sub_menus <span class="token number">.3</span>s <span class="token number">.1</span>s ease both<span class="token punctuation">;</span>    <span class="token property">animation</span><span class="token punctuation">:</span> sub_menus <span class="token number">.3</span>s <span class="token number">.1</span>s ease both<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.menus_item_child</span><span class="token pseudo-element">:before</span> </span><span class="token punctuation">{</span>    <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> -<span class="token number">20</span>px<span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">50%</span><span class="token punctuation">;</span>    <span class="token property">margin-left</span><span class="token punctuation">:</span> -<span class="token number">10</span>px<span class="token punctuation">;</span>    <span class="token property">border-width</span><span class="token punctuation">:</span> <span class="token number">10</span>px<span class="token punctuation">;</span>    <span class="token property">border-style</span><span class="token punctuation">:</span> solid<span class="token punctuation">;</span>    <span class="token property">border-color</span><span class="token punctuation">:</span> transparent transparent <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">255</span>, <span class="token number">255</span>, <span class="token number">255</span>, <span class="token number">.8</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.m-nav-item</span> </span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/* position: relative; */</span>    <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">45</span>px<span class="token punctuation">}</span><span class="token selector"><span class="token class">.m-nav-item</span> ul </span><span class="token punctuation">{</span>    <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">255</span>, <span class="token number">255</span>, <span class="token number">255</span>, <span class="token number">.1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.m-nav-item</span> ul li </span><span class="token punctuation">{</span>    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">245</span>px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">50</span>px<span class="token punctuation">;</span>    <span class="token property">line-height</span><span class="token punctuation">:</span> <span class="token number">50</span>px<span class="token punctuation">;</span>    <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.m-nav-show</span> <span class="token class">.m-icon</span> </span><span class="token punctuation">{</span>    <span class="token property">-webkit-transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">90</span>deg<span class="token punctuation">)</span> <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token property">-moz-transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">90</span>deg<span class="token punctuation">)</span> <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token property">-o-transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">90</span>deg<span class="token punctuation">)</span> <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token property">-ms-transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">90</span>deg<span class="token punctuation">)</span> <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">90</span>deg<span class="token punctuation">)</span> <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token property">-webkit-transition</span><span class="token punctuation">:</span> all <span class="token number">.3</span>s<span class="token punctuation">;</span>    <span class="token property">-moz-transition</span><span class="token punctuation">:</span> all <span class="token number">.3</span>s<span class="token punctuation">;</span>    <span class="token property">-o-transition</span><span class="token punctuation">:</span> all <span class="token number">.3</span>s<span class="token punctuation">;</span>    <span class="token property">-ms-transition</span><span class="token punctuation">:</span> all <span class="token number">.3</span>s<span class="token punctuation">;</span>    <span class="token property">transition</span><span class="token punctuation">:</span> all <span class="token number">.3</span>s<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.m-nav-show</span> <span class="token class">.m-nav-item</span>>a<span class="token pseudo-class">:hover</span> </span><span class="token punctuation">{</span>    <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#FFF</span><span class="token punctuation">;</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">255</span>, <span class="token number">255</span>, <span class="token number">255</span>, <span class="token number">.8</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.m-nav-show</span>>a<span class="token pseudo-element">:before</span>,<span class="token class">.m-nav-item</span>>a<span class="token pseudo-class">:hover</span><span class="token pseudo-element">:before</span> </span><span class="token punctuation">{</span>    <span class="token property">opacity</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.m-nav-item</span> <span class="token class">.m-icon</span> </span><span class="token punctuation">{</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">65</span>px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">50</span>px<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">0</span>px<span class="token punctuation">;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.nav-item</span> li<span class="token pseudo-class">:hover</span> a </span><span class="token punctuation">{</span>    <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#FFF</span><span class="token punctuation">;</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">.1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>第四步，在 /themes/matery/source/js 中找到 matery.js ，在最后一个 });前添加下面这段代码：</p><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">// 增加二级菜单功能 洪卫 shw2018 add 2019.09.17</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">".nav-menu>li"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hover</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">children</span><span class="token punctuation">(</span><span class="token string">'ul'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addClass</span><span class="token punctuation">(</span><span class="token string">'nav-show'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">siblings</span><span class="token punctuation">(</span><span class="token string">'li'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeClass</span><span class="token punctuation">(</span><span class="token string">'nav-show'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">children</span><span class="token punctuation">(</span><span class="token string">'ul'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.nav-item.nav-show'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeClass</span><span class="token punctuation">(</span><span class="token string">'nav-show'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.m-nav-item>a'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token string">'ul'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">'display'</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">"none"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.m-nav-item'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">children</span><span class="token punctuation">(</span><span class="token string">'ul'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slideUp</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token string">'ul'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slideDown</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">parent</span><span class="token punctuation">(</span><span class="token string">'li'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addClass</span><span class="token punctuation">(</span><span class="token string">'m-nav-show'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">siblings</span><span class="token punctuation">(</span><span class="token string">'li'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeClass</span><span class="token punctuation">(</span><span class="token string">'m-nav-show'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>                <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token string">'ul'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slideUp</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.m-nav-item.m-nav-show'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeClass</span><span class="token punctuation">(</span><span class="token string">'m-nav-show'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>第五步，在主题配置文件.yaml修改标题栏内容，按下面格式更改:</p><pre class=" language-yaml"><code class="language-yaml">  <span class="token key atrule">标题一级</span><span class="token punctuation">:</span>     <span class="token key atrule">url</span><span class="token punctuation">:</span> /XXX    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fa<span class="token punctuation">-</span>XXXX    <span class="token key atrule">children</span><span class="token punctuation">:</span>       <span class="token punctuation">-</span>        <span class="token key atrule">name</span><span class="token punctuation">:</span> 标题二级1        <span class="token key atrule">url</span><span class="token punctuation">:</span> /XXX/XXX        <span class="token key atrule">icon</span><span class="token punctuation">:</span> fa<span class="token punctuation">-</span>XXXX      <span class="token punctuation">-</span>        <span class="token key atrule">name</span><span class="token punctuation">:</span> 标题二级2        <span class="token key atrule">url</span><span class="token punctuation">:</span> /XXX/XXX        <span class="token key atrule">icon</span><span class="token punctuation">:</span> fa<span class="token punctuation">-</span>XXXX</code></pre><p>第六步，source 文件夹新疆对应的标题目录，并放 index.md 模板就行了。</p><p>到这一步就大功告成了，快去体验吧。</p><h1 id="第三部分-优化"><a href="#第三部分-优化" class="headerlink" title="第三部分 优化"></a>第三部分 优化</h1><p>hexo添加各种优化功能，比如SEO优化等。<br>待续……</p><h2 id="1-网站SEO优化"><a href="#1-网站SEO优化" class="headerlink" title="1.网站SEO优化"></a>1.网站SEO优化</h2><p>网站推广是一个比较烦人的事情，特别是对于专心搞技术的来说，可能就不是很擅长，那么怎么才能让别人知道我们网站呢？也就是说我们需要想办法让别人通过搜索就可以搜索到博客的内容，给我们带来自然流量，这就需要seo优化,让我们的站点变得对搜索引擎友好</p><p>SEO是由英文Search Engine Optimization缩写而来， 中文意译为“搜索引擎优化”。SEO是指通过站内优化比如网站结构调整、网站内容建设、网站代码优化等以及站外优化。</p><h3 id="1-1-让百度收录你的站点"><a href="#1-1-让百度收录你的站点" class="headerlink" title="1.1 让百度收录你的站点"></a>1.1 让百度收录你的站点</h3><p>首先要做的就是让各大搜索引擎收录你的站点，我们在刚建站的时候各个搜索引擎是没有收录我们网站的，在搜索引擎中输入site:&lt;域名&gt;,如果如下图所示就是说明我们的网站并没有被百度收录。我们可以直接点击下面的“网址提交”来提交我们的网站</p><p>查看站点是否被百度收录<br>查看站点是否被百度收录</p><h4 id="1-1-1-验证网站所有权"><a href="#1-1-1-验证网站所有权" class="headerlink" title="1.1.1 验证网站所有权"></a>1.1.1 验证网站所有权</h4><p>登录百度站长搜索资源平台：<a href="http://zhanzhang.baidu.com,/">http://zhanzhang.baidu.com，</a> 只要有百度旗下的账号就可以登录，登录成功之后在站点管理中点击添加网站然后输入你的站点地址。</p><p>注意，这里需要输入我们自己购买的域名,不能使用xxx.github.io之类域名.因为github是不允许百度的spider（蜘蛛）爬取github上的内容的，所以如果想让你的站点被百度收录，只能使用自己购买的域名</p><p>向百度站长添加网站<br>向百度站长添加网站<br>在填完网址选择完网站的类型之后需要验证网站的所有权，验证网站所有权的方式有三种：</p><p>文件验证。<br>html标签验证<br>CNAME解析验证（推荐使用）<br>验证网站所有权<br>验证网站所有权<br>其实使用哪一种方式都可以，都是比较简单的。</p><p>但是一定要注意，使用文件验证文件存放的位置需要放在sourc文件夹下，如果是html文件那么hexo就会将其编译，所以必须要在html头部加上的layout:false，这样就不会被hexo编译。（如果验证文件是txt格式的就不需要）</p><p>其他两种方式也是很简单的，个人推荐文件验证和CNAME验证，CNAME验证最为简单，只需加一条解析就好~</p><p>添加云解析<br>添加云解析</p><p>验证通过<br>验证通过</p><h4 id="1-1-2-生成网站地图"><a href="#1-1-2-生成网站地图" class="headerlink" title="1.1.2 生成网站地图"></a>1.1.2 生成网站地图</h4><p>我们需要使用npm自动生成网站的sitemap，然后将生成的sitemap提交到百度和其他搜索引擎</p><h5 id="1-1-2-1-安装sitemap插件"><a href="#1-1-2-1-安装sitemap插件" class="headerlink" title="1.1.2.1 安装sitemap插件"></a>1.1.2.1 安装sitemap插件</h5><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-generator-sitemap --save     <span class="token function">npm</span> <span class="token function">install</span> hexo-generator-baidu-sitemap --save</code></pre><h5 id="1-1-2-2-修改博客配置文件"><a href="#1-1-2-2-修改博客配置文件" class="headerlink" title="1.1.2.2 修改博客配置文件"></a>1.1.2.2 修改博客配置文件</h5><p>在根目录配置文件.yaml中修改url为你的站点地址</p><pre class=" language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># URL</span><span class="token comment" spellcheck="true">## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'</span><span class="token comment" spellcheck="true"># url: https://shw2018.github.io/</span><span class="token key atrule">url</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//sunhwee.com<span class="token key atrule">root</span><span class="token punctuation">:</span> /<span class="token key atrule">permalink</span><span class="token punctuation">:</span> <span class="token punctuation">:</span>year/<span class="token punctuation">:</span>month/<span class="token punctuation">:</span>day/<span class="token punctuation">:</span>title/<span class="token key atrule">permalink_defaults</span><span class="token punctuation">:</span></code></pre><p>执行完hexo g命令之后就会在网站根目录生成sitemap.xml文件和baidusitemap.xml文件，可以通过：<a href="https://sunhwee.com/baidusitemap.xml">https://sunhwee.com/baidusitemap.xml</a>, 查看该文件是否生成，其中sitemap.xml文件是搜索引擎通用的文件，baidusitemap.xml是百度专用的sitemap文件。</p><h4 id="1-1-3-向百度提交链接"><a href="#1-1-3-向百度提交链接" class="headerlink" title="1.1.3 向百度提交链接"></a>1.1.3 向百度提交链接</h4><p>然后我们就可以将我们生成的sitemap文件提交给百度，还是在百度站长平台，找到链接提交，这里我们可以看到有两种提交方式，自动提交和手动提交，自动提交又分为主动推送、自动推送和sitemap</p><p>如何选择链接提交方式</p><p>主动推送：最为快速的提交方式，推荐您将站点当天新产出链接立即通过此方式推送给百度，以保证新链接可以及时被百度收录。<br>自动推送：最为便捷的提交方式，请将自动推送的js代码部署在站点的每一个页面源代码中，部署代码的页面在每次被浏览时，链接会被自动推送给百度。可以与主动推送配合使用。<br>sitemap：您可以定期将网站链接放到sitemap中，然后将sitemap提交给百度。百度会周期性的抓取检查您提交的sitemap，对其中的链接进行处理，但收录速度慢于主动推送。<br>手动提交：一次性提交链接给百度，可以使用此种方式。<br>一般主动提交比手动提交效果好，这里介绍主动提交的三种方法</p><p>从效率上来说：</p><p>主动推送&gt;自动推送&gt;sitemap</p><p>连接提交<br>连接提交</p><h5 id="1-1-3-1-设置主动推送"><a href="#1-1-3-1-设置主动推送" class="headerlink" title="1.1.3.1 设置主动推送"></a>1.1.3.1 设置主动推送</h5><p>安装插件hexo-baidu-url-submit</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-baidu-url-submit --save</code></pre><p>然后再根目录的配置文件中新增字段</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">baidu_url_submit</span><span class="token punctuation">:</span>  <span class="token key atrule">count</span><span class="token punctuation">:</span> <span class="token number">80             </span><span class="token comment" spellcheck="true"># 提交最新的一个链接</span>  <span class="token key atrule">host</span><span class="token punctuation">:</span> www.sunhwee.com <span class="token comment" spellcheck="true"># 在百度站长平台中注册的域名</span>  <span class="token key atrule">token</span><span class="token punctuation">:</span> xxxxxxxxxxxxxx <span class="token comment" spellcheck="true"># 请注意这是您的秘钥， 所以请不要把博客源代码发布在公众仓库里!</span>  <span class="token key atrule">path</span><span class="token punctuation">:</span> baidu_urls.txt  <span class="token comment" spellcheck="true"># 文本文档的地址， 新链接会保存在此文本文档里</span></code></pre><p>再加入新的deploy：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">deploy</span><span class="token punctuation">:</span><span class="token punctuation">-</span> <span class="token key atrule">type</span><span class="token punctuation">:</span> baidu_url_submitter</code></pre><p>如图所示：</p><p>注意,这里多个 type 的写法应该这么写**,前面那个 type 是我推送到 Github 与 Coding的page页面的配置,后面再讲这个。</p><p>密钥的获取位置在网页抓取中的链接提交这一块,如下所示:</p><p>token获取<br>token获取<br>这样执行hexo deploy的时候，新的链接就会被推送了。</p><p>推送成功时,会有如下终端提示</p><p>主动推送成功提示<br>主动推送成功提示<br>各种不同的推送反馈字段说明在这里查看,一般来说,推送失败基本都是地址不相符造成的,我们只需对比baidu_url_submit在public中生成的baidu_urls.txt的地址,与自己填写在host字段中的地址对比看是否一样即可。</p><h5 id="1-1-3-2-设置自动推送"><a href="#1-1-3-2-设置自动推送" class="headerlink" title="1.1.3.2 设置自动推送"></a>1.1.3.2 设置自动推送</h5><p>在主题配置文件下设置,将baidu_push设置为true:</p><pre class=" language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># Enable baidu push so that the blog will push the url to baidu automatically which is very helpful for SEO</span><span class="token key atrule">baidu_push</span><span class="token punctuation">:</span> <span class="token boolean important">true</span></code></pre><p>然后主题文件目录加入下面代码，一般在目录/themes/matery/layout/_partial中的head.ejs中加入下面js代码（有可能你的目录不是这样，原理类似），这样全站都有了：</p><pre class=" language-js"><code class="language-js"><span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>baidu_push<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">></span>    <span class="token operator">&lt;</span>script<span class="token operator">></span>        <span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">var</span> bp <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'script'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">var</span> curProtocol <span class="token operator">=</span> window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>protocol<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">':'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>curProtocol <span class="token operator">===</span> <span class="token string">'https'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                bp<span class="token punctuation">.</span>src <span class="token operator">=</span> <span class="token string">'https://zz.bdstatic.com/linksubmit/push.js'</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>            <span class="token keyword">else</span> <span class="token punctuation">{</span>                bp<span class="token punctuation">.</span>src <span class="token operator">=</span> <span class="token string">'http://push.zhanzhang.baidu.com/push.js'</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">var</span> s <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">"script"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            s<span class="token punctuation">.</span>parentNode<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>bp<span class="token punctuation">,</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">></span> </code></pre><p>这样每次访问博客中的页面就会自动向百度提交sitemap</p><h5 id="1-1-3-3-sitemap方式"><a href="#1-1-3-3-sitemap方式" class="headerlink" title="1.1.3.3 sitemap方式"></a>1.1.3.3 sitemap方式</h5><p>将我们上一步生成的sitemap文件提交到百度就可以了~</p><p>将sitemap提交到百度<br>将sitemap提交到百度</p><p>我记得被百度收录过程还是蛮久的，一度让我以为我的方法有问题，提交链接在站长工具中有显示大概是有两天的时候，站点被百度收录大概花了半个月= =，让大家看一下现在的成果<br>在百度搜索site:sunhwee.com已经可以搜索到结果<br>站点已被百度收录<br>站点已被百度收录</p><p>在搜索框输入域名也可以找到站点<br>站点已被百度收录<br>站点已被百度收录</p><p>输入关键字的名字也可以在第二页就找到呢，好开森~<br>站点已被百度收录<br>站点已被百度收录</p><h3 id="1-2-让google收录你的站点"><a href="#1-2-让google收录你的站点" class="headerlink" title="1.2 让google收录你的站点"></a>1.2 让google收录你的站点</h3><h4 id="1-2-1-操作步骤"><a href="#1-2-1-操作步骤" class="headerlink" title="1.2.1 操作步骤"></a>1.2.1 操作步骤</h4><p>相比于百度，google的效率实在不能更快，貌似十分钟左右站点就被收录了，其实方法是和百度是一样的。</p><p>google站点平台：<a href="https://www.google.com/webmasters/">https://www.google.com/webmasters/</a></p><p>注册账号<br>验证站点<br>提交sitemap<br>向 google 添加 sitemap 后: 进入 Google Search Console - 抓取 - 站点地图,点击「添加/测试站点地图」,输入你的博客网址. 若无报错则站点地图提交成功</p><p>sitemap提交成功<br>sitemap提交成功<br>一步一步来就好，过不了过久就可以被google收录了</p><p>站点已被google收录<br>站点已被google收录<br>站点已被google收录<br>站点已被google收录<br>站点已被google收录<br>站点已被google收录</p><h4 id="1-2-2-提交-robots-txt"><a href="#1-2-2-提交-robots-txt" class="headerlink" title="1.2.2 提交 robots.txt:"></a>1.2.2 提交 robots.txt:</h4><p>robots.txt 是一种存放于网站根目录下的 ASCII 编码的文本文件，它的作用是告诉搜索引擎此网站中哪些内容是可以被爬取的，哪些是禁止爬取的。robots.txt 放在博客目录下的 source 文件夹中，博客生成后在站点目录 /public/ 下。</p><p>我的 robots.txt 文件内容如下：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">User-agent</span><span class="token punctuation">:</span> *<span class="token key atrule">Allow</span><span class="token punctuation">:</span> /<span class="token key atrule">Allow</span><span class="token punctuation">:</span> /archives/<span class="token key atrule">Allow</span><span class="token punctuation">:</span> /categories/<span class="token key atrule">Allow</span><span class="token punctuation">:</span> /about/<span class="token key atrule">Disallow</span><span class="token punctuation">:</span> /js/<span class="token key atrule">Disallow</span><span class="token punctuation">:</span> /css/<span class="token key atrule">Disallow</span><span class="token punctuation">:</span> /fonts/<span class="token key atrule">Disallow</span><span class="token punctuation">:</span> /vendors/</code></pre><p>robots.txt 文件更新至网站后可进入 Google Search Console - 抓取 - robots.txt 测试工具进行测试。</p><p>这里部分参考自Hexo博客搜索 SEO优化-谷歌篇</p><h3 id="1-3-让其他搜索引擎收录你的站点"><a href="#1-3-让其他搜索引擎收录你的站点" class="headerlink" title="1.3 让其他搜索引擎收录你的站点"></a>1.3 让其他搜索引擎收录你的站点</h3><p>除了百度和google两大搜索引擎，还有搜狗、360等其他的搜索引擎，流程都是一样的，大家就自行选择添加哈，这里就不再赘述了~</p><h3 id="1-4-优化你的url"><a href="#1-4-优化你的url" class="headerlink" title="1.4 优化你的url"></a>1.4 优化你的url</h3><p>seo搜索引擎优化认为，网站的最佳结构是用户从首页点击三次就可以到达任何一个页面，但是我们使用hexo编译的站点打开文章的url是：sitename/year/mounth/day/title四层的结构，这样的url结构很不利于seo，爬虫就会经常爬不到我们的文章，于是，我们需要优化一下网站文章url</p><p>方案一：</p><p>我们可以将url直接改成sitename/title的形式，并且title最好是用英文，在根目录的配置文件下修改permalink如下：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">url</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//sunhwee.com<span class="token key atrule">root</span><span class="token punctuation">:</span> /<span class="token key atrule">permalink</span><span class="token punctuation">:</span> <span class="token punctuation">:</span>title.html<span class="token key atrule">permalink_defaults</span><span class="token punctuation">:</span></code></pre><p>方案二：</p><p>使用插件优化url</p><p>插件hexo-abbrlink实现了这个功能，它将原来的URL地址重新进行了进制转换和再编码。</p><p>安装hexo-abbrlink。</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-abbrlink --save</code></pre><p>配置博客根目录下的_config.yaml文件。</p><pre class=" language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># permalink: :title/</span><span class="token key atrule">permalink</span><span class="token punctuation">:</span> archives/<span class="token punctuation">:</span>abbrlink.html<span class="token key atrule">abbrlink</span><span class="token punctuation">:</span>  <span class="token key atrule">alg</span><span class="token punctuation">:</span> crc32  <span class="token comment" spellcheck="true"># 算法：crc16(default) and crc32</span>  <span class="token key atrule">rep</span><span class="token punctuation">:</span> hex    <span class="token comment" spellcheck="true"># 进制：dec(default) and hex</span></code></pre><p>运行hexo clean和hexo g命令来重新生成文件看看，可以清楚的看到，URL结构成功变为了3层。</p><h3 id="1-5-其他seo优化"><a href="#1-5-其他seo优化" class="headerlink" title="1.5 其他seo优化"></a>1.5 其他seo优化</h3><p>seo优化应该说是一个收益延迟的行为，可能你做的优化短期内看不到什么效果，但是一定要坚持，seo优化也是有很深的可以研究的东西，从我们最初的网站设计，和最基础的标签的选择都有很大的关系，网站设计就如我们刚刚说的，要让用户点击三次可以到达网站的任何一个页面，要增加高质量的外链，增加相关推荐（比如说我们经常见到右侧本站的最高阅读的排名列表），然后就是给每一个页面加上keyword和描述</p><p>在代码中，我们应该写出能让浏览器识别的语义化html，这样有助于爬虫抓取更多的有效信息：爬虫依赖于标签来确定上下文和各个关键字的权重；并且对外链设置nofollow标签，避免spider爬着爬着就爬出去了（减少网站的跳出率），并且我们要尽量在一些比较大的网站增加我们站点的曝光率，因为spider会经常访问大站，比如我们在掘金等技术社区发表文章中带有我们的站点，这样spider是很有可能爬到我们中的站点的，so….</p><p>网站外链的推广度、数量和质量<br>网站的内链足够强大<br>网站的原创质量<br>网站的年龄时间<br>网站的更新频率（更新次数越多越好）<br>网站的服务器<br>网站的流量：流量越高网站的权重越高<br>网站的关键词排名：关键词排名越靠前，网站的权重越高<br>网站的收录数量：网站百度收录数量越多，网站百度权重越高<br>网站的浏览量及深度：用户体验越好，网站的百度权重越高</p><h2 id="2-优化代码块样式"><a href="#2-优化代码块样式" class="headerlink" title="2.优化代码块样式"></a>2.优化代码块样式</h2><p>由于代码高亮插件prism_plugin的样式没有行号显示和代码块整体复制功能，不是很方便，为了优化观感和易用性，我们可以对其进行修改：<br>待续……</p><h3 id="2-1-给代码块开启行号"><a href="#2-1-给代码块开启行号" class="headerlink" title="2.1 给代码块开启行号"></a>2.1 给代码块开启行号</h3><p>我们在配置文件.yaml中找到prism_plugin配置项line_number: false（# default false）改为true，开启行号，但是在我们这个matery主题中中是无效的，有bug需要改一下matery.css样式参数,在第95行位置将：</p><pre class=" language-css"><code class="language-css"><span class="token selector">pre </span><span class="token punctuation">{</span>    <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">1.5</span>rem <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">1</span>rem <span class="token number">0</span> <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token hexcode">#272822</span><span class="token punctuation">;</span>    <span class="token property">overflow</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">0.35</span>rem<span class="token punctuation">;</span>    <span class="token property">tab-size</span><span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>改为：</p><pre class=" language-css"><code class="language-css"><span class="token selector">pre </span><span class="token punctuation">{</span>    <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">1.5</span>rem <span class="token number">1.5</span>rem <span class="token number">1.5</span>rem <span class="token number">3.3</span>rem <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">1</span>rem <span class="token number">0</span> <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token hexcode">#272822</span><span class="token punctuation">;</span>    <span class="token property">overflow</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">0.35</span>rem<span class="token punctuation">;</span>    <span class="token property">tab-size</span><span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>注释掉紧接着的code代码块里面的font-size项，如下：</p><pre class=" language-css"><code class="language-css"><span class="token selector">code </span><span class="token punctuation">{</span>    <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">1</span>px <span class="token number">5</span>px<span class="token punctuation">;</span>    <span class="token property">font-family</span><span class="token punctuation">:</span> Inconsolata, Monaco, Consolas, <span class="token string">'Courier New'</span>, Courier, monospace<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*font-size: 0.91rem;*/</span>    <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#e96900</span><span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token hexcode">#f8f8f8</span><span class="token punctuation">;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">2</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>好了这下可以显示行号了，如图：</p><p>代码块显示行号<br>代码块显示行号</p><h3 id="2-2-添加代码块复制功能"><a href="#2-2-添加代码块复制功能" class="headerlink" title="2.2 添加代码块复制功能"></a>2.2 添加代码块复制功能</h3><h2 id="3-优化网站加载速度"><a href="#3-优化网站加载速度" class="headerlink" title="3. 优化网站加载速度"></a>3. 优化网站加载速度</h2><h3 id="3-1-优化图片加载"><a href="#3-1-优化图片加载" class="headerlink" title="3.1 优化图片加载"></a>3.1 优化图片加载</h3><p>issue问题：<br>优化网站加载逻辑问题：图片最后加载，加入图片懒加载方法</p><p>hexo-lazyload-image的作用原理是讲你博客里面img标签的src属性替换为一个loading image，把真实的图片地址放在data-origin属性下面。然后当你的网页翻到那张图片时（也就是图片在窗口中完全可见时），他会有一段js用data-origin的内容替换src，打到懒加载的目的。</p><p>一般情况下懒加载和gallery插件会发生冲突，比如按照我上面所说，最终结果就会变成，可能只有第一张图片在gallery中打开是原图，右翻左翻都会是那张loading image，需要你掌握js，可以修改matery.js里面的内容，甚至可能换一个gallery，比如photosiwpe之类的</p><p>解决方法：修改/themes/matery/source/js中的matery.js文件</p><p>第103行：</p><pre class=" language-js"><code class="language-js"><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#articleContent, #myGallery'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">lightGallery</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    selector<span class="token punctuation">:</span> <span class="token string">'.img-item'</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">// 启用字幕</span>    subhtmlSelectorRelative<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>    showThumbByDefault<span class="token punctuation">:</span> <span class="token boolean">false</span>   <span class="token comment" spellcheck="true">//这句加上</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>后面加上：</p><pre class=" language-js"><code class="language-js"><span class="token function">$</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">'img[data-original]'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">parent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">"href"</span><span class="token punctuation">,</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">"data-original"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>再装个插件，<a href="https://github.com/Troy-Yang/hexo-lazyload-image">https://github.com/Troy-Yang/hexo-lazyload-image</a><br>在博客根目录配置.yaml文件加入对应字段，如下：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># lazyload configuration  2019.08.23</span><span class="token key atrule">lazyload</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true </span>  <span class="token key atrule">onlypost</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">loadingImg</span><span class="token punctuation">:</span>     <span class="token comment" spellcheck="true"># eg ./images/loading.gif</span></code></pre><p>好了，这样实现了博客网站的图片懒加载。</p><h3 id="3-2-Gulp实现代码压缩"><a href="#3-2-Gulp实现代码压缩" class="headerlink" title="3.2 Gulp实现代码压缩"></a>3.2 Gulp实现代码压缩</h3><p>Gulp实现代码压缩，以提升网页加载速度。</p><p>1 首先我们需要安装Gulp插件和5个功能模块，依次运行下面的两条命令。</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> gulp --save  <span class="token comment" spellcheck="true">#安装gulp</span><span class="token comment" spellcheck="true"># 安装功能模块</span><span class="token function">npm</span> <span class="token function">install</span> gulp-htmlclean gulp-htmlmin gulp-minify-css gulp-uglify gulp-imagemin --save<span class="token comment" spellcheck="true"># 额外的功能模块</span><span class="token function">npm</span> <span class="token function">install</span> gulp-debug gulp-clean-css gulp-changed gulp-if gulp-plumber gulp-babel babel-preset-es2015 del --save</code></pre><p>2 接下来在博客的根目录下新建gulpfile.js文件，并复制下面的内容到文件中。</p><pre class=" language-js"><code class="language-js"><span class="token keyword">var</span> gulp <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"gulp"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> debug <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"gulp-debug"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> cleancss <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"gulp-clean-css"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//css压缩组件</span><span class="token keyword">var</span> uglify <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"gulp-uglify"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//js压缩组件</span><span class="token keyword">var</span> htmlmin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"gulp-htmlmin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//html压缩组件</span><span class="token keyword">var</span> htmlclean <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"gulp-htmlclean"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//html清理组件</span><span class="token keyword">var</span> imagemin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"gulp-imagemin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//图片压缩组件</span><span class="token keyword">var</span> changed <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"gulp-changed"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//文件更改校验组件</span><span class="token keyword">var</span> gulpif <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"gulp-if"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//任务 帮助调用组件</span><span class="token keyword">var</span> plumber <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"gulp-plumber"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//容错组件（发生错误不跳出任务，并报出错误内容）</span><span class="token keyword">var</span> isScriptAll <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//是否处理所有文件，(true|处理所有文件)(false|只处理有更改的文件)</span><span class="token keyword">var</span> isDebug <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//是否调试显示 编译通过的文件</span><span class="token keyword">var</span> gulpBabel <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"gulp-babel"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> es2015Preset <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"babel-preset-es2015"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> del <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"del"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> Hexo <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"hexo"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> hexo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Hexo</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 初始化一个hexo对象</span><span class="token comment" spellcheck="true">// 清除public文件夹</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">"clean"</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token function">del</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"public/**/*"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 下面几个跟hexo有关的操作，主要通过hexo.call()去执行，注意return</span><span class="token comment" spellcheck="true">// 创建静态页面 （等同 hexo generate）</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">"generate"</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> hexo<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> hexo      <span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token string">"generate"</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>        watch<span class="token punctuation">:</span> <span class="token boolean">false</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span>      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> hexo<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span>      <span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> hexo<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 启动Hexo服务器</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">"server"</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> hexo    <span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">return</span> hexo<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token string">"server"</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 部署到服务器</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">"deploy"</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> hexo<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> hexo      <span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token string">"deploy"</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>        watch<span class="token punctuation">:</span> <span class="token boolean">false</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span>      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> hexo<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span>      <span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> hexo<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 压缩public目录下的js文件</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">"compressjs"</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> gulp    <span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"./public/**/*.js"</span><span class="token punctuation">,</span> <span class="token string">"!./public/libs/**"</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">/</span><span class="token operator">/</span>排除的js    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">gulpif</span><span class="token punctuation">(</span><span class="token operator">!</span>isScriptAll<span class="token punctuation">,</span> <span class="token function">changed</span><span class="token punctuation">(</span><span class="token string">"./public"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">gulpif</span><span class="token punctuation">(</span>isDebug<span class="token punctuation">,</span> <span class="token function">debug</span><span class="token punctuation">(</span><span class="token punctuation">{</span> title<span class="token punctuation">:</span> <span class="token string">"Compress js:"</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">plumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>      <span class="token function">gulpBabel</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        presets<span class="token punctuation">:</span> <span class="token punctuation">[</span>es2015Preset<span class="token punctuation">]</span> <span class="token operator">/</span><span class="token operator">/</span> es5检查机制      <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">uglify</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span><span class="token operator">/</span><span class="token function">调用压缩组件方法uglify</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>对合并的文件进行压缩    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">"./public"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token operator">/</span><span class="token operator">/</span>输出到目标目录<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">/</span><span class="token operator">/</span> 压缩<span class="token keyword">public</span>目录下的css文件gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">"compresscss"</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">var</span> option <span class="token operator">=</span> <span class="token punctuation">{</span>    rebase<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>    <span class="token operator">/</span><span class="token operator">/</span>advanced<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>               <span class="token operator">/</span><span class="token operator">/</span>类型：Boolean 默认：<span class="token boolean">true</span> <span class="token punctuation">[</span>是否开启高级优化（合并选择器等）<span class="token punctuation">]</span>    compatibility<span class="token punctuation">:</span> <span class="token string">"ie7"</span> <span class="token operator">/</span><span class="token operator">/</span>保留ie7及以下兼容写法 类型：String 默认：<span class="token string">''</span>or<span class="token string">'*'</span> <span class="token punctuation">[</span>启用兼容模式； <span class="token string">'ie7'</span>：IE7兼容模式，<span class="token string">'ie8'</span>：IE8兼容模式，<span class="token string">'*'</span>：IE9<span class="token operator">+</span>兼容模式<span class="token punctuation">]</span>    <span class="token operator">/</span><span class="token operator">/</span>keepBreaks<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>             <span class="token operator">/</span><span class="token operator">/</span>类型：Boolean 默认：<span class="token boolean">false</span> <span class="token punctuation">[</span>是否保留换行<span class="token punctuation">]</span>    <span class="token operator">/</span><span class="token operator">/</span>keepSpecialComments<span class="token punctuation">:</span> <span class="token string">'*'</span>      <span class="token operator">/</span><span class="token operator">/</span>保留所有特殊前缀 当你用autoprefixer生成的浏览器前缀，如果不加这个参数，有可能将会删除你的部分前缀  <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> gulp    <span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"./public/**/*.css"</span><span class="token punctuation">,</span> <span class="token string">"!./public/**/*.min.css"</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//排除的css</span>    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">gulpif</span><span class="token punctuation">(</span><span class="token operator">!</span>isScriptAll<span class="token punctuation">,</span> <span class="token function">changed</span><span class="token punctuation">(</span><span class="token string">"./public"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">gulpif</span><span class="token punctuation">(</span>isDebug<span class="token punctuation">,</span> <span class="token function">debug</span><span class="token punctuation">(</span><span class="token punctuation">{</span> title<span class="token punctuation">:</span> <span class="token string">"Compress css:"</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">plumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">cleancss</span><span class="token punctuation">(</span>option<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">"./public"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 压缩public目录下的html文件</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">"compresshtml"</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">var</span> cleanOptions <span class="token operator">=</span> <span class="token punctuation">{</span>    protect<span class="token punctuation">:</span> <span class="token regex">/&lt;\!--%fooTemplate\b.*?%-->/g</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//忽略处理</span>    unprotect<span class="token punctuation">:</span> <span class="token operator">/</span><span class="token operator">&lt;</span>script <span class="token punctuation">[</span><span class="token operator">^</span><span class="token operator">></span><span class="token punctuation">]</span><span class="token operator">*</span>\btype<span class="token operator">=</span><span class="token string">"text\/x-handlebars-template"</span><span class="token punctuation">[</span>\s\S<span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">?</span><span class="token operator">&lt;</span>\<span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">/</span>gi <span class="token comment" spellcheck="true">//特殊处理</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token keyword">var</span> minOption <span class="token operator">=</span> <span class="token punctuation">{</span>    collapseWhitespace<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//压缩html</span>    collapseBooleanAttributes<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//省略布尔属性的值  &lt;input checked="true"/> ==> &lt;input /></span>    removeEmptyAttributes<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//删除所有空格作属性值    &lt;input id="" /> ==> &lt;input /></span>    removeScriptTypeAttributes<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//删除&lt;script>的type="text/javascript"</span>    removeStyleLinkTypeAttributes<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//删除&lt;style>和&lt;link>的type="text/css"</span>    removeComments<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//清除html注释</span>    minifyjs<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//压缩页面js</span>    minifycss<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//压缩页面css</span>    minifyURLs<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token comment" spellcheck="true">//替换页面URL</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> gulp    <span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token string">"./public/**/*.html"</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">gulpif</span><span class="token punctuation">(</span>isDebug<span class="token punctuation">,</span> <span class="token function">debug</span><span class="token punctuation">(</span><span class="token punctuation">{</span> title<span class="token punctuation">:</span> <span class="token string">"Compress html:"</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">plumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">htmlclean</span><span class="token punctuation">(</span>cleanOptions<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">htmlmin</span><span class="token punctuation">(</span>minOption<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">"./public"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 压缩 public/uploads 目录内图片</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">"compressImage"</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">var</span> option <span class="token operator">=</span> <span class="token punctuation">{</span>    optimizationLevel<span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//类型：Number  默认：3  取值范围：0-7（优化等级）</span>    progressive<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//类型：Boolean 默认：false 无损压缩jpg图片</span>    interlaced<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//类型：Boolean 默认：false 隔行扫描gif进行渲染</span>    multipass<span class="token punctuation">:</span> <span class="token boolean">false</span> <span class="token comment" spellcheck="true">//类型：Boolean 默认：false 多次优化svg直到完全优化</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> gulp    <span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token string">"./public/medias/**/*.*"</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">gulpif</span><span class="token punctuation">(</span><span class="token operator">!</span>isScriptAll<span class="token punctuation">,</span> <span class="token function">changed</span><span class="token punctuation">(</span><span class="token string">"./public/medias"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">gulpif</span><span class="token punctuation">(</span>isDebug<span class="token punctuation">,</span> <span class="token function">debug</span><span class="token punctuation">(</span><span class="token punctuation">{</span> title<span class="token punctuation">:</span> <span class="token string">"Compress Images:"</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">plumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">imagemin</span><span class="token punctuation">(</span>option<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">"./public"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 执行顺序： 清除public目录 -> 产生原始博客内容 -> 执行压缩混淆 -> 部署到服务器</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span>  <span class="token string">"build"</span><span class="token punctuation">,</span>  gulp<span class="token punctuation">.</span><span class="token function">series</span><span class="token punctuation">(</span>    <span class="token string">"clean"</span><span class="token punctuation">,</span>    <span class="token string">"generate"</span><span class="token punctuation">,</span>    <span class="token string">"compresshtml"</span><span class="token punctuation">,</span>    <span class="token string">"compresscss"</span><span class="token punctuation">,</span>    <span class="token string">"compressjs"</span><span class="token punctuation">,</span>    <span class="token string">"compressImage"</span><span class="token punctuation">,</span>    gulp<span class="token punctuation">.</span><span class="token function">parallel</span><span class="token punctuation">(</span><span class="token string">"deploy"</span><span class="token punctuation">)</span>  <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 默认任务</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span>  <span class="token string">"default"</span><span class="token punctuation">,</span>  gulp<span class="token punctuation">.</span><span class="token function">series</span><span class="token punctuation">(</span>    <span class="token string">"clean"</span><span class="token punctuation">,</span>    <span class="token string">"generate"</span><span class="token punctuation">,</span>    gulp<span class="token punctuation">.</span><span class="token function">parallel</span><span class="token punctuation">(</span><span class="token string">"compresshtml"</span><span class="token punctuation">,</span> <span class="token string">"compresscss"</span><span class="token punctuation">,</span> <span class="token string">"compressImage"</span><span class="token punctuation">,</span> <span class="token string">"compressjs"</span><span class="token punctuation">)</span>  <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//Gulp4最大的一个改变就是gulp.task函数现在只支持两个参数，分别是任务名和运行任务的函数</span></code></pre><p>3 最后 hexo clean &amp;&amp; hexo g &amp;&amp; gulp &amp;&amp; hexo d 就可以了。</p><p>注意，很可能你会运行到第三步，也就是运行gulp压缩命令时会报错，如图所示：</p><p>gulp运行错误<br>gulp运行错误<br>那是因为gulp安装的本地版本和hexo自带的版本不对应导致，第三步gulp压缩可以用下面命令强制使用本地版本：</p><pre class=" language-bash"><code class="language-bash">node ./node_modules/gulp/bin/gulp.js</code></pre><h3 id="3-3-Github-amp-Coding-Pages-双部署"><a href="#3-3-Github-amp-Coding-Pages-双部署" class="headerlink" title="3.3 Github &amp; Coding Pages 双部署"></a>3.3 Github &amp; Coding Pages 双部署</h3><p>Github &amp; Coding Pages 双部署,对国内,国外用户进行分流访问,以提升网站的访问速度.<br>Github Pages 的部署前面已经说了,这里就讲一讲 Coding Pages 如何部署.其实与 Github Pages 也类似,先到coding官网注册,创建一个与用户名同名的仓库,添加仓库地址到配置文件中,在根目录_config.yaml对应地方添加如下:</p><pre class=" language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># Deployment</span><span class="token comment" spellcheck="true">## Docs: https://hexo.io/docs/deployment.html</span><span class="token key atrule">deploy</span><span class="token punctuation">:</span><span class="token punctuation">-</span> <span class="token key atrule">type</span><span class="token punctuation">:</span> git  <span class="token key atrule">repo</span><span class="token punctuation">:</span>    <span class="token key atrule">github</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//github.com/shw2018/shw2018.github.io.git  <span class="token comment" spellcheck="true"># github 仓库地址</span>    <span class="token key atrule">coding</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//git.dev.tencent.com/sunhwee/sunhwee.git   <span class="token comment" spellcheck="true"># coding 仓库地址</span>  <span class="token key atrule">branch</span><span class="token punctuation">:</span> master<span class="token punctuation">-</span> <span class="token key atrule">type</span><span class="token punctuation">:</span> baidu_url_submitter</code></pre><p>把本地生成 SSH 公匙添加到 Coding 这一步看我前面的教程,原理类似.</p><p>然后 hexo clean &amp;&amp;　hexo g &amp;&amp; hexo d 部署上去就是了．</p><p>当然，部署上去后，你需要开启 page 服务.</p><p>你可以在 pages 设置里面自定义域名，区域名解析控制台，添加两条 CNAME 记录，将域名指向RepoName.coding.me就可以的，申请 ssl 证书，强制开启https</p><p>可能遇到的问题:</p><p>［coding pages 申请ssl 证书总是提示：错误！］<br>这里提一句，如果你是github pages 和 coding pages双部署，用同一个域名的话，可以将xxx.github.io 解析成 境外, xxx.coding.me 解析成 默认,这个时候如果你之前就申请过 ssl 证书的话，再在 coding 里面申请 ssl证书会一直提示 失败,解决办法：</p><p>先去域名解析控制台，将境外解析的两条 CNAME 记录 暂停,过个五六分钟，回到 coding 点击申请 ssl,很快就会提示，申请成功！</p><p>刚好我过程中遇到了这个问题，所以把它记下来，方便后面的小伙伴看到．</p><h2 id="3-一些注意事项"><a href="#3-一些注意事项" class="headerlink" title="3. 一些注意事项"></a>3. 一些注意事项</h2><h3 id="3-1-备份博客源文件"><a href="#3-1-备份博客源文件" class="headerlink" title="3.1 备份博客源文件"></a>3.1 备份博客源文件</h3><p>有时候我们想换一台电脑继续写博客，最简单的方法就是把博客整个目录拷贝过去，就是这么暴力。不过，这种方法有个问题就是要是那天电脑崩了，本地源文件丢失了，比较麻烦，所以这时候就可以将博客目录下的所有源文件都上传到github上面。</p><p>首先在github博客仓库下新建一个分支hexo，然后git clone到本地，把.git文件夹拿出来，放在博客根目录下。</p><p>然后git branch -b hexo切换到hexo分支，然后git add .，然后git commit -m “xxx”，最后git push origin hexo提交就行了。</p><p>具体效果可以看我的博客源文件仓库：传送门。</p><p>大家也可以先用下文hexo安装方法安装完hexo，然后直接git clone -b hexo <a href="https://github.com/shw2018/shw2018.github.io.git%E5%85%8B%E9%9A%86%E6%88%91%E7%9A%84%E6%89%80%E6%9C%89%E6%BA%90%E6%96%87%E4%BB%B6%EF%BC%8C%E8%BF%99%E6%98%AF%E6%88%91%E7%9B%AE%E5%89%8D%E4%BF%AE%E6%94%B9%E5%AE%8C%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%B2%A1bug%E7%9A%84%E5%AE%9A%E5%88%B6%E5%8C%96%E7%9A%84%E5%8D%9A%E5%AE%A2%EF%BC%8C%E5%8F%AF%E4%BB%A5%E7%9B%B4%E6%8E%A5%E6%8B%BF%E6%9D%A5%E7%94%A8%E3%80%82">https://github.com/shw2018/shw2018.github.io.git克隆我的所有源文件，这是我目前修改完的基本没bug的定制化的博客，可以直接拿来用。</a></p><p>持续更新中…，如果遇到问题欢迎联系我，在文章最后评论区【留言和讨论】，当然，欢迎点击文章最后的打赏按键，请博主一杯冰阔乐，笑～</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 博客 </tag>
            
            <tag> 部署 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《HCNA网络技术实验指南》梳理</title>
      <link href="/2022/03/23/hcna/"/>
      <url>/2022/03/23/hcna/</url>
      
        <content type="html"><![CDATA[<p>  本文章将以《HCNA网络技术实验指南》的章节顺序，针对本书的核心内容进行整理，并舍弃不必要的讲解和内容，各章节的重复内容也会删减掉，请灵活查看。<br>  本书lab内容请到<a href="https://fishpond.vip/2022/04/15/hcnalab/">《HCNA网络技术实验指南》实验</a>查看。</p><h2 id="第一章-eNSP及VRP基础操作"><a href="#第一章-eNSP及VRP基础操作" class="headerlink" title="第一章 eNSP及VRP基础操作"></a>第一章 eNSP及VRP基础操作</h2><h3 id="了解部分"><a href="#了解部分" class="headerlink" title="了解部分"></a>了解部分</h3><p>本章介绍了ensp、华为vrp平台的基本操作方法，ip配置、telnet登陆、stelnet（ssh）登陆、ftp等基本配置和常用命令；本文暂不整理ssh和ftp两项配置。</p><h4 id="本章基本认知"><a href="#本章基本认知" class="headerlink" title="本章基本认知"></a>本章基本认知</h4><p>操作视图：操作视图分为用户视图，系统视图，接口视图等（后续补充）。<br>用户视图：&lt;Huawei&gt;<br>系统视图：[Huawei]<br>接口视图：[Huawei-GigabitEthernet0/0/0]<br>TAB键：自动联想补全当前代码<br>?：显示该视图下或该段命令后或该段字母开头的后面可以跟哪些命令以及对应命令的简单描述</p><h3 id="命令部分"><a href="#命令部分" class="headerlink" title="命令部分"></a>命令部分</h3><p>[undo] shutdown：[开启]关闭<br>display version：显示系统软件版本及硬件信息；在用户视图下输入<br>简写：dis ver<br>system-viem：切换到系统视图<br>简写：sys<br>quit：退回到上一个视图，可使用组合键Ctrl+Z。<br>简写：q<br>interface &lt;端口号&gt;：跳转到对应端口的接口视图下<br>ip address &lt;IP地址&gt; &lt;子网掩码&gt;：为当前接口配置IP地址和子网掩码，子网掩码可以是完整的，如255.255.255.0，也可以用24来代替，24为完整掩码的连续二进制1的个数<br>简写：ip add &lt;IP地址&gt; &lt;子网掩码&gt;<br>return：直接退回到用户视图<br>简写：<br>display hotkey：查看已定义、未定义和系统保留的快捷键情况<br>简写：<br>sysname &lt;英文字母&gt;：修改当前设备名称<br>clock datetime：设置当前设备的时间和日期<br>clock timezone：设置当前设备所在时区</p><pre class=" language-md"><code class="language-md">\<R1>clock datetime 12:00:00 2022-03-23\<R1>clock timezone BJ add 08:00:00</code></pre><blockquote><p>因为系统默认时间为伦敦时区，而北京处于+8小时时区，时间偏移量增加了8，因此，在配置时需加上偏移量8，才能得到预期的北京时区</p></blockquote><p>header login “”：设置登陆时提示文本<br>header shell “”：设置登录成功后的提示文本<br>display current-configuration：查看当前设备配置信息<br>display interface &lt;端口号&gt;：查看该端口的状态信息<br>save：保存当前配置，会提示是否确认，确认输入y回车，不确认输入n回车<br>display ip interface brief：查看接口与ip相关摘要信息，其中：<br>interface为端口号，ip address/mask为对应端口的ip地址和子网掩码，physical为对应接口物理状态，protocol为该接口协议状态<br>display ip routing-table：查看ipv4路由表<br>ping &lt;ip地址&gt;：测试连通性<br>user-interface vty 0 4：<br>authentication-mode password huawei：<br>display users：<br>set authentication password cipher huawei：<br>user privilege level 1：<br>aaa：<br>local-user admin password cipher hello privilege level 3：<br>local-user admin service-type telnet：<br>authentication-mode aaa：<br>ssh登陆配置P31~34<br>FTP34~39</p><h2 id="第二章-交换机基础配置"><a href="#第二章-交换机基础配置" class="headerlink" title="第二章 交换机基础配置"></a>第二章 交换机基础配置</h2><p>本章介绍了华为交换机的基本配置</p><h3 id="了解部分-1"><a href="#了解部分-1" class="headerlink" title="了解部分"></a>了解部分</h3><p>cmd上：arp -a：查看主机arp表</p><h3 id="命令部分-1"><a href="#命令部分-1" class="headerlink" title="命令部分"></a>命令部分</h3><p>auto duplex full：自动协商全双工模式<br>undo negotiation auto：关闭自动协商功能<br>auto speed 100：自动协商速率100Mbit/s<br>display arp all：查看arp表<br>arp-proxy enable：开启arp代理</p><h2 id="第三章-vlan（虚拟局域网）"><a href="#第三章-vlan（虚拟局域网）" class="headerlink" title="第三章 vlan（虚拟局域网）"></a>第三章 vlan（虚拟局域网）</h2><p>本章介绍了vlan中的access接口、trunk接口、hybird接口，通过单臂路由和三层交换实例讲解了vlan的更深层的使用</p><h3 id="了解部分-2"><a href="#了解部分-2" class="headerlink" title="了解部分"></a>了解部分</h3><p>access类型<br>trunk类型</p><h3 id="命令部分-2"><a href="#命令部分-2" class="headerlink" title="命令部分"></a>命令部分</h3><p>vlan &lt;数字&gt;：创建vlan，id范围为0~4095，通常取1~4094，0和4095为保留值<br>vlan batch &lt;数字1&gt; &lt;数字2&gt;：同时创建两个vlan<br>display vlan：查看vlan信息<br>port link-type access/trunk：配置该端口为access/trunk类型，<br>port default vlan &lt;数字&gt;：将该端口划分到指定vlan中<br>display vlan summary：查看所有vlan的简要信息<br>display port vlan：查看vlan和接口配置信息<br>port trunk allow-pass vlan all:<br>undo port default valn：恢复接口默认vlan<br>port link-type hybrid：修改接口类型为hybrid,华为交换机所有接口默认都是hybrid类型<br>port hybrid untagged/tagged vlan &lt;数字1&gt; &lt;数字2&gt; … &lt;数字n&gt;：转发指定vlan帧时，剥离/添加指定vlan的tag，以untagged/tagged方式发送到PC<br>port hybrid pvid vlan &lt;数字&gt;：设置hybrid类型接口的默认vlan id<br>interface &lt;端口号.n&gt;：<br>dot1q termination vid &lt;数字&gt;：配置子接口<br>arp broadcast enable：<br>interface vlanif &lt;数字&gt;：创建vlanif接口</p><h2 id="第四章-生成树"><a href="#第四章-生成树" class="headerlink" title="第四章 生成树"></a>第四章 生成树</h2><p>本章介绍了stp、rstp和mstp</p><h3 id="了解部分-3"><a href="#了解部分-3" class="headerlink" title="了解部分"></a>了解部分</h3><p>定时器需特别注意</p><h3 id="命令部分-3"><a href="#命令部分-3" class="headerlink" title="命令部分"></a>命令部分</h3><p>stp enable/disable：启用/关闭stp（华为交换机默认启动mstp，除了这两个还有rstp），执行<br>stp mode stp：修改为stp模式<br>display stp：查看生成树协议<br>display stp brief：查看摘要信息<br>stp priority &lt;数字&gt;：更改优先级，默认32768<br>stp root primary：配置主根交换机<br>undo stp priority：删除此设备的优先级配置<br>stp root secondary：配置备份根交换机<br>stp cost 2000：配置接口的代价值为2000<br>undo stp root：删除……<br>sp timer forward-delay 2000：<br>stp bridge-diameter &lt;数字&gt;：配置网络直径<br>stp region-configuration：进入mst域视图<br>region-name &lt;name&gt;：配置mst域名<br>revision-level &lt;number&gt;：配置mstp级别<br>instance &lt;number&gt; vlan &lt;vlan id&gt;：指定vlan映射到指定msti上<br>active region-configuration：激活mst域配置<br>display stp region-configuration：查看交换机当前生效的mst域信息<br>display stp instance &lt;数字&gt; brief：查看默认实例中对应数字的生成树状态和统计摘要信息</p><h2 id="第五章-其他交换技术"><a href="#第五章-其他交换技术" class="headerlink" title="第五章 其他交换技术"></a>第五章 其他交换技术</h2><p>本章介绍了gvrp、smart-link、monitor-link、eth-trunk</p><h3 id="了解部分-4"><a href="#了解部分-4" class="headerlink" title="了解部分"></a>了解部分</h3><p>eth-trunk：手工负载分担、静态lacp</p><h3 id="命令部分-4"><a href="#命令部分-4" class="headerlink" title="命令部分"></a>命令部分</h3><p>gvrp：开启gvrp功能，可在系统视图和接口视图下输入<br>gvrp registration fixed/normal/forbidden：修改gvrp注册模式为fixed/normal/forbidden，默认为normal<br>smart-link group &lt;数字&gt;：<br>smart-link enable：<br>port &lt;端口号&gt; master/slave：配置主接口/备份接口<br>display smart-link group &lt;数字&gt;：查看主备份状态<br>restore enable：开启回切功能，默认60秒<br>timer wtr 30：更改回切时间为30秒<br>port &lt;端口号&gt; uplink/downlink：配置上下行接口<br>timer recover-time 10：<br>interface eth-trunk &lt;数字&gt;：创建eth-trunk接口<br>mode manual laod-balance：指定eth-trunk接口为手工负载分担模式<br>eth-trunk &lt;数字&gt;：将端口划分到该eth-trunk接口下<br>display eth-trunk &lt;数字&gt;：查看eth-trunk接口状态<br>mode lacp-static：指定eth-trunk接口为静态lacp模式<br>lacp priority &lt;数字&gt;：配置lacp的优先级.默认32768,值越小优先级越高</p><h2 id="第六章-静态路由"><a href="#第六章-静态路由" class="headerlink" title="第六章 静态路由"></a>第六章 静态路由</h2><p>本章介绍了静态路由和默认路由，并给出了浮动静态路由和负载均衡的配置实例<br>###<br>负载均衡</p><h3 id="命令部分-5"><a href="#命令部分-5" class="headerlink" title="命令部分"></a>命令部分</h3><p>display ip routing-table:查看ip路由表<br>[undo] ip route-static ip地址 子网掩码 下一跳ip地址/出端口号：[删除]配置静态路由<br>ip route-static 0.0.0.0 0.0.0.0 下一跳ip地址/出端口号：配置默认路由<br>ip route-static ip地址 子网掩码 下一跳ip地址/出端口号 preference 100：在配置静态路由基础上，修改优先级为100（默认60）<br>display IP routing-table protocol static：仅查看静态路由信息<br>tracert ip：查看此设备经过ip的路径</p><h2 id="第七章-RIP"><a href="#第七章-RIP" class="headerlink" title="第七章 RIP"></a>第七章 RIP</h2><p>本章主要掌握rip，并其给出了包括基本配置，认证，汇总，版本兼容，故障排除等多方面特性的配置实例</p><h3 id="了解部分-5"><a href="#了解部分-5" class="headerlink" title="了解部分"></a>了解部分</h3><p>rip：<br>ripv2：<br>rip路由协议及优先级：<br>版本兼容<br>定时器：<br>抑制接口单播更新<br>不连续子网<br>水平分割触发更新<br>rip路由附加度量值<br>故障排查<br>路由引入</p><h3 id="命令部分-6"><a href="#命令部分-6" class="headerlink" title="命令部分"></a>命令部分</h3><p>rip：开启并进入日批进程<br>network ip网段：指定网段给rip<br>debugging rip 1：<br>terminal debugging<br>terminal monitor：<br>undo debugging rip 1<br>undo debug all<br>version 2：启用rip 2版本<br>display default-parameter rip：查看rip默认配置信息<br>summary always：<br>rip summary-address IP地址 子网掩码：手动汇总<br>rip version 2 broadcast：<br>rip version 2 mutlicast：<br>display rip 1 database：<br>timers rip &lt;更新报文时间间隔&gt; &lt;超时计时器时间间隔&gt; &lt;垃圾收集计时器的超时时间间隔&gt;：改变几个定时器的时间间隔<br>preference 90：更改优先级为90<br>silent-interface 端口号：配置成为抑制端口<br>peer IP地址：单播<br>undo rip output/input 端口号：禁止/允许接口发送rip报文<br>ip add ip地址 子网掩码 sub：<br>undo rip split-horizon：关闭水平分割<br>rip poison-reverse：开启毒性逆转功能<br>rip metricin 2：设置接收发送来的路由条目时度量值加2<br>rip metricout 2：设置发送路由条目时度量值加2</p><h2 id="第八章-OSPF"><a href="#第八章-OSPF" class="headerlink" title="第八章 OSPF"></a>第八章 OSPF</h2><p>本章以ospf为主，给出了单区域配置，多区域配置，认证，被动接口等配置实例</p><h3 id="了解部分-6"><a href="#了解部分-6" class="headerlink" title="了解部分"></a>了解部分</h3><p>ospf</p><h3 id="命令部分-7"><a href="#命令部分-7" class="headerlink" title="命令部分"></a>命令部分</h3><p>ospf 1：创建ospf进程并进入，不写数字默认进程号是1<br>area 0：创建区域并进入其视图；0为骨干区域<br>network ip网段 反掩码：宣告接口和接口所属区域<br>display ospf peer：查看ospf邻居状态<br>display ip routing-table protocol ospf：查看ospf路由表<br>display ospf lsdb：查看ospf链路状态数据库信息<br>authentication-mode simple plain &lt;口令&gt;：配置该区域认证模式为simple（简单验证），配置口令查看模式为plain（明文）和口令；省略plain，在dis this时会以加密的形式展示<br>authentication-mode md5 1 &lt;口令&gt;：配置该区域认证模式为md5认证，验证字标识符为1，并配置口令；同区域上配置md5验证时口令和字标识符必须一致<br>ospf authentication-mode simple plain &lt;口令&gt;：配置链路认证，在接口视图下配置<br>silent-interface &lt;端口号&gt;：禁止接口收发ospf报文；在ospf进程中配置<br>display router-id：查看该设备上的route id；未配置时是0.0.0.0<br>router-id &lt;ip地址&gt;：配置route id；手动更改完后，需重启ospf进程或者保存配置重启路由器才能生效<br>reset ospf process：重启ospf进程<br>ospf network-type p2mp：配置ospf网络类型为点到多点；接口视图下配置<br>preference &lt;数字&gt;：配置ospf协议优先级；默认为10，rip为100，值越小优先级越高<br>ospf cost &lt;数字&gt;：配置ospf开销值；接口视图下<br>ospf timer hello/dead &lt;数字&gt;：配置计时器/失效时间；计时器默认是hello时间的4倍<br>import-route rip &lt;数字&gt;：引入rip路由；在ospf视图下<br>import-route ospf &lt;数字&gt;：引入ospf路由；在rip视图下<br>import-route ospf &lt;数字&gt; cost &lt;数字&gt;：手工配置ospf的开销值；默认为1<br>default-route originate：发布默认路由；在rip下<br>default-router-advertise always：发布默认路由；在ospf下</p><h2 id="第九章-VRRP"><a href="#第九章-VRRP" class="headerlink" title="第九章 VRRP"></a>第九章 VRRP</h2><p>本章介绍了vrrp的基本配置，多备份组，跟踪接口及认证的配置实例</p><h3 id="了解部分-7"><a href="#了解部分-7" class="headerlink" title="了解部分"></a>了解部分</h3><p>vrrp</p><h3 id="命令部分-8"><a href="#命令部分-8" class="headerlink" title="命令部分"></a>命令部分</h3><p>vrrp vrid 1 virtual-ip ip地址：创建vrrp备份组并配置虚拟ip，虚拟ip必须和当前接口在一个网段内<br>vrrp vrid 1 priority &lt;1~254&gt;：配置优先级，默认100，范围0~255，0为系统保留，255为IP地址拥有者使用<br>display vrrp：查看vrrp信息<br>display vrrp brief/interface：查看vrrp工作状态<br>track interface &lt;端口号&gt; reduced 50：配置监视接口，当此端口断掉后，裁减优先级50</p><h2 id="第十章-基础过滤工具（ACL）"><a href="#第十章-基础过滤工具（ACL）" class="headerlink" title="第十章 基础过滤工具（ACL）"></a>第十章 基础过滤工具（ACL）</h2><p>本章介绍了常用的过滤工具，基本acl，高级acl，前缀列表</p><h3 id="了解部分-8"><a href="#了解部分-8" class="headerlink" title="了解部分"></a>了解部分</h3><p>基本acl，高级acl，前缀列表</p><h3 id="命令部分-9"><a href="#命令部分-9" class="headerlink" title="命令部分"></a>命令部分</h3><p>acl 2000：创建acl，编号为2000；基本访问控制列表编号范围2000~2999<br>rule [指定id] permit/deny soure &lt;源IP地址&gt; &lt;反掩码&gt;[any]：配置acl允许/禁止通过规则，any代表所有；指定id可省，若省略，每次创建规则时会以当前已有的最大指定id进行步长为5的累加，步长可修改<br>display acl all：查看所有访问控制列表<br>rule [指定id] permit/deny  ip soure &lt;源IP地址&gt; &lt;反掩码&gt; destination &lt;目的IP&gt; &lt;反掩码&gt;：配置acl允许/禁止通过规则，ip位为协议类型，允许/禁止从源地址来，到目的地址的数据包通过<br>filter-policy 2000 import：配置过滤策略，该策略通过调用之前配置好的acl来达到过滤路由的目的<br>ip ip-prefix deny &lt;网段&gt; greater-equal 25 less-equal 25：过滤指定网段的路由<br>可以简写成<br>ip ip-prefix deny &lt;网段&gt; 25<br>ip ip-prefix permit &lt;网段&gt; 0 less-equal 32:放行所有其他路由，为了防止配置禁止通过路由时会有隐性的拒绝所有路由的规则，将允许其他路由通过的规则进行显性声明<br>filter-policy ip-perfix 1 import：将配置好的前缀列表应用到过滤策略下<br>（未完待续……）</p><!-- <strong>更多内容：</strong>  - ~[《HCNA网络技术实验指南》实验整理](http://localhost:4000/2022/03/23/HCNA%20LAB/)~- [《HCNA网络技术实验指南》电子版](http://localhost:4000/2022/03/23/HCNA%20LAB/) -->]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 网络 </tag>
            
            <tag> 运维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS 梳理</title>
      <link href="/2022/03/23/css/"/>
      <url>/2022/03/23/css/</url>
      
        <content type="html"><![CDATA[<h1 id="css"><a href="#css" class="headerlink" title="css"></a>css</h1><p>css格式<br>选择器{属性:值;}</p><h2 id="基础选择器"><a href="#基础选择器" class="headerlink" title="基础选择器"></a>基础选择器</h2><p>标签选择器，类选择器，id选择器，通配符选择器</p><h3 id="标签选择器"><a href="#标签选择器" class="headerlink" title="标签选择器"></a>标签选择器</h3><p>使用html标签名命名的为标签选择器<br>eq：<code>div{color:green;}</code></p><h3 id="类选择器"><a href="#类选择器" class="headerlink" title="类选择器"></a>类选择器</h3><p>可以设置差异化<br>.类名{内容}<br>不允许使用纯数字、中文字符命名</p><h4 id="多类引用"><a href="#多类引用" class="headerlink" title="多类引用"></a>多类引用</h4><p>一个元素引用多个类名，在每个类名之间加入空格即可。</p><h3 id="id选择器"><a href="#id选择器" class="headerlink" title="id选择器"></a>id选择器</h3><p>使用html标签名命名的为标签选择器，使用#开头<br>#名称{内容}<br>不允许使用纯数字、中文字符命名<br>只能调用一次，如果上面有标签元素调用了id选择器，下面的标签就不可以使用这个选择器，类选择器不会有这个限制</p><h3 id="通配符选择器"><a href="#通配符选择器" class="headerlink" title="通配符选择器"></a>通配符选择器</h3><p>会将html中所有标签属性都改为这里的样式，无需刻意调用<br>*{内容}</p><h2 id="字符属性"><a href="#字符属性" class="headerlink" title="字符属性"></a>字符属性</h2><h3 id="字体属性font-family"><a href="#字体属性font-family" class="headerlink" title="字体属性font-family"></a>字体属性font-family</h3><p>font-family:’微软雅黑,Microsoft YaHei’;<br>建议使用字体的英文名称；设置多个字体的意思是,如果用户电脑未安装第一种字体，就执行第二个字体，以此类推；字体与字体之间用英文逗号分隔；如果字体名称有两个或两个以上的单词组成，使用引号包含起来，单双引都可</p><h3 id="字体大小font-size"><a href="#字体大小font-size" class="headerlink" title="字体大小font-size"></a>字体大小font-size</h3><p>font-size: 20px;<br>px为像素，标题标签需要单独指定大小，body中设置会不起效果</p><h3 id="字体粗细font-weight"><a href="#字体粗细font-weight" class="headerlink" title="字体粗细font-weight"></a>字体粗细font-weight</h3><p>font-weight: normal[bold;bolder;leghter;number]<br>normal:正常字体，相当于number为400.声明此值会取消此前所有设置<br>bold:粗体，相当于number为700，也相当于b对象作用<br>bolder:ie5+，特粗体。<br>leghter:ie5+，细体。<br>number:ie5+    100~900[取整递增]<br>通常使用数字对文字的粗细进行修改</p><h3 id="字体样式font-style"><a href="#字体样式font-style" class="headerlink" title="字体样式font-style"></a>字体样式font-style</h3><p>normal：默认值，浏览器显示的标准字体样式<br>italic：斜体</p><h2 id="文本属性"><a href="#文本属性" class="headerlink" title="文本属性"></a>文本属性</h2><h3 id="文本颜色"><a href="#文本颜色" class="headerlink" title="文本颜色"></a>文本颜色</h3><p>使用预定义颜色值（单词）、16进制或RGB进行文本颜色描述<br>color: red;<br>或<br>color:#ff0000;<br>或<br>color: rgb(255,0,0);</p><h3 id="文本对齐"><a href="#文本对齐" class="headerlink" title="文本对齐"></a>文本对齐</h3><p>text-align：用于水平方向的文本对齐方式<br>left左对齐<br>right右对齐<br>center居中对齐</p><h3 id="文本装饰"><a href="#文本装饰" class="headerlink" title="文本装饰"></a>文本装饰</h3><p>text-decoration：装饰文本的线的存在位置<br>none：取消所有文本装饰<br>underline：下划线<br>line-through：删除线<br>overline：上划线</p><h3 id="文本缩进"><a href="#文本缩进" class="headerlink" title="文本缩进"></a>文本缩进</h3><p>text-indent: 10px;：段落第一行进行缩进<br>px是像素<br>em也是像素，此单位为相对当前对象和元素进行缩进，1em为当前元素的一个文字的距离，如果当前元素没有设置大小，会按照父元素大小的一个文字大小</p><h3 id="行间距"><a href="#行间距" class="headerlink" title="行间距"></a>行间距</h3><p>line-height：控制行与行之间的距离<br>px像素</p><h2 id="css引用"><a href="#css引用" class="headerlink" title="css引用"></a>css引用</h2><h3 id="行内样式表"><a href="#行内样式表" class="headerlink" title="行内样式表"></a>行内样式表</h3><p>写在标签里面的（&lt;p style=”color: red”&gt;）为行内样式表<br>使用较少，适用于修改简单需求的情况<br>所有的属性都需要在双引号内</p><h3 id="内部样式表"><a href="#内部样式表" class="headerlink" title="内部样式表"></a>内部样式表</h3><p>写在&lt;style&gt;标签里的为内部样式表<br>理论上可以放到HTML的任何地方，一般放在head标签中<br>控制范围是整个html</p><h3 id="外部样式表"><a href="#外部样式表" class="headerlink" title="外部样式表"></a>外部样式表</h3><p>使用较多，适用于<br>写在.css文件中，在html里使用&lt;link&gt;标签引入该.css文件，这种方式为外部引入。注意路径问题</p><h3 id="chrome调试工具"><a href="#chrome调试工具" class="headerlink" title="chrome调试工具"></a>chrome调试工具</h3><p>f12，剩下的自己查吧</p><h3 id="Emmet语法"><a href="#Emmet语法" class="headerlink" title="Emmet语法"></a>Emmet语法</h3><h6 id="使用Emmet语法快速生成html框架结构"><a href="#使用Emmet语法快速生成html框架结构" class="headerlink" title="使用Emmet语法快速生成html框架结构"></a>使用Emmet语法快速生成html框架结构</h6><p>标签名加上星号可快速生成多个该标签，div*10.<br>有父子级关系的标签，可以用父标签名&gt;子标签名书写创建，ul&gt;li<br>有兄弟标签，用两个标签名中间加加号，div+p<br>想生成带有类名或id名的字符，写.类名或#id名，默认div，p.gray；<br>如果生成div类名是有序的，使用自增$符，.demo$*5<br>如果想要在生成的标签内部写内容用{}}，div{lalalalalala}</p><h2 id="复合选择器"><a href="#复合选择器" class="headerlink" title="复合选择器"></a>复合选择器</h2><h3 id="后代选择器"><a href="#后代选择器" class="headerlink" title="后代选择器"></a>后代选择器</h3><p>又称为包含选择器，适用于有父子级关系的元素；最终更改的是最后一个元素<br>ol li {}<br>如果有同类的父子级，可以通过修改其中一个父级的class进行区分<br>ol li {}<br>.nav li {}</p><h3 id="子代选择器"><a href="#子代选择器" class="headerlink" title="子代选择器"></a>子代选择器</h3><p>适用于父子级关系中最近一级的子元素</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">        <span class="token selector">div a </span><span class="token punctuation">{</span>            <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token comment" spellcheck="true">/* 可以分别尝试一下 */</span>        <span class="token selector">div>a </span><span class="token punctuation">{</span>            <span class="token property">color</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span>        <span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>div下<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>div下<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>div p下<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>div p下<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre><h3 id="并集选择器"><a href="#并集选择器" class="headerlink" title="并集选择器"></a>并集选择器</h3><p>并集选择器可以选择多组标签，同时为他们定义相同的样式，适用于集体声明。<br>并集选择器通过逗号链接，任何形式的选择器都可以作为并集选择器的一部分，包括元素名，父代子代，基本选择器等<br>一般情况下习惯每一个选择器名还有逗号独占一行，最后一个选择器没有逗号</p><h3 id="伪类选择器"><a href="#伪类选择器" class="headerlink" title="伪类选择器"></a>伪类选择器</h3><p>适用于向某些选择器添加特殊效果<br>使用冒号开头,:demo，:herm-ol</p><h4 id="链接伪类选择器"><a href="#链接伪类选择器" class="headerlink" title="链接伪类选择器"></a>链接伪类选择器</h4><p>a:link  所有未被访问的链接<br>a:visited  所有已访问过的链接（涉及隐私，font-size没效果）<br>a:hover   鼠标指针在连接上<br>a:active  鼠标按下未弹起的连接<br>Tip:尽量按link，visited，hover，active的顺序对连接进行修改<br>链接想改变样式需要单独设置</p><h4 id="focus伪类选择器"><a href="#focus伪类选择器" class="headerlink" title=":focus伪类选择器"></a>:focus伪类选择器</h4><p>适用于获取有焦点（光标）的元素，例如input文本框</p><h2 id="元素显示模式"><a href="#元素显示模式" class="headerlink" title="元素显示模式"></a>元素显示模式</h2><p>作用：为了更好的布局网页</p><h3 id="块元素"><a href="#块元素" class="headerlink" title="块元素"></a>块元素</h3><p>特点：独占一行；高宽内外边距可自定义；宽度默认占浏览器（父级宽度）的100%；可以放行内或块级元素<br>注意：文字类元素内不能适合用块级元素，p标签不能放div标签</p><h3 id="行内元素（内联元素）"><a href="#行内元素（内联元素）" class="headerlink" title="行内元素（内联元素）"></a>行内元素（内联元素）</h3><p>特点：相邻的行内元素可以在一行上；宽高直接设置不会生效；默认的宽度是内容的宽度；行内元素只能容纳文本或其他行内元素。<br>a可以放块级元素，多会转换为块级元素</p><h3 id="行内块元素"><a href="#行内块元素" class="headerlink" title="行内块元素"></a>行内块元素</h3><p>部分标签同时具备块级元素和行内元素的特性，如img，input等</p><h3 id="显示模式的转换"><a href="#显示模式的转换" class="headerlink" title="显示模式的转换"></a>显示模式的转换</h3><p>有些情况下，某些元素需要模式的转换，通过display属性进行转换<br>eq：a标签需要增加触发范围</p><pre class=" language-css"><code class="language-css"><span class="token selector">a</span><span class="token punctuation">{</span>    <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/* block为转换成块元素；inline为转换成行内元素；inline-block为行内块元素 */</span><span class="token punctuation">}</span></code></pre><p>工具snipaste，win10应用商店可查<br>单行文字垂直居中：使用line-hight可以让文字的行高等于盒子hight的高度，因为本身文字的行高就等于文字本身的高度加文字上距离元素上边框的距离加文字下距离元素下的高度</p><h2 id="背景样式"><a href="#背景样式" class="headerlink" title="背景样式"></a>背景样式</h2><h3 id="背景颜色"><a href="#背景颜色" class="headerlink" title="背景颜色"></a>背景颜色</h3><p>background-color：rgb[预设;16进制]<br>默认值为transparent，透明的</p><h3 id="背景图片"><a href="#背景图片" class="headerlink" title="背景图片"></a>背景图片</h3><p>用于装饰性图片<br>background-image：none [url(url图片路径)]<br>相对于插入图片，便于控制位置，</p><h3 id="背景平铺"><a href="#背景平铺" class="headerlink" title="背景平铺"></a>背景平铺</h3><p>background-repeat: repeat [no-repeat;repeat-x;repeat-y]<br>repeat平铺，no-repeat不平铺，repeat-x沿x轴平铺，repeat-y沿y轴平铺<br>默认为平铺</p><h3 id="背景位置"><a href="#背景位置" class="headerlink" title="背景位置"></a>背景位置</h3><h4 id="方位名词"><a href="#方位名词" class="headerlink" title="方位名词"></a>方位名词</h4><p>background-position: x y;<br>值：<br>lenght     百分比;由浮点数和单位标识符组成的长度值<br>position   top;center;botton;left;right<br>如果xy两个值全部使用方位名词，没有先后顺序；但是当只有一个方位名词时，第二个为默认为居中对齐</p><h4 id="精确位置"><a href="#精确位置" class="headerlink" title="精确位置"></a>精确位置</h4><p>background-position: 20px 50px;<br>如果使用精确位置，规定第一个值必须是x轴，第二个值必须是y轴；如果只有一个精确值，前面属性不变，缺省的第二个值默认为y轴居中对齐</p><h4 id="混合单位"><a href="#混合单位" class="headerlink" title="混合单位"></a>混合单位</h4><p>background-position: center 50px;<br>混合使用时，第一个值一定是x轴，第二轴一定是y轴</p><h3 id="背景固定"><a href="#背景固定" class="headerlink" title="背景固定"></a>背景固定</h3><p>固定图片在某个位置<br>background-attachment: scroll fixed<br>scroll为滚动，fixed为固定</p><h3 id="背景的属性复合性写法"><a href="#背景的属性复合性写法" class="headerlink" title="背景的属性复合性写法"></a>背景的属性复合性写法</h3><p>background: 值<br>值的顺序没有严格要求，一般书写习惯为：background:背景颜色 背景图片地址 平铺样式 背景图片滚动 背景图片位置;</p><h3 id="背景色半透明"><a href="#背景色半透明" class="headerlink" title="背景色半透明"></a>背景色半透明</h3><p>background: rgba(0,0,0,0.3)<br>第一个值为红色值，第二个值为绿色值，第三个为蓝色值，最后一个为alpha值，取值在0~1之间</p><h2 id="三大特性"><a href="#三大特性" class="headerlink" title="三大特性"></a>三大特性</h2><h3 id="层叠性"><a href="#层叠性" class="headerlink" title="层叠性"></a>层叠性</h3><p>相同的选择器给相同的样式<br>样式冲突: 遵循就近原则，就是浏览器从上倒下解析时，最后一个同属性的会覆盖掉上面之前设置的相同属性。<br>不冲突：不层叠</p><h3 id="继承性"><a href="#继承性" class="headerlink" title="继承性"></a>继承性</h3><p>当给父级设置样式后，下面的子级同样会继承某些父级样式（文字类属性），子级单独设置样式，父级的样式会失效</p><!-- ### 行高的继承p131## 盒子模型盒子模型组成：边框，内容，内边框，外边框### 边框border-width -style -color --><p>（未完待续……）<br><strong>更多内容：</strong></p><ul><li><a href="http://localhost:4000/2022/03/23/html/">HTML 教程</a></li><li><a href="http://localhost:4000/2022/03/23/javascript/">JavaScript 梳理</a><!-- ### 内边框</li></ul><h3 id="外边框"><a href="#外边框" class="headerlink" title="外边框"></a>外边框</h3><p> –&gt;</p>--></li></ul>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 前端 </tag>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML 教程</title>
      <link href="/2022/03/23/html/"/>
      <url>/2022/03/23/html/</url>
      
        <content type="html"><![CDATA[<h1 id="html"><a href="#html" class="headerlink" title="html"></a>html</h1><h2 id="固定标签的说明"><a href="#固定标签的说明" class="headerlink" title="固定标签的说明"></a>固定标签的说明</h2><p><code>&lt;!DOCTYPE&gt;</code>声明文档类型，本省不属于html，值有html（H5）xhtml（xml）等；该标签位置固定，写法固定，一般在该文档的第一行开头，或者必须在<code>&lt;html&gt;</code>标签之前<br><code>&lt;lang='en'&gt;</code>声明当前文档的语言，默认为en（英语），其他值有zh-CN(中文)，fr（法文）等；但不影响浏览器中的显示；作用为提醒浏览器（比如chrome中点击翻译功能显示的默认值，有时是英文，有时是发文）<br><code>charset="UTF-8"</code>字符集，默认是utf-8,除了这个还有很多，比如GB2312等；utf-8满足了各个国家的字符编码格式，以便于乱码的情况出现  </p><h2 id="常用标签"><a href="#常用标签" class="headerlink" title="常用标签"></a>常用标签</h2><h3 id="标题标签-lt-h1-gt-lt-h6-gt"><a href="#标题标签-lt-h1-gt-lt-h6-gt" class="headerlink" title="标题标签 <h1>~<h6>"></a>标题标签 &lt;h1&gt;~&lt;h6&gt;</h3><p>一共有个，从大到小h1到h6，为双标签,独占一行</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>标题1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>标题2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">></span></span>标题3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">></span></span>标题4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h5</span><span class="token punctuation">></span></span>标题5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h5</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h6</span><span class="token punctuation">></span></span>标题6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h6</span><span class="token punctuation">></span></span></code></pre><h3 id="段落标签-lt-p-gt-、换行标签"><a href="#段落标签-lt-p-gt-、换行标签" class="headerlink" title="段落标签<p>、换行标签"></a>段落标签&lt;p&gt;、换行标签<br></h3><p>&lt;p&gt;将文字分段,双标签；会根据浏览器的大小自动换行；段落与段落之间会有段间距&lt;br/&gt;会强制产生换行；单标签；只换行，不起到换段落的作用</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>balabalabalabalabala<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>balabalabalabalabala<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>balabalab<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span>alabalabala<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>bala<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span>balabal<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span>abalabala<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span></code></pre><h3 id="文本格式化标签（加粗，斜体，下滑线，删除线）"><a href="#文本格式化标签（加粗，斜体，下滑线，删除线）" class="headerlink" title="文本格式化标签（加粗，斜体，下滑线，删除线）"></a>文本格式化标签（加粗，斜体，下滑线，删除线）</h3><p>加粗：*&lt;strong&gt;或&lt;b&gt;<br>斜体：*&lt;em&gt;或&lt;i&gt;<br>下划线：*&lt;ins&gt;或&lt;u&gt;<br>删除线：*&lt;del&gt;或&lt;s&gt;</p><blockquote><p>为推荐使用标签，语义更强烈</p></blockquote><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>strong</span><span class="token punctuation">></span></span>strong加粗<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>strong</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">></span></span>b加粗<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>em</span><span class="token punctuation">></span></span>em斜体<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>em</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span><span class="token punctuation">></span></span>i斜体<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ins</span><span class="token punctuation">></span></span>ins下划线<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ins</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>u</span><span class="token punctuation">></span></span>u下划线<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>u</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>del</span><span class="token punctuation">></span></span>del删除线<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>del</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>s</span><span class="token punctuation">></span></span>s删除线<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>s</span><span class="token punctuation">></span></span></code></pre><p>TIp:以上均为双标签</p><h3 id="div和span"><a href="#div和span" class="headerlink" title="div和span"></a>div和span</h3><p>div和span没有任何语义，就是个盒子，用来装内容的，双标签。<br>特点：div常用来布局，且独占一行，span一行显示很多内容</p><h3 id="图像标签"><a href="#图像标签" class="headerlink" title="图像标签"></a>图像标签</h3><p>&lt;img&gt;：使用该标签在页面中插入图片，单标签</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>图像路径/图像名.图像后缀<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span></code></pre><p>src为img标签的属性，必填；除了这个，还有alt等<br>绝对路径和相对路径<br>绝对路径是从分区标识符开始进行定位到文件的路径叫绝对路径。<br>相对路径是指相对于当前操作文件所在位置开始定位到对应一个文件的路径叫相对路径，其中，<code>..</code>为上一级文件夹。<code>.</code>为当前文件夹。<br>不管目录是什么，每一级目录都使用<code>/</code>分隔，文件要写后缀。  </p><h3 id="超链接标签-lt-a-gt"><a href="#超链接标签-lt-a-gt" class="headerlink" title="超链接标签<a>"></a>超链接标签&lt;a&gt;</h3><p>双标签，</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://www.baidu.com<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>asdfasd<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span></code></pre><p>href：必填，用于指定目标连接的url，外部链接必须以<code>http://或者https://</code><br>target：用于确定是在当前页面（<code>_self</code>）打开还是以新标签页（<code>_blank</code>）打开，<br>内部链接：遵循相对路径和绝对路径的规则<br>空链接：使用#代替链接<br>下载链接：当链接里面存在的是一个<code>带有后缀的文件</code>，这个链接就是一个下载链接，压缩包文件较多<br>网页元素链接：网页中的各种元素，比如文本，图像，表格，音频，视频都可以添加超链接<br>锚点链接：用于定位当前页面的某个位置；在href中，以<code># + 字符</code>的形式，字符根据你所引用标签设置的<code>id=""</code>双引号中的字符一致</p><h3 id="注释与特殊字符"><a href="#注释与特殊字符" class="headerlink" title="注释与特殊字符"></a>注释与特殊字符</h3><p>注释：&lt;!– 注释内容 –&gt;不会显示在页面上，只做程序标注提示使用。<br>特殊字符：&amp;nbsp;一个空格；&amp;gt;大于号&gt; &amp;lt;小于号&lt;</p><h3 id="表格标签"><a href="#表格标签" class="headerlink" title="表格标签"></a>表格标签</h3><p>表格的作用：显示展示数据<br>基本语法：&lt;table&gt;&lt;tr&gt;&lt;td&gt;(均为双标签)，其中<br>&lt;table&gt;为整个表，也就是包含单元格的框架<br>&lt;tr&gt;为整个表中的行，在这里面包含了一行上的虽有单元格<br>&lt;td&gt;为一个单元格，内容就在双标签之间填写即可</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>asdfasdf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>asdfasdfasdf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>asdfasdf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>asdfasdf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>sadfasdfasd<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>asdfasdfasd<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span></code></pre><p>表头单元格标签&lt;th&gt;&lt;/th&gt;:<br>th中的数据会自动加粗居中<br>表格标签相关属性（后期会通过css进行装饰）：</p><!-- 以下格式为MD表格的固定格式，MD的表格生成默认是有表头的，表头内容样式默认加粗居中对齐；第二行是规定是否为表格的重要标识，也是规定该列内容的对齐方式的重要依据，第一个为左对齐，第二个为右对齐，第三个为居中对齐，当然也可以不写双引号定义对齐方式，默认为左对齐，对齐方式影响表头；横杠至少有一个，上不封顶，但是都是一个意思；可使用html标签或某些css对单元格内的内容或某段内容进行逐个修或针对性修改。下面是例子 --><!-- <font size=5px></font> --><table><thead><tr><th align="left"><font size="4px" color="red">属性名</font></th><th align="right"><font size="4px" color="red">属性值</font></th><th align="center"><font size="4px" color="red">描述</font></th></tr></thead><tbody><tr><td align="left">algin</td><td align="right">left、center、right</td><td align="center">单元格内数据的对齐方式</td></tr><tr><td align="left">broder</td><td align="right">“数字”或””</td><td align="center">显示边框和控制外边框粗细，默认为””，数字越大，整个表格的外边框的笔触也会越粗</td></tr><tr><td align="left">cellpadding</td><td align="right">像素值</td><td align="center">单元格内数据与单元格的距离，默认为1像素</td></tr><tr><td align="left">cellspacing</td><td align="right">像素值</td><td align="center">单元格之间的距离与外边框的距离，默认为两像素</td></tr><tr><td align="left">width\hight</td><td align="right">像素值或百分比</td><td align="center">表格宽度\表格高度</td></tr></tbody></table><h4 id="表格结构标签："><a href="#表格结构标签：" class="headerlink" title="表格结构标签："></a>表格结构标签：</h4><p>thead表示表格的头部区域，tbody表示表格的主题区域,均为双标签<br>合并单元格：<br>纵向合并：rowspan=”欲合并个数”<br>横向合并：colspan=”欲合并个数”<br>目标单元格：纵向合并，将属性规定在最上面单元格的开头标签中；横向合并，将属性规定在最左侧的单元格的开头标签中。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>thead</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>asdf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>asdf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>asdf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>asdf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>thead</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tbody</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">rowspan</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>asdf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>asdf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>asdf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>asdf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>asdf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>asdf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>asdf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>asdf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>asdf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>asdf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>asdf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>asdf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>asdf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">colspan</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>asdf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tbody</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span></code></pre><table>    <thead>        <tr>            <th>asdf</th>            <th>asdf</th>            <th>asdf</th>            <th>asdf</th>        </tr>    </thead>    <tbody>        <tr>            <td rowspan="2">asdf</td>            <td>asdf</td>            <td>asdf</td>            <td>asdf</td>        </tr>        <tr>            <td>asdf</td>            <td>asdf</td>            <td>asdf</td>        </tr>        <tr>            <td>asdf</td>            <td>asdf</td>            <td>asdf</td>            <td>asdf</td>        </tr>        <tr>            <td>asdf</td>            <td>asdf</td>            <td colspan="2">asdf</td>        </tr>    </tbody></table><h3 id="列表标签"><a href="#列表标签" class="headerlink" title="列表标签"></a>列表标签</h3><p>列表用于项目布局。</p><h4 id="无序列表："><a href="#无序列表：" class="headerlink" title="无序列表："></a>无序列表：</h4><p>ul定义无序列表，用li来定义标签</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>111111<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>222222<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>333333<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span></code></pre><p>1，无序列表没有顺序<br>2，ul中不允许放除li标签以外的所有元素或字符<br>3，li标签中间可以加所有元素和字符<br>4，无序列表有自己的样式属性，可以通过css进行定制</p><h4 id="有序列表："><a href="#有序列表：" class="headerlink" title="有序列表："></a>有序列表：</h4><p>ol定义有序列表，用li来定义标签</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ol</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>111111<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>222222<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>333333<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ol</span><span class="token punctuation">></span></span></code></pre><p>1，有序列表是由一定顺序的，不能颠倒。<br>2，ul中不允许放除li标签以外的所有元素或字符<br>3，li标签中间可以加所有元素和字符<br>4，无序列表有自己的样式属性，可以通过css进行定制</p><h4 id="自定义列表："><a href="#自定义列表：" class="headerlink" title="自定义列表："></a>自定义列表：</h4><p>自定义列表项前没有项目符号；dl来定义自定义列表，列表标题使用dt，当前标题下的项用dd。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dl</span><span class="token punctuation">></span></span>                 <span class="token comment" spellcheck="true">&lt;!-- 使用dl定义一个自定义列表 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dt</span><span class="token punctuation">></span></span>111111<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dt</span><span class="token punctuation">></span></span>  <span class="token comment" spellcheck="true">&lt;!-- 使用dt定义每一个列表的列表标题 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dd</span><span class="token punctuation">></span></span>222222<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dd</span><span class="token punctuation">></span></span>  <span class="token comment" spellcheck="true">&lt;!-- 使用dd定义每一个列表的列表项 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dd</span><span class="token punctuation">></span></span>333333<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dd</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dl</span><span class="token punctuation">></span></span></code></pre><p>1，自定义列表没有顺序<br>2，dl中不允许放除dd和dt标签以外的所有元素或字符；先后顺序dt在前，dd在后。<br>3，dd标签中间可以加所有元素和字符<br>4，自定义列表有自己的样式属性，可以通过css进行定制</p><h3 id="表单标签"><a href="#表单标签" class="headerlink" title="表单标签"></a>表单标签</h3><p>表单包含表单域，表单控件和提示信息</p><h4 id="表单域"><a href="#表单域" class="headerlink" title="表单域"></a>表单域</h4><p>包含表单元素的区域<br>form双标签来规范表单域范围</p><table><thead><tr><th>属性名</th><th>属性值</th><th>作用</th></tr></thead><tbody><tr><td>action</td><td>url地址</td><td>指定接收处理表单数据的服务器程序url地址</td></tr><tr><td>method</td><td>get/post</td><td>设置表单数据提交方式</td></tr><tr><td>name</td><td>字符</td><td>用于指定表单名称，区分多个表单</td></tr></tbody></table><h4 id="表单控件："><a href="#表单控件：" class="headerlink" title="表单控件："></a>表单控件：</h4><p>input文本框标签:&lt;input type=””/&gt;单标签<br>type属性的值</p><table><thead><tr><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td>button</td><td>定义按钮，用于启动js脚本</td></tr><tr><td>checbox</td><td>定义复选框</td></tr><tr><td>file</td><td>定义输入字段和“浏览”按钮，用于文件上传</td></tr><tr><td>hidden</td><td>定义隐藏的输入字段</td></tr><tr><td>image</td><td>定义图像形式的提交按钮</td></tr><tr><td>password</td><td>定义密码输入样式</td></tr><tr><td>radio</td><td>单选按钮，若想实现单选，需配合name属性值为同一个值时才可实现</td></tr><tr><td>reset</td><td>重置按钮，清空表单中的数据</td></tr><tr><td>submit</td><td>定义提交按钮，配合form的method属性会把数据传递到后端进行相应处理</td></tr><tr><td>text</td><td>可输入文本框</td></tr></tbody></table><p>其他属性</p><table><thead><tr><th>属性名</th><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td>name</td><td>用户自定义</td><td>定义input名称</td></tr><tr><td>value</td><td>用户自定义</td><td>规定input默认值，主要用于后台数据处理</td></tr><tr><td>checked</td><td>checked</td><td>加载后是否为选中状态</td></tr><tr><td>maxlenght</td><td>正整数</td><td>规定最大长度</td></tr></tbody></table><h4 id="lable标签"><a href="#lable标签" class="headerlink" title="lable标签"></a>lable标签</h4><p>用于绑定一个表单元素，当点击label标签内的文字时，浏览器就会自动将焦点（光标）转到或者选择对应饿表单元素上，用来增加用户体验。配合标签的id属性进行搭配使用<br>语法：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>xingbie<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>男<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>lable</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sex<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>xingbie<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token comment" spellcheck="true">&lt;!-- 上面是显性写法，下面的是隐性写法 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">></span></span>hhhhhhhh<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span></code></pre><h4 id="select标签"><a href="#select标签" class="headerlink" title="select标签"></a>select标签</h4><p>下拉列表，用于某类的集合，节约页面空间；使用&lt;select&gt;双标签定义下拉列表，在其内敲双标签&lt;option&gt;写入预选选项<br>1.至少有一对option<br>2.在option中定义selected=”selected”时，当前项即为默认选中状态。</p><pre class=" language-html"><code class="language-html">请在下面的选项中选出哪一个与其他几个不同：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>张家口<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>张震岳<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>张国立<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>张一么西喽<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span></code></pre><h4 id="textarea标签（双标签）"><a href="#textarea标签（双标签）" class="headerlink" title="textarea标签（双标签）"></a>textarea标签（双标签）</h4><p>文本域，多行文本框。<br>cols属性：规定显示多少个字符<br>ross属性：规定默认显示几行<br><br><br>(未完待续……)<br><br><br><strong>更多内容：</strong></p><ul><li><a href="http://localhost:4000/2022/03/23/javascript/">JavaScript 梳理</a></li><li><a href="http://localhost:4000/2022/03/23/css/">CSS 梳理</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 前端 </tag>
            
            <tag> html </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>源Markdown 语法整理</title>
      <link href="/2022/03/23/markdown/"/>
      <url>/2022/03/23/markdown/</url>
      
        <content type="html"><![CDATA[<h1 id="Markdown-语法整理"><a href="#Markdown-语法整理" class="headerlink" title="Markdown 语法整理"></a>Markdown 语法整理</h1><p>  开门见山</p><h2 id="Markdown-标题"><a href="#Markdown-标题" class="headerlink" title="Markdown 标题"></a>Markdown 标题</h2><p>Markdown 标题有两种格式。<br>1、使用 = 和 - 标记一级和二级标题<br>= 和 - 标记语法格式如下：</p><pre class=" language-markdown"><code class="language-markdown">我展示的是一级标题=================我展示的是二级标题<span class="token hr punctuation">-----------------</span></code></pre><p>展示如下（）：<br>（制作动图）<br>*2、使用#号标记<br>使用#号可表示1-6级标题，一级标题对应一个#号，二级标题对应两个#号，以此类推。</p><pre class=" language-md"><code class="language-md"># 一级标题## 二级标题### 三级标题#### 四级标题##### 五级标题###### 六级标题</code></pre><p>展示如下：<br>（制作动图）</p><h2 id="Markdown-段落"><a href="#Markdown-段落" class="headerlink" title="Markdown 段落"></a>Markdown 段落</h2><p>Markdown 段落没有特殊的格式，直接编写文字就好，段落的换行是使用两个以上空格加上回车。</p><p>当然也可以在段落后面使用一个空行来表示重新开始一个段落。</p><h2 id="Markdown-字体"><a href="#Markdown-字体" class="headerlink" title="Markdown 字体"></a>Markdown 字体</h2><pre class=" language-markdown"><code class="language-markdown"><span class="token italic"><span class="token punctuation">*</span>斜体文本<span class="token punctuation">*</span></span><span class="token italic"><span class="token punctuation">_</span>斜体文本<span class="token punctuation">_</span></span><span class="token bold"><span class="token punctuation">**</span>粗体文本<span class="token punctuation">**</span></span><span class="token bold"><span class="token punctuation">__</span>粗体文本<span class="token punctuation">__</span></span><span class="token bold"><span class="token punctuation">**</span>*粗斜体文本<span class="token punctuation">**</span></span>*<span class="token bold"><span class="token punctuation">__</span>_粗斜体文本<span class="token punctuation">__</span></span>_</code></pre><h2 id="分隔线"><a href="#分隔线" class="headerlink" title="分隔线"></a>分隔线</h2><p>你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。下面每种写法都可以建立分隔线：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token hr punctuation">***</span><span class="token hr punctuation">* * *</span><span class="token hr punctuation">*****</span><span class="token hr punctuation">- - -</span><span class="token hr punctuation">----------</span></code></pre><h2 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h2><p>如果段落上的文字要添加删除线，只需要在文字的两端加上两个波浪线<code>~~</code>即可，实例如下：</p><pre class=" language-markdown"><code class="language-markdown">RUNOOB.COMGOOGLE.COM~~BAIDU.COM~~</code></pre><h2 id="下划线"><a href="#下划线" class="headerlink" title="下划线"></a>下划线</h2><p>下划线可以通过HTML的&lt;u&gt;标签来实现：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>u</span><span class="token punctuation">></span></span>带下划线文本<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>u</span><span class="token punctuation">></span></span></code></pre><h2 id="脚注"><a href="#脚注" class="headerlink" title="脚注"></a>脚注</h2><p>脚注是对文本的补充说明。<br>Markdown 脚注的格式如下:</p><pre class=" language-markdown"><code class="language-markdown">创建脚注格式类似这样 [^RUNOOB]。<span class="token url-reference url"><span class="token punctuation">[</span><span class="token variable">^RUNOOB</span><span class="token punctuation">]</span><span class="token punctuation">:</span> 菜鸟教程</span> -- 学的不仅是技术，更是梦想！！！</code></pre><h2 id="Markdown-列表"><a href="#Markdown-列表" class="headerlink" title="Markdown 列表"></a>Markdown 列表</h2><p>Markdown 支持有序列表和无序列表。<br>无序列表使用星号(*)、加号(+)或是减号(-)作为列表标记，这些标记后面要添加一个空格，然后再填写内容：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token list punctuation">*</span> 第一项<span class="token list punctuation">*</span> 第二项<span class="token list punctuation">*</span> 第三项<span class="token list punctuation">+</span> 第一项<span class="token list punctuation">+</span> 第二项<span class="token list punctuation">+</span> 第三项<span class="token list punctuation">-</span> 第一项<span class="token list punctuation">-</span> 第二项<span class="token list punctuation">-</span> 第三项</code></pre><p>有序列表使用数字并加上 . 号来表示，如：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token list punctuation">1.</span> 第一项<span class="token list punctuation">2.</span> 第二项<span class="token list punctuation">3.</span> 第三项</code></pre><p>列表嵌套只需在子列表中的选项前面添加四个空格即可：</p><h3 id="列表嵌套"><a href="#列表嵌套" class="headerlink" title="列表嵌套"></a>列表嵌套</h3><pre class=" language-markdown"><code class="language-markdown"><span class="token list punctuation">1.</span> 第一项：<span class="token code keyword">    - 第一项嵌套的第一个元素</span><span class="token code keyword">    - 第一项嵌套的第二个元素</span><span class="token list punctuation">2.</span> 第二项：<span class="token code keyword">    - 第二项嵌套的第一个元素</span><span class="token code keyword">    - 第二项嵌套的第二个元素</span></code></pre><h2 id="Markdown-区块"><a href="#Markdown-区块" class="headerlink" title="Markdown 区块"></a>Markdown 区块</h2><p>Markdown 区块引用是在段落开头使用 &gt; 符号 ，然后后面紧跟一个空格符号：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token blockquote punctuation">></span> 区块引用<span class="token blockquote punctuation">></span> 菜鸟教程<span class="token blockquote punctuation">></span> 学的不仅是技术更是梦想</code></pre><p>另外区块是可以嵌套的，一个 &gt; 符号是最外层，两个 &gt; 符号是第一层嵌套，以此类推：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token blockquote punctuation">></span> 最外层<span class="token blockquote punctuation">> ></span> 第一层嵌套<span class="token blockquote punctuation">> > ></span> 第二层嵌套</code></pre><h3 id="区块中使用列表"><a href="#区块中使用列表" class="headerlink" title="区块中使用列表"></a>区块中使用列表</h3><p>区块中使用列表实例如下：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token blockquote punctuation">></span> 区块中使用列表<span class="token blockquote punctuation">></span> <span class="token list punctuation">1.</span> 第一项<span class="token blockquote punctuation">></span> <span class="token list punctuation">2.</span> 第二项<span class="token blockquote punctuation">></span> <span class="token list punctuation">+</span> 第一项<span class="token blockquote punctuation">></span> <span class="token list punctuation">+</span> 第二项<span class="token blockquote punctuation">></span> <span class="token list punctuation">+</span> 第三项</code></pre><h3 id="列表中使用区块"><a href="#列表中使用区块" class="headerlink" title="列表中使用区块"></a>列表中使用区块</h3><p>如果要在列表项目内放进区块，那么就需要在 &gt; 前添加四个空格的缩进。<br>列表中使用区块实例如下：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token list punctuation">*</span> 第一项<span class="token code keyword">    > 菜鸟教程</span><span class="token code keyword">    > 学的不仅是技术更是梦想</span><span class="token list punctuation">*</span> 第二项</code></pre><h2 id="Markdown-代码"><a href="#Markdown-代码" class="headerlink" title="Markdown 代码"></a>Markdown 代码</h2><p>如果是段落上的一个函数或片段的代码可以用反引号把它包起来（`），例如：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token code keyword">`printf()`</span> 函数</code></pre><h3 id="代码区块"><a href="#代码区块" class="headerlink" title="代码区块"></a>代码区块</h3><p>代码区块使用 4 个空格或者一个制表符（Tab 键）。</p><pre class=" language-markdown"><code class="language-markdown"><span class="token code keyword">    ```javascript</span><span class="token code keyword">    $(document).ready(function () {</span><span class="token code keyword">        alert('RUNOOB');</span><span class="token code keyword">    });</span><span class="token code keyword">    ```</span></code></pre><h2 id="Markdown-链接"><a href="#Markdown-链接" class="headerlink" title="Markdown 链接"></a>Markdown 链接</h2><p>链接使用方法如下：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token url">[链接描述](链接地址)</span>或者<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>链接地址</span><span class="token punctuation">></span></span></code></pre><h2 id="高级链接"><a href="#高级链接" class="headerlink" title="高级链接"></a>高级链接</h2><p>我们可以通过变量来设置一个链接，变量赋值在文档末尾进行：</p><pre class=" language-markdown"><code class="language-markdown">这个链接用 1 作为网址变量 <span class="token url">[Google][<span class="token variable">1</span>]</span>这个链接用 runoob 作为网址变量 <span class="token url">[Runoob][<span class="token variable">runoob</span>]</span>然后在文档的结尾为变量赋值（网址）  <span class="token url-reference url"><span class="token punctuation">[</span><span class="token variable">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span> http://www.google.com/</span>  <span class="token url-reference url"><span class="token punctuation">[</span><span class="token variable">runoob</span><span class="token punctuation">]</span><span class="token punctuation">:</span> http://www.runoob.com/</span></code></pre><h2 id="Markdown-图片"><a href="#Markdown-图片" class="headerlink" title="Markdown 图片"></a>Markdown 图片</h2><p>Markdown 图片语法格式如下：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token url">![alt 属性文本](图片地址)</span><span class="token url">![alt 属性文本](图片地址 <span class="token string">"可选标题"</span>)</span></code></pre><p>开头一个感叹号 !<br>接着一个方括号，里面放上图片的替代文字<br>接着一个普通括号，里面放上图片的网址，最后还可以用引号包住并加上选择性的 ‘title’ 属性的文字。<br>当然，你也可以像网址那样对图片网址使用变量:</p><pre class=" language-markdown"><code class="language-markdown">这个链接用 1 作为网址变量 <span class="token url">[RUNOOB][<span class="token variable">1</span>]</span>.然后在文档的结尾为变量赋值（网址）<span class="token url-reference url"><span class="token punctuation">[</span><span class="token variable">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span> http://static.runoob.com/images/runoob-logo.png</span></code></pre><p>Markdown 还没有办法指定图片的高度与宽度，如果你需要的话，你可以使用普通的 &lt;img&gt; 标签。</p><pre class=" language-markdown"><code class="language-markdown"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://static.runoob.com/images/runoob-logo.png<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>50%<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></code></pre><h2 id="Markdown-表格"><a href="#Markdown-表格" class="headerlink" title="Markdown 表格"></a>Markdown 表格</h2><p>Markdown 制作表格使用 | 来分隔不同的单元格，使用 - 来分隔表头和其他行。</p><p>语法格式如下：</p><pre class=" language-markdown"><code class="language-markdown">|  表头   | 表头  ||  ----  | ----  || 单元格  | 单元格 || 单元格  | 单元格 |</code></pre><p>对齐方式<br>我们可以设置表格的对齐方式：</p><p>-: 设置内容和标题栏居右对齐。<br>:- 设置内容和标题栏居左对齐。<br>:-: 设置内容和标题栏居中对齐。</p><pre class=" language-markdown"><code class="language-markdown">| 左对齐 | 右对齐 | 居中对齐 || :-----| ----: | :----: || 单元格 | 单元格 | 单元格 || 单元格 | 单元格 | 单元格 |</code></pre><h2 id="Markdown-高级技巧"><a href="#Markdown-高级技巧" class="headerlink" title="Markdown 高级技巧"></a>Markdown 高级技巧</h2><h3 id="支持的-HTML-元素"><a href="#支持的-HTML-元素" class="headerlink" title="支持的 HTML 元素"></a>支持的 HTML 元素</h3><p>不在 Markdown 涵盖范围之内的标签，都可以直接在文档里面用 HTML 撰写。<br>目前支持的 HTML 元素有：&lt;kbd&gt; &lt;b&gt; &lt;i&gt; &lt;em&gt; &lt;sup&gt; &lt;sub&gt; &lt;br&gt;等 ，如：</p><pre class=" language-markdown"><code class="language-markdown">使用 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>kbd</span><span class="token punctuation">></span></span>Ctrl<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>kbd</span><span class="token punctuation">></span></span>+<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>kbd</span><span class="token punctuation">></span></span>Alt<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>kbd</span><span class="token punctuation">></span></span>+<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>kbd</span><span class="token punctuation">></span></span>Del<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>kbd</span><span class="token punctuation">></span></span> 重启电脑</code></pre><h3 id="转义"><a href="#转义" class="headerlink" title="转义"></a>转义</h3><p>Markdown 使用了很多特殊符号来表示特定的意义，如果需要显示特定的符号则需要使用转义字符，Markdown 使用反斜杠转义特殊字符：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token bold"><span class="token punctuation">**</span>文本加粗<span class="token punctuation">**</span></span> \*\* 正常显示星号 \*\*</code></pre><p>Markdown 支持以下这些符号前面加上反斜杠来帮助插入普通的符号：</p><pre class=" language-md"><code class="language-md">\   反斜线`   反引号*   星号_   下划线{}  花括号[]  方括号()  小括号#   井字号+   加号-   减号.   英文句点!   感叹号</code></pre><h3 id="公式"><a href="#公式" class="headerlink" title="公式"></a>公式</h3><p>Markdown Preview Enhanced 使用 KaTeX 或者 MathJax 来渲染数学表达式。</p><p>KaTeX 拥有比 MathJax 更快的性能，但是它却少了很多 MathJax 拥有的特性。你可以查看 KaTeX supported functions/symbols 来了解 KaTeX 支持那些符号和函数。</p><p>默认下的分隔符：</p><p>$…$ 或者 \(…\) 中的数学表达式将会在行内显示。<br>$$…$$ 或者 \[…\] 或者 ```math 中的数学表达式将会在块内显示。</p><pre class=" language-markdown"><code class="language-markdown">$$\begin{Bmatrix}   a &amp; b \\   c &amp; d\end{Bmatrix}$$$$\begin{CD}   A @>a>> B \\@VbVV @AAcA \\   C @= D\end{CD}$$</code></pre><h2 id="扩展内容"><a href="#扩展内容" class="headerlink" title="扩展内容"></a>扩展内容</h2><p>typora 画流程图、时序图(顺序图)、甘特图<br>复制以下代码使用 typora 的源码模式粘贴到编辑器中查看效果：<br>1、横向流程图源码格式：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token code keyword">    ```mermaid</span><span class="token code keyword">    graph LR</span><span class="token code keyword">    A[方形] -->B(圆角)</span><span class="token code keyword">    B --> C{条件a}</span><span class="token code keyword">    C -->|a=1| D[结果1]</span><span class="token code keyword">    C -->|a=2| E[结果2]</span><span class="token code keyword">    F[横向流程图]</span><span class="token code keyword">    ```</span></code></pre><pre class=" language-mermaid"><code class="language-mermaid">graph LRA[方形] -->B(圆角)    B --> C{条件a}    C -->|a=1| D[结果1]    C -->|a=2| E[结果2]    F[横向流程图]</code></pre><p>2、竖向流程图源码格式：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token code keyword">    ```mermaid</span><span class="token code keyword">    graph TD</span><span class="token code keyword">    A[方形] --> B(圆角)</span><span class="token code keyword">    B --> C{条件a}</span><span class="token code keyword">    C --> |a=1| D[结果1]</span><span class="token code keyword">    C --> |a=2| E[结果2]</span><span class="token code keyword">    F[竖向流程图]</span>    <span class="token code keyword">    ```</span></code></pre><pre class=" language-mermaid"><code class="language-mermaid">graph TDA[方形] --> B(圆角)    B --> C{条件a}    C --> |a=1| D[结果1]    C --> |a=2| E[结果2]    F[竖向流程图]</code></pre><p>3、标准流程图源码格式：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token code keyword">    ```flow</span><span class="token code keyword">    st=>start: 开始框</span><span class="token code keyword">    op=>operation: 处理框</span><span class="token code keyword">    cond=>condition: 判断框(是或否?)</span><span class="token code keyword">    sub1=>subroutine: 子流程</span><span class="token code keyword">    io=>inputoutput: 输入输出框</span><span class="token code keyword">    e=>end: 结束框</span><span class="token code keyword">    st->op->cond</span><span class="token code keyword">    cond(yes)->io->e</span><span class="token code keyword">    cond(no)->sub1(right)->op</span><span class="token code keyword">    ```</span></code></pre><pre class=" language-flow"><code class="language-flow">st=>start: 开始框op=>operation: 处理框cond=>condition: 判断框(是或否?)sub1=>subroutine: 子流程io=>inputoutput: 输入输出框e=>end: 结束框st->op->condcond(yes)->io->econd(no)->sub1(right)->op</code></pre><p>4、标准流程图源码格式（横向）：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token code keyword">    ```flow</span><span class="token code keyword">    st=>start: 开始框</span><span class="token code keyword">    op=>operation: 处理框</span><span class="token code keyword">    cond=>condition: 判断框(是或否?)</span><span class="token code keyword">    sub1=>subroutine: 子流程</span><span class="token code keyword">    io=>inputoutput: 输入输出框</span><span class="token code keyword">    e=>end: 结束框</span><span class="token code keyword">    st(right)->op(right)->cond</span><span class="token code keyword">    cond(yes)->io(bottom)->e</span><span class="token code keyword">    cond(no)->sub1(right)->op</span><span class="token code keyword">    ```</span></code></pre><pre class=" language-flow"><code class="language-flow">st=>start: 开始框op=>operation: 处理框cond=>condition: 判断框(是或否?)sub1=>subroutine: 子流程io=>inputoutput: 输入输出框e=>end: 结束框st(right)->op(right)->condcond(yes)->io(bottom)->econd(no)->sub1(right)->op</code></pre><p>5、UML时序图源码样例：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token code keyword">    ```sequence</span><span class="token code keyword">    对象A->对象B: 对象B你好吗?（请求）</span><span class="token code keyword">    Note right of 对象B: 对象B的描述</span><span class="token code keyword">    Note left of 对象A: 对象A的描述(提示)</span><span class="token code keyword">    对象B-->对象A: 我很好(响应)</span><span class="token code keyword">    对象A->对象B: 你真的好吗？</span><span class="token code keyword">    ```</span></code></pre><pre class=" language-sequence"><code class="language-sequence">对象A->对象B: 对象B你好吗?（请求）Note right of 对象B: 对象B的描述Note left of 对象A: 对象A的描述(提示)对象B-->对象A: 我很好(响应)对象A->对象B: 你真的好吗？</code></pre><p>6、UML时序图源码复杂样例：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token code keyword">    ```sequence</span><span class="token code keyword">    Title: 标题：复杂使用</span><span class="token code keyword">    对象A->对象B: 对象B你好吗?（请求）</span><span class="token code keyword">    Note right of 对象B: 对象B的描述</span><span class="token code keyword">    Note left of 对象A: 对象A的描述(提示)</span><span class="token code keyword">    对象B-->对象A: 我很好(响应)</span><span class="token code keyword">    对象B->小三: 你好吗</span><span class="token code keyword">    小三-->>对象A: 对象B找我了</span><span class="token code keyword">    对象A->对象B: 你真的好吗？</span><span class="token code keyword">    Note over 小三,对象B: 我们是朋友</span><span class="token code keyword">    participant C</span><span class="token code keyword">    Note right of C: 没人陪我玩</span><span class="token code keyword">    ```</span></code></pre><pre class=" language-sequence"><code class="language-sequence">Title: 标题：复杂使用对象A->对象B: 对象B你好吗?（请求）Note right of 对象B: 对象B的描述Note left of 对象A: 对象A的描述(提示)对象B-->对象A: 我很好(响应)对象B->小三: 你好吗小三-->>对象A: 对象B找我了对象A->对象B: 你真的好吗？Note over 小三,对象B: 我们是朋友participant CNote right of C: 没人陪我玩</code></pre><p>7、UML标准时序图样例：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token code keyword">    ```mermaid</span><span class="token code keyword">    %% 时序图例子,-> 直线，-->虚线，->>实线箭头</span><span class="token code keyword">      sequenceDiagram</span><span class="token code keyword">        participant 张三</span><span class="token code keyword">        participant 李四</span><span class="token code keyword">        张三->王五: 王五你好吗？</span><span class="token code keyword">        loop 健康检查</span><span class="token code keyword">            王五->王五: 与疾病战斗</span><span class="token code keyword">        end</span><span class="token code keyword">        Note right of 王五: 合理 食物 &lt;br/>看医生...</span><span class="token code keyword">        李四-->>张三: 很好!</span><span class="token code keyword">        王五->李四: 你怎么样?</span><span class="token code keyword">        李四-->王五: 很好!</span><span class="token code keyword">    ```</span></code></pre><pre class=" language-mermaid"><code class="language-mermaid">%% 时序图例子,-> 直线，-->虚线，->>实线箭头  sequenceDiagram    participant 张三    participant 李四    张三->王五: 王五你好吗？    loop 健康检查        王五->王五: 与疾病战斗    end    Note right of 王五: 合理 食物 <br/>看医生...    李四-->>张三: 很好!    王五->李四: 你怎么样?    李四-->王五: 很好!</code></pre><p>8、甘特图样例：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token code keyword">    ```mermaid</span><span class="token code keyword">            gantt</span><span class="token code keyword">            dateFormat  YYYY-MM-DD</span><span class="token code keyword">            title 软件开发甘特图</span><span class="token code keyword">            section 设计</span><span class="token code keyword">            需求                      :done,    des1, 2014-01-06,2014-01-08</span><span class="token code keyword">            原型                      :active,  des2, 2014-01-09, 3d</span><span class="token code keyword">            UI设计                     :         des3, after des2, 5d</span><span class="token code keyword">        未来任务                     :         des4, after des3, 5d</span><span class="token code keyword">            section 开发</span><span class="token code keyword">            学习准备理解需求                      :crit, done, 2014-01-06,24h</span><span class="token code keyword">            设计框架                             :crit, done, after des2, 2d</span><span class="token code keyword">            开发                                 :crit, active, 3d</span><span class="token code keyword">            未来任务                              :crit, 5d</span><span class="token code keyword">            耍                                   :2d</span><span class="token code keyword">            section 测试</span><span class="token code keyword">            功能测试                              :active, a1, after des3, 3d</span><span class="token code keyword">            压力测试                               :after a1  , 20h</span><span class="token code keyword">            测试报告                               : 48h</span><span class="token code keyword">    ```</span></code></pre><pre class=" language-mermaid"><code class="language-mermaid">        gantt        dateFormat  YYYY-MM-DD        title 软件开发甘特图        section 设计        需求                      :done,    des1, 2014-01-06,2014-01-08        原型                      :active,  des2, 2014-01-09, 3d        UI设计                     :         des3, after des2, 5d    未来任务                     :         des4, after des3, 5d        section 开发        学习准备理解需求                      :crit, done, 2014-01-06,24h        设计框架                             :crit, done, after des2, 2d        开发                                 :crit, active, 3d        未来任务                              :crit, 5d        耍                                   :2d        section 测试        功能测试                              :active, a1, after des3, 3d        压力测试                               :after a1  , 20h        测试报告                               : 48h</code></pre>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> MD </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript 梳理</title>
      <link href="/2022/03/23/javascript/"/>
      <url>/2022/03/23/javascript/</url>
      
        <content type="html"><![CDATA[<h1 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h1><h2 id="书写位置"><a href="#书写位置" class="headerlink" title="书写位置"></a>书写位置</h2><h3 id="行内："><a href="#行内：" class="headerlink" title="行内："></a>行内：</h3><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>唐伯虎<span class="token punctuation">"</span></span> <span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>alert(<span class="token punctuation">'</span>秋香姐<span class="token punctuation">'</span>)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></code></pre><h3 id="内嵌："><a href="#内嵌：" class="headerlink" title="内嵌："></a>内嵌：</h3><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">alert<span class="token operator">=</span><span class="token string">"lalalalalallla"</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span></code></pre><h3 id="引用外部："><a href="#引用外部：" class="headerlink" title="引用外部："></a>引用外部：</h3><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>my.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span></code></pre><h2 id="注释："><a href="#注释：" class="headerlink" title="注释："></a>注释：</h2><pre class=" language-JavaScript"><code class="language-JavaScript">//  单行注释/*  */  多行注释（块注释，块级注释）</code></pre><h2 id="输入-输出："><a href="#输入-输出：" class="headerlink" title="输入\输出："></a>输入\输出：</h2><p>prompt()：带有输入框的弹窗，默认值类型为字符型<br>console.log()：控制台输出<br>alert()：内容弹窗  </p><h2 id="变量："><a href="#变量：" class="headerlink" title="变量："></a>变量：</h2><p>var a： var为声明变量关键字，不使用的话为全局变量<br>a=12：赋值<br>var a,b,c,d,ab：可同时声明多个变量<br>var a=12：可同时声明变量并赋值，也可同时声明多个变量并赋值，也称为变量初始化<br>变量更新：同一个变量进行多次赋值后，存储的是最后一次赋给它的值。  </p><h2 id="特殊情况："><a href="#特殊情况：" class="headerlink" title="特殊情况："></a>特殊情况：</h2><p>只声明，不赋值输出</p><pre class=" language-JavaScript"><code class="language-JavaScript">var a;console.log(a);</code></pre><p>返回undefined<br>不声明不赋值输出</p><pre class=" language-JavaScript"><code class="language-JavaScript">console.log(b);</code></pre><p>会报错<br>不声明，只赋值输出</p><pre class=" language-JavaScript"><code class="language-JavaScript">age=10;console.log(age);</code></pre><p>输出为10（这是全局变量，不推荐使用）</p><h2 id="变量名的命名规则："><a href="#变量名的命名规则：" class="headerlink" title="变量名的命名规则："></a>变量名的命名规则：</h2><p>只能包含大小写字母、数字，下划线、$符号及其组合，不能以数字开头，区分大小写，不能是var等关键字，尽量遵循驼峰命名法</p><h2 id="数据类型："><a href="#数据类型：" class="headerlink" title="数据类型："></a>数据类型：</h2><p>只有当给声明好的变量赋值后，才能确定该变量的数据类型，且可以变化</p><h3 id="简单数据类型："><a href="#简单数据类型：" class="headerlink" title="简单数据类型："></a>简单数据类型：</h3><p>number：数字型，不区分整数与小数  </p><h3 id="进制表示："><a href="#进制表示：" class="headerlink" title="进制表示："></a>进制表示：</h3><p>（默认会直接转换成十进制）<br>二进制：0，1<br>八进制：0-7，以0开头<br>十进制，0-9<br>十六进制：0-9，A-F，以0x开头  </p><h3 id="js数字范围："><a href="#js数字范围：" class="headerlink" title="js数字范围："></a>js数字范围：</h3><p>number.max_value：表示数值的最大值，为1.7976……太长了，把这个放到alert里面自己看吧<br>number.min_value：表示数值的最小值，为5e-324  </p><h3 id="特殊值："><a href="#特殊值：" class="headerlink" title="特殊值："></a>特殊值：</h3><p>infinity：正无穷大<br>-infinity：负无穷大，就是无穷小<br>NaN: not a number，表示非数值<br>is NaN：判断值是否为非数字，是数字，返回false，是非数字，返回true<br>string：字符串型<br>‘string’：被单引号或双引号包围的数据为字符串  </p><h2 id="字符串嵌套："><a href="#字符串嵌套：" class="headerlink" title="字符串嵌套："></a>字符串嵌套：</h2><p>引号遵循就近匹配原则  </p><h2 id="转义符"><a href="#转义符" class="headerlink" title="转义符"></a>转义符</h2><pre class=" language-md"><code class="language-md">\n：换行\b：空格\\：反斜杠\\'：单引号 '\"：双引号 "\t：tab  缩进\b：一个空格，blank</code></pre><p>变量名.length：返回变量长度（字符串个数）<br>变量 + 变量：字符串拼接（两个数值中间用+会进行求和计算）<br>也可以使用英文逗号分隔，不过输出时中间有空格<br>Boolean：布尔型<br>true参与数值运算时当1，false为0.<br>undefined：未定义类型<br>undefined与字符串相连当字符处理，参与数字运算返回NaN<br>null：表示空值<br>null与字符相连同上，参与数字运算当0<br>typeof 变量名：返回变量类型<br>prompt取得的值是字符型<br>Tip：在chrome浏览器f12的console界面，返回值呈蓝色表示数值型，黑色代表字符串，深蓝色表示布尔型，浅灰色表示undefined和null<br>字面量：是固定赋给变量的值  </p><h2 id="数据类型转换"><a href="#数据类型转换" class="headerlink" title="数据类型转换"></a>数据类型转换</h2><h3 id="一、转换成字符型"><a href="#一、转换成字符型" class="headerlink" title="一、转换成字符型"></a>一、转换成字符型</h3><p>变量类型-&gt;字符（假设变量赋值为任意数字）<br>1、变量.toString();<br>2、String(变量或数据)<br>3、隐式转换<br>*变量 + ‘’</p><h3 id="二、转换成数值型"><a href="#二、转换成数值型" class="headerlink" title="二、转换成数值型"></a>二、转换成数值型</h3><p>*1、parseInt(变量或数据)    //整数转换数值，小数取整；’120px’会去掉数字后面的本身不存在数值属性的数据并转换120为数值，rem120px返回值为NaN<br><em>2、parseFloat(变量或数据)    //小数转换数值，细节同上<br>3、Number(变量或数据)      //强制转换<br>4、运算符+-</em>/   //隐式转换，注意+本身具有连接字符的意义存在，部分场景需要对字符进行强制转换后使用  </p><h3 id="转换布尔型："><a href="#转换布尔型：" class="headerlink" title="转换布尔型："></a>转换布尔型：</h3><p>Boolean()：空值、否定值会被转换成false，如 ‘’、0、NaN、null、undefined。其余值或状态都会转换成true  </p><h3 id="运算符："><a href="#运算符：" class="headerlink" title="运算符："></a>运算符：</h3><p>+-*/%：加减乘除，最后一个为取余(取模)，因浮点数精度问题，没有特殊要求不要使用浮点数(小数)直接进行算数运算，包括判断是否相等  </p><h3 id="表达式："><a href="#表达式：" class="headerlink" title="表达式："></a>表达式：</h3><p>由数字，运算符，变量等组成的式子成为表达式且有返回值；有等号时表达式运算右边的运算结果赋值给左边变量  </p><h3 id="前置递增-递减，后置递增-递减："><a href="#前置递增-递减，后置递增-递减：" class="headerlink" title="前置递增\递减，后置递增\递减："></a>前置递增\递减，后置递增\递减：</h3><p>++和–为递增\递减运算符，放在变量前面称为前置递增\递减，放在变量后面成称为后置递增\递减。此运算符只能与变量配合使用。<br>++num：相当于num = num + 1，先加1，再返回值。var age=10; console.log(++age + 10); 结果为21<br>num++：相当于num = num + 1，先使用原值运行当前行代码，运行完最后再加1。var age=10; console.log(age++ + 10); 结果为20  </p><h3 id="比较运算符-关系运算符-："><a href="#比较运算符-关系运算符-：" class="headerlink" title="比较运算符(关系运算符)："></a>比较运算符(关系运算符)：</h3><p>&lt;、&gt;、&gt;=、&lt;=、==、!=、===、!==：依次为 小于、大于、大于等于、小于等于、判断是否相等，在一定条件下此符号默认会将字符串类型转换成数值型、不等、全等、不全等，后两个判断要求值和数据类型全部一致；如果使用判断条件成立，返回值为true，反之为false  </p><h3 id="逻辑运算符："><a href="#逻辑运算符：" class="headerlink" title="逻辑运算符："></a>逻辑运算符：</h3><p>他是用来进行布尔值运算的，返回值也是布尔值<br>&amp;&amp;：逻辑与，两值为true，为true，有一个为false，结果为false<br>||：逻辑或，两个值有一个为true，值为true，都为false，值为false<br>!：逻辑非，取反，与true使用结果为false，与false用值为ture  </p><h4 id="逻辑中断-短路运算-："><a href="#逻辑中断-短路运算-：" class="headerlink" title="逻辑中断(短路运算)："></a>逻辑中断(短路运算)：</h4><p>原理：存在多个表达式或值时，左边所得的值可以确定结果时，不再继续运算右边的值<br>短路与：左边为真，返回右边的值；左边为假，返回左边的值<br>eq：<code>123 &amp;&amp; 456</code>；返回值为 456<br><code>0 &amp;&amp; 456</code>；返回值为 0<br><code>0 &amp;&amp; 1+2 &amp;&amp; 456 * 2342342</code>；返回值为 0<br>短路或：左边为真，返回左边的值；左边为假，返回右边的值<br><code>123 || 456</code>   返回值为123<br><code>0 || 456</code> 返回值为456<br><code>0 || 456 || 456 * 789</code>  返回值为456  </p><h3 id="赋值运算符："><a href="#赋值运算符：" class="headerlink" title="赋值运算符："></a>赋值运算符：</h3><p><code>=、+=、-+、*=、/=、%=</code>：依次为直接<code>赋值\先加\减\乘\除\取余后再赋值</code><br>eq：<code>num += 2</code>  相当于<code>num = num + 2</code> </p><h3 id="运算符优先级"><a href="#运算符优先级" class="headerlink" title="运算符优先级:"></a>运算符优先级:</h3><table><thead><tr><th align="center">优先级</th><th align="center">名称</th><th align="center">举例</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">小括号</td><td align="center">()</td></tr><tr><td align="center">2</td><td align="center">一元运算符</td><td align="center">++、–、！</td></tr><tr><td align="center">3</td><td align="center">算术运算符</td><td align="center">先*/%，后+-</td></tr><tr><td align="center">4</td><td align="center">关系运算符</td><td align="center">&gt;、&lt;、&gt;=、&lt;=</td></tr><tr><td align="center">5</td><td align="center">等于判断运算符</td><td align="center">==、!=、===、!==</td></tr><tr><td align="center">6</td><td align="center">逻辑运算符</td><td align="center">先&amp;&amp;后||</td></tr><tr><td align="center">7</td><td align="center">赋值运算符</td><td align="center">=</td></tr><tr><td align="center">8</td><td align="center">逗号运算符</td><td align="center">,</td></tr></tbody></table><h2 id="分支："><a href="#分支：" class="headerlink" title="分支："></a>分支：</h2><h3 id="if分支："><a href="#if分支：" class="headerlink" title="if分支："></a>if分支：</h3><p>基本结构：<code>if (条件表达式) {执行语句} (单分支语句)</code><br>当条件为真时，则执行语句；条件为假时，跳出if语句，执行后面的代码</p><h3 id="双分支语句："><a href="#双分支语句：" class="headerlink" title="双分支语句："></a>双分支语句：</h3><p>结构：<code>if (条件表达式) {执行语句1} else {执行语句2}</code></p><h3 id="多分支语句："><a href="#多分支语句：" class="headerlink" title="多分支语句："></a>多分支语句：</h3><p><code>if(条件表达式1){执行语句1}else if(条件表达式2){执行语句2}……else{执行语句n}</code></p><h3 id="三元表达式："><a href="#三元表达式：" class="headerlink" title="三元表达式："></a>三元表达式：</h3><p><code>条件表达式 ? 表达式1 : 表达式2</code><br>思路：当表达式值为真时，返回表达式1的值，否则返回2的值</p><h3 id="switch分支语句："><a href="#switch分支语句：" class="headerlink" title="switch分支语句："></a>switch分支语句：</h3><p>基本语法：<br><code>switch(表达式){case 值1: 执行语句1; break; case 值2: 执行语句2;break; … default: 执行语句n;}</code><br>思路：表达式与各个case后的值进行匹配，如果匹配成功，执行该case下的语句，否则继续向下匹配，没有匹配的，执行default后面的语句。<br>注意点：switch中的表达式是一个变量；匹配方式是全等，也就是值和数据类型全部一样；break不强制写入，但是会一直往下执行下一个case且依旧执行其后面的语句<br>Switch语句对结果的判断是不错的选择，适用于分支较多的案例<br>If适用于范围判断，分支较短的情况</p><h2 id="循环："><a href="#循环：" class="headerlink" title="循环："></a>循环：</h2><h3 id="for循环："><a href="#for循环：" class="headerlink" title="for循环："></a>for循环：</h3><p>基本语法<br><code>for (初始化变量; 条件表达式; 操作表达式) {循环体}</code><br>初始化变量：使用var声明的普通变量，通常用作计数器使用<br>条件表达式：用来决定每次循环是否继续执行，即终止条件<br>操作表达式：每次循环最后执行的代码，用于变换计数器的更新  </p><h3 id="断点调试："><a href="#断点调试：" class="headerlink" title="断点调试："></a>断点调试：</h3><p>chrome：f12-&gt;sources,f11：一步一步执行<br>实操1：</p><pre class=" language-md"><code class="language-md">求1到100之和求1到100之和的平均值分别求1到100之间奇偶之和求1到100之间能被三整除的数字之和</code></pre><p>实操2：</p><pre class=" language-md"><code class="language-md">求班级总分数和平均分思路：1输入总人数;2输入每个学生的成绩;3求成绩之和与平均成绩  编程思路：使用prompt进行数据输入，使用alert实现最终输出  </code></pre><p>实操3：一行打印5个星号</p><h3 id="双重for循环（嵌套）："><a href="#双重for循环（嵌套）：" class="headerlink" title="双重for循环（嵌套）："></a>双重for循环（嵌套）：</h3><p>基本格式：<br><code>for(初始化变量1; 条件表达式1; 操作表达式1){for(初始化变量2; 条件表达式2; 操作表达式2){循环体}}</code></p><h3 id="while循环："><a href="#while循环：" class="headerlink" title="while循环："></a>while循环：</h3><p>基本格式：<br><code>while(条件表达式){循环体}</code><br><code>注意计数器的存在和变化，防止死循环</code></p><h3 id="do-while循环："><a href="#do-while循环：" class="headerlink" title="do while循环："></a>do while循环：</h3><p>基本结构：<br><code>do {循环体}while(条件表达式)</code>：与上面不同的是，先执行一次循环体，再进行判断，如果为真，继续执行循环体，直到判断为假，退出循环。同样注意计数器及其的变化<br>continue关键字：跳出本次循环，执行下一次循环<br>break关键字：跳出该循环结构  </p><h2 id="数组："><a href="#数组：" class="headerlink" title="数组："></a>数组：</h2><p>一组数据的集合，每个数据都是元素<br>创建数组：利用new 创建(空)数组<br><code>var 数组名= new Array();</code><br>自定义数组：每个元素使用英文逗号隔开，最后一个不使用标点符号<br><code>var 变量=[1,'2',true];</code><br>获取数组元素：通过索引（下标）获取元素，下标从0开始。如果使用没有元素个数的下标，会返回undefined。迪丽古力马尔扎哈<br><code>var 变量=[1,'2',true];</code><br><code>console.log(变量[索引号]);</code><br>遍历数组：使用循环的方式取出数组元素，这个方式叫遍历，注意下标范围，从0开始。<br>数组长度：获取数组元素个数<br><code>数组名.length</code>  </p><h3 id="新增数组元素："><a href="#新增数组元素：" class="headerlink" title="新增数组元素："></a>新增数组元素：</h3><p>1、可以通过修改数组长度（数组名.length）<br><code>数组名.length = 大于原本数组长度的正整数;</code><br>增加长度后，由于没有值，新增进来的元素默认值是undefined。<br>*2、通过修改数组索引追加元素，也可以通过该方式修改已有元素<br><code>数组名[下标号]=追加元素;</code><br>不要直接给数组名赋值，会变成普通变量  </p><h2 id="函数："><a href="#函数：" class="headerlink" title="函数："></a>函数：</h2><p>封装了可以重复使用的代码的代码块</p><h3 id="声明函数"><a href="#声明函数" class="headerlink" title="声明函数"></a>声明函数</h3><p><code>function 方法名(变量){执行语句}</code><br>变量可以写多个，用英文都逗好隔开，函数命名一般用动词，可以为空；且形参在传递完参数之后就没有任何值了，可以复用<br>调用方法：方法名(值);<br>值的个数要与该方法的变量数量相同，用英文都逗好隔开;多余形参个数会正常输出，剩下的的值会丢弃，少于形参会返回NaN</p><h3 id="参数传递："><a href="#参数传递：" class="headerlink" title="参数传递："></a>参数传递：</h3><p>声明函数名后面小括号里面的变量为形参（形式参数），引用函数名后面小括号里面的变量或值称为实参（实际参数）<br>利用函数求任意两个数的和以及累加和</p><h3 id="return：返回值"><a href="#return：返回值" class="headerlink" title="return：返回值"></a>return：返回值</h3><p>写在函数体最后，用来返回结果，并终止后面的代码执行<br>使用方法：return 需要返回的结果（变量/值/可以有结果的表达式）  </p><pre class=" language-md"><code class="language-md">求任意两个数的最大值求数组中的最大值利用return终止函数并且只能返回一个值</code></pre><p>函数返回值的注意事项:<br>有终止后续后面代码的执行<br>只能返回最后一个值，包括在return同一行上用逗号分隔的变量，可以使用数组进行多个变量输出<br>每个函数都有返回值，如果有return则返回return后面的返回值，没有则返回undefined<br>break，continue，return的区别<br>break结束当前循环体<br>continue跳出本次循环，继续执行下次外层循环<br>return不仅可以推出循环，还可以返回return语句中的值，同时还可以结束当前函数体后续的代码</p><h3 id="对象arguments的使用："><a href="#对象arguments的使用：" class="headerlink" title="对象arguments的使用："></a>对象arguments的使用：</h3><p>当不确定实参个数的时候，可利用函数arguments存储传递过来的实参，以伪数组的方式</p><h3 id="伪数组："><a href="#伪数组：" class="headerlink" title="伪数组："></a>伪数组：</h3><p>1、具有数组的length属性<br>2、按照索引的方式进行存储<br>3、没有真正数组的方法<br>4、只有函数内置了对象arguments</p><pre class=" language-md"><code class="language-md">利用函数求任意一组数的最大值利用函数翻转数组reverse利用函数封装冒泡排序利用函数判断闰年</code></pre><p>在一个函数里面可以调用另一个函数，将按顺序执行</p><pre class=" language-md"><code class="language-md">输出2月份的天数</code></pre><p>函数的声明<br>1、利用函数关键字自定义函数名：function 函数名(){}<br>2、匿名函数：此方式定义的函数没有函数名，引用方式使用<code>变量名();</code>的方式，也可以实现参数传递，返回的只是一个值；<code>var 变量名 = function(){}</code></p><h2 id="作用域"><a href="#作用域" class="headerlink" title="作用域"></a>作用域</h2><p>作用域：代码名字在某个范围内起作用，这个范围就是作用域，为了减少命名冲突<br>分类<br>全局作用域：整个script标签内或整个js文件中声明的变量<br>局部作用域：函数内声明的变量（函数作用域）<br>变量的作用域<br>分类<br>全局变量：在<code>全局作用域</code>下声明的变量；其中，未使用var声明的变量为全局变量<br>局部变量：在<code>局部作用域</code>下声明的变量；其中，函数的形参也可视为局部变量<br>从执行效率看：<br>全局变量只有关闭浏览器时才会释放内存资源，局部变量在执行完当前所在生效范围的程序块后就会释放内存</p><h3 id="块级作用域（es6）"><a href="#块级作用域（es6）" class="headerlink" title="*块级作用域（es6）"></a>*块级作用域（es6）</h3><p>使用{}内部声明的为块级作用域</p><h3 id="作用域链"><a href="#作用域链" class="headerlink" title="作用域链"></a>作用域链</h3><p>从本级作用域开始向上级一层一层查找本层需要的值或变量，遵循就近原则取值。<br>作用域链案例：<br>1、读程序</p><pre class=" language-JavaScript"><code class="language-JavaScript">function f1(){    var num = 123;    function f2(){        console.log(num);    }    f2();}var num = 456;f1();</code></pre><p>读程序2</p><pre class=" language-JavaScript"><code class="language-JavaScript">var a=1;function fn1(){    var a=2;    var b='22';    fn2();    function fn2(){        var a=3;        fn3();        function fn3(){            var a=4;            console.log(a);            console.log(b);        }    }}fn1();</code></pre><h2 id="预解析"><a href="#预解析" class="headerlink" title="预解析"></a>预解析</h2><p>js解析器在进行解析代码的时候会进行两步操作：预解析和代码执行；js引擎会把js中所有<code>var</code>还有<code>function</code>提升到当前作用域的最前面</p><h3 id="预解析-1"><a href="#预解析-1" class="headerlink" title="预解析"></a>预解析</h3><p>分类：<br>变量预解析（变量提升）<br>在当前作用域内，把所有已经声明<code>(var)</code>的变量提升到最前面,不提升赋值操作。<br>函数预解析（函数提升）<br>在当前作用域内，把所有已经声明<code>(function)</code>的函数提升到最前面，不调用函数。  </p><h3 id="代码执行"><a href="#代码执行" class="headerlink" title="代码执行"></a>代码执行</h3><p>按照代码书写顺序从上到下执行</p><h2 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h2><p>官语：是一组无序的相关属性和方法的集合。<br>对象是由属性和方法组成<br>属性：事物的特征。<br>方法：事物的行为。</p><h3 id="创建对象"><a href="#创建对象" class="headerlink" title="创建对象"></a>创建对象</h3><p>可以通过字面量创建，new object关键字，构造函数创建对象<br>通过字面量创建<br>使用{}创建<br>eq：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>uname <span class="token operator">=</span> <span class="token string">'张三'</span><span class="token punctuation">,</span>age<span class="token operator">=</span><span class="token number">18</span><span class="token punctuation">,</span>sex<span class="token operator">=</span><span class="token string">'男'</span><span class="token punctuation">,</span>sayHi<span class="token punctuation">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'hi~'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>对象的属性或者方法是采用键值对的方式创建<code>{键(属性名):值(属性值)}</code>，多个属性或方法中间用逗号分隔，方法冒号后面跟的是一个匿名函数  </p><h3 id="属性调用"><a href="#属性调用" class="headerlink" title="属性调用"></a>属性调用</h3><p>使用<code>对象名.属性名</code>的格式  </p><pre class=" language-javascript"><code class="language-javascript">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>uname<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>或  <code>对象名['属性名']</code></p><pre class=" language-javascript"><code class="language-javascript">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obg<span class="token punctuation">[</span><span class="token string">'age'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="方法调用"><a href="#方法调用" class="headerlink" title="方法调用"></a>方法调用</h3><p>同理，对象的方法调用方式为<code>对象名.方法名()</code></p><pre class=" language-javascript"><code class="language-javascript">obj<span class="token punctuation">.</span><span class="token function">sayHi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="关键字创建"><a href="#关键字创建" class="headerlink" title="关键字创建"></a>关键字创建</h3><p>直接上例子：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">object</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>通过赋值的方式进行追加</p><pre class=" language-JavaScript"><code class="language-JavaScript">obj.uname = '张三';obj.age = 18;obj.sex = '男';obj.sayHi = function(){console.log('hi~');}</code></pre><h3 id="构造函数创建"><a href="#构造函数创建" class="headerlink" title="构造函数创建"></a>构造函数创建</h3><p>是把对象里面的一些相同的属性和方法抽象出来封装到函数里面<br>语法格式：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">构造函数名</span><span class="token punctuation">(</span>形参<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>属性名<span class="token operator">=</span>值<span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>方法名<span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>调用方式：</p><pre class=" language-JavaScript"><code class="language-JavaScript">var 变量=new 构造函数名(实参或值);// 构造函数内的方法调用变量.方法名(实参);</code></pre><p>Tip：构造函数名的首字母要大写，不需要return，</p><h3 id="遍历对象"><a href="#遍历对象" class="headerlink" title="遍历对象"></a>遍历对象</h3><p><code>for…in…</code><br><code>for(变量in对象){循环体}</code></p><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">// eq:</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> k <span class="token keyword">in</span> obj<span class="token punctuation">)</span><span class="token punctuation">{</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">}</span></code></pre><h3 id="内置对象"><a href="#内置对象" class="headerlink" title="内置对象"></a>内置对象</h3><p>对象分类：自定义对象、内置对象、浏览器对象<br>前两种是js基础，属于ecmascript，第三个为js独有</p><h3 id="查文档"><a href="#查文档" class="headerlink" title="查文档"></a>查文档</h3><p>可在<a href="https://developer.mozilla.org/zh-CN/">mdn</a>查询js对象的相关信息，包括对象的属性和对象的方法  </p><h3 id="常用内置对象"><a href="#常用内置对象" class="headerlink" title="常用内置对象"></a>常用内置对象</h3><p>math数学对象最大值<br>math.max(一组数字);求一组数字中最大的数<br>封装自己的数学对象<br>通过创建自定义对象可以模拟内置数学对象  </p><pre class=" language-javascript"><code class="language-javascript">math<span class="token punctuation">.</span>PI      <span class="token comment" spellcheck="true">//圆周率</span>math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//向下取整(去小数点取整)</span>math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">//向上取整(取小数点加一取整)</span>math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//四舍五入</span>math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token comment" spellcheck="true">//绝对值</span>math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token comment" spellcheck="true">//最大值</span>math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token comment" spellcheck="true">//最小值</span></code></pre><p>随机数<code>math.rendmom()</code>,取值范围为左闭右开<br>补充：开闭区间是一个数学概念，开区间使用符号小括号()表示，闭区间使用符号中括号[]表示，闭区间包含了两个端点，而开区间则不包含两个端点<br>取随机整数</p><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">// 得到两个数之间的整数，且包含这两个数</span><span class="token keyword">function</span> <span class="token function">getRandom</span><span class="token punctuation">(</span>min<span class="token punctuation">,</span>max<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>max<span class="token operator">-</span>min<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span>min    <span class="token punctuation">}</span></code></pre><p>练习</p><pre class=" language-md"><code class="language-md">猜数字猜1到10之间会出现哪个数，猜中了，返回恭喜，猜错了，返回抱歉</code></pre><p>变种：</p><pre class=" language-md"><code class="language-md">猜数字猜1到10之间会出现哪个数，用户给出的数字大于猜测数字，提示大了，并继续猜，反之提示小了，依旧继续猜，猜中，返回正确</code></pre><p>参考：<a href="https://www.bilibili.com/video/BV1Sy4y1C7ha?p=162">猜数字</a>  </p><h3 id="Date日期对象"><a href="#Date日期对象" class="headerlink" title="Date日期对象"></a>Date日期对象</h3><p>date是一个构造函数，需要使用new来调用  </p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">var</span> date<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>当没有参数时，返回当前系统下的当前时间<br>参数格式：年月日使用逗号隔开（2008,08,08），或用横杠连接的字符串，时间时分秒用分号分隔（’2008-8-8 8:8:8’）</p><h4 id="格式化日期"><a href="#格式化日期" class="headerlink" title="格式化日期"></a>格式化日期</h4><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">var</span> date<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>date<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//返回当前年份</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>date<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">//返回月份减一的数字</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>date<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//返回当前日期</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>date<span class="token punctuation">.</span><span class="token function">getDay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token comment" spellcheck="true">//返回星期，从周日到周六的顺序，周日返回0（许多英语国家、犹太教、日本的习惯）</span></code></pre><h4 id="格式化时间"><a href="#格式化时间" class="headerlink" title="格式化时间"></a>格式化时间</h4><pre class=" language-javascript"><code class="language-javascript">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>date<span class="token punctuation">.</span><span class="token function">getHours</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//时</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>date<span class="token punctuation">.</span><span class="token function">getMinutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//分</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>date<span class="token punctuation">.</span><span class="token function">getSeconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//秒</span></code></pre><h4 id="总毫秒数（时间戳）"><a href="#总毫秒数（时间戳）" class="headerlink" title="总毫秒数（时间戳）"></a>总毫秒数（时间戳）</h4><p>Data对象的起始时间为1970年1月1日（世界标准时间）（<a href="https://www.baidu.com/s?ie=UTF-8&amp;wd=%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9A%84%E6%9C%80%E6%97%A9%E6%97%B6%E9%97%B4%E4%B8%BA%E4%BB%80%E4%B9%88%E6%97%B61970%E5%B9%B4">相关来源</a>）<br>获得date总毫秒数，是距1970年1月1日0时0分0秒过去了多少毫秒<br>1、通过方法：valueOf()    getTime()<br>2、实例化方式：var 变量= +new data();<br>3、H5新增：Date.now()</p><pre class=" language-md"><code class="language-md">案例：倒计时思路:使用时间戳，用将来的时间戳减去当前的时间戳，然后进行天时分秒转换换算与公式：1秒=1000毫秒1分钟=60秒1小时=60分钟1天=24小时天数=总秒数/60/60/24小时=总秒数/60/60%24分钟=总秒数/60%60秒=总秒数%60注意要取整，使用parseInt()</code></pre><h3 id="数组对象"><a href="#数组对象" class="headerlink" title="数组对象"></a>数组对象</h3><p>创建数组：new Array();创建一个空数组，两个以上的参数为数组，一个参数不是数组；var arr=[1,2,3];字面量创建数组</p><h4 id="检测是否是数组"><a href="#检测是否是数组" class="headerlink" title="检测是否是数组"></a>检测是否是数组</h4><p>1、instanceof逻辑运算符：判断变量是否为数组,是为true，否为false<br>使用方法:<br>(变量 instanceof Array)<br>2、Array.isArray(变量)：返回值为true和false</p><h4 id="添加数组元素"><a href="#添加数组元素" class="headerlink" title="添加数组元素"></a>添加数组元素</h4><p>push()：追加数组元素；且有返回值，为追加完成之后数组的长度；arr.push([参数1，[参数2，……]])<br>unshift()：前端插入数组元素；特性同上；arr.unshift([参数1，[参数2，……]])</p><h4 id="删除数组元素"><a href="#删除数组元素" class="headerlink" title="删除数组元素"></a>删除数组元素</h4><p>pop():删除最后一个数组元素；返回值为被删除的元素；arr.pop()<br>shift():删除第一个数组元素；特性同上；arr.shift()</p><pre class=" language-md"><code class="language-md">案例：筛选数组要求将数组[1500,1200,2000,2100,1800]中超过2000的删除，剩余的放到新数组中</code></pre><h4 id="数组元素排序"><a href="#数组元素排序" class="headerlink" title="数组元素排序"></a>数组元素排序</h4><p>翻转数组reverse()：arr.reverse();<br>冒泡排序sort()：arr.sort();仅限个位数<br>冒泡排序方法完善：arr.sort(function(a,b){return a - b;});其中，a-b为升序排序，降序为b-a</p><h4 id="数组索引方法："><a href="#数组索引方法：" class="headerlink" title="数组索引方法："></a>数组索引方法：</h4><p>indexOf(数组元素):返回该元素在数组中的索引号；从前往后查找，只返回第一个满足条件的索引号，没有满足条件的元素时，返回-1；arr.indexOf(‘zhangsan’)<br>lastIndexOf(数组元素)：返回该元素在数组中的索引号；从后往前查找，只返回第一个满足条件的索引号，没有满足条件的元素时，返回-1；arr.lastIndexOf(‘zhangsan’)</p><pre class=" language-md"><code class="language-md">案例：数组元素去重删掉数组['c','a','z','a','x','a','x','c','b',]中相同数组元素，只保留一个，并放到新数组中  思路：使用旧数组元素与新数组中的元素进行一一对比，有相同的，不进行添加，没有相同的，添加到新数组中  </code></pre><h4 id="数组转换为字符串"><a href="#数组转换为字符串" class="headerlink" title="数组转换为字符串"></a>数组转换为字符串</h4><p>toString()：将数数组转换为字符；arr.toString()<br>join([分隔符])：使用分隔符进行链接转换，分隔符须在单引号内填写，默认（空）使用逗号分隔  </p><h3 id="字符串对象"><a href="#字符串对象" class="headerlink" title="字符串对象"></a>字符串对象</h3><h4 id="基本包装类型"><a href="#基本包装类型" class="headerlink" title="基本包装类型"></a>基本包装类型</h4><p>基本包装类型：把简单数据类型包装成了复杂数据类型<br>js提供了三个特殊引用类型：string，number和boolean  </p><h4 id="字符串不可变"><a href="#字符串不可变" class="headerlink" title="字符串不可变"></a>字符串不可变</h4><p>变量在有值的基础上重新赋值之后，原来的值不会被新值覆盖，新旧两个值都在内存中  </p><h4 id="根据字符返回位置"><a href="#根据字符返回位置" class="headerlink" title="根据字符返回位置"></a>根据字符返回位置</h4><p>*字符串的所有方法，都不会修改字符串本身，操作完成会返回一个新的字符串<br>indexOf(要查找的字符，[起始位置])：从规定起始位置开始向后查找，默认从第一个字符开始<br>unindexOf（要查找的字符，[起始位置]）：从规定起始位置开始向前查找，默认从最后一个字符开始  </p><pre class=" language-md"><code class="language-md">案例：查找字符串"abcoefoxyozzopp"中所有"o"出现的位置以及次数</code></pre><h4 id="根据位置返回字符串"><a href="#根据位置返回字符串" class="headerlink" title="根据位置返回字符串"></a>根据位置返回字符串</h4><p>charat(参数)：返回对应位置的字符<br>string(参数)：返回对应位置字符的ascii值，通常用于判断按键操作<br>str[参数]：H5新增  </p><pre class=" language-md"><code class="language-md">案例：判断字符串"abcoefoxyozzopp"中出现最多的字符，并统计出现此数补充：对象名['属性名']：可以判断该对象中有无该属性</code></pre><p>参考：<a href="https://www.bilibili.com/video/BV1Sy4y1C7ha?p=183">统计出现次数最多的字符</a>  </p><h4 id="字符串拼接与截取"><a href="#字符串拼接与截取" class="headerlink" title="字符串拼接与截取"></a>字符串拼接与截取</h4><p>concat(str1,[str2,…])：用于在后面拼接两个或多个字符串，等效于使用+，后者用的更多<br>substr(参数1,参数2)：从参数1开始，参数2为要取的个数<br>slice(参数1,end)：从参数1开始，截取到end，end不取出<br>substring(参数1,end)：从参数1开始，截取到end，end不取出；不接收负值  </p><h4 id="替换字符串与字符串转换数组"><a href="#替换字符串与字符串转换数组" class="headerlink" title="替换字符串与字符串转换数组"></a>替换字符串与字符串转换数组</h4><p>replace(字符1,字符2)：将字符1替换为字符2；只将从左到右开始第一个匹配的字符替换掉<br>split(‘分隔符’)：将字符串转换为数组，分隔符根据字符串中的的分隔对应；与join的返回值相对应<br>eq：  </p><pre class=" language-javascript"><code class="language-javascript">str<span class="token operator">=</span><span class="token string">'red,black,yello,blue'</span><span class="token punctuation">;</span>str<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">','</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//或</span>str2<span class="token operator">=</span><span class="token string">'red&amp;black&amp;yello&amp;blue'</span><span class="token punctuation">;</span>str2<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'&amp;'</span><span class="token punctuation">)</span></code></pre><h2 id="简单数据类型与复杂数据类型"><a href="#简单数据类型与复杂数据类型" class="headerlink" title="简单数据类型与复杂数据类型"></a>简单数据类型与复杂数据类型</h2><p>基本数据类型或值类型，复杂类型又称为引用类型。<br>值类型：string，number，boolean，undefined，null（比较特殊，null的返回值为object）<br>引用类型：new创建的对象（系统对象，自定义对象），object，array，date等  </p><h3 id="堆栈"><a href="#堆栈" class="headerlink" title="堆栈"></a>堆栈</h3><p>空间分配：<br>简单数据类型存放在栈中，复杂数据类型放在堆中。<a href="https://www.bilibili.com/video/BV1Sy4y1C7ha?p=188">讲解参考</a><br>Tip：js中没有堆栈概念，只是为了便于理解代码执行，学习其他编程语言<br><font color="red">这部分内容如果感兴趣可以参考C语言的数据结构相关知识</font><br><a href="https://www.bilibili.com/video/BV1Sy4y1C7ha?p=189">简单数据类型参数传递</a><br><a href="https://www.bilibili.com/video/BV1Sy4y1C7ha?p=190">复杂数据类型参数传递</a></p><h2 id="apis"><a href="#apis" class="headerlink" title="apis"></a>apis</h2><p>api:一种工具，是以接口的方式实现的。<br>web api：是针对浏览器的页面元素的api。<br>详细的api接口也可在mdn中查找</p><h3 id="dom"><a href="#dom" class="headerlink" title="dom"></a>dom</h3><p>处理页面标记语言的标准接口<br>专有名词：树<br>文档，一个页面就是一个文档，用document表示<br>元素，页面中所有的标签都是元素，用element表示<br>节点，页面中所有的内容都是节点，用node表示</p><h3 id="获取元素"><a href="#获取元素" class="headerlink" title="获取元素"></a>获取元素</h3><h4 id="getElementByID-id"><a href="#getElementByID-id" class="headerlink" title="getElementByID(id)"></a>getElementByID(id)</h4><p>获取元素对象</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>time<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>asdfasdf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">var</span> timer <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementByID</span><span class="token punctuation">(</span><span class="token string">'time'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><p>Tip：因为html是从上往下加载的，所以要先写标签，然后在下面写script；id是大小写敏感的字符串；返回的是一个元素对象；console.dir()打印返回的元素对应的对象，可查看里面的属性和方法</p><h4 id="getElementsByTagName"><a href="#getElementsByTagName" class="headerlink" title="getElementsByTagName()"></a>getElementsByTagName()</h4><p>获取带有指定标签名的对象的集合</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>空山新雨后，自挂东南枝。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>欲穷千里目，自挂东南枝。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>爹娘闻女来，自挂东南枝。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>洞房花烛夜，自挂东南枝。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>天生我材必有用，各种自挂东南枝。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>人生在世不如意，不如自挂东南枝。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ol</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ol<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>空山新雨后，自挂东南枝。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>欲穷千里目，自挂东南枝。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>爹娘闻女来，自挂东南枝。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>洞房花烛夜，自挂东南枝。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>天生我材必有用，各种自挂东南枝。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>人生在世不如意，不如自挂东南枝。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ol</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">var</span> lis <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">'li'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>lis<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> olis <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">'ol'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>olis<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">'li'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//还可以获取某个元素(父元素)内部的所有指定标签名的子元素element.getElementsByTagName(标签名);</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><p>Tig：返回的是获取元素对象的集合，以伪数组的方式存储（页面没有标签就是空伪数组）；可采用遍历的方式输出元素对象里面的对象；得到的元素的对象是动态的；还可以获取某个元素(父元素)内部的所有指定标签名的子元素element.getElementsByTagName(标签名);eq：ul.getElementsByTagName(‘li’);父元素必须是单个对象（必须指明具体是哪一个元素）获取的时候不包括父元素自己，如想实现使用父元素名，可以在父元素标签处设置一个同名id；</p><h4 id="H5新增获取元素方法"><a href="#H5新增获取元素方法" class="headerlink" title="H5新增获取元素方法"></a>H5新增获取元素方法</h4><p>1、document.getElementsByClassName(‘类名’);：根据class类名放回元素集合</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cul<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>空山新雨后，自挂东南枝。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>欲穷千里目，自挂东南枝。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>爹娘闻女来，自挂东南枝。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>洞房花烛夜，自挂东南枝。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>天生我材必有用，各种自挂东南枝。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>人生在世不如意，不如自挂东南枝。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">var</span> lis <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByClassName</span><span class="token punctuation">(</span><span class="token string">'cul'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>lis<span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><p>2、document.querySelector(‘选择器’);：根据指定选择器返回<font color="red">第一个</font>元素对象</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>zgdnz<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>空山新雨后，自挂东南枝。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>欲穷千里目，自挂东南枝。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>爹娘闻女来，自挂东南枝。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>洞房花烛夜，自挂东南枝。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>zgdnz<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>天生我材必有用，各种自挂东南枝。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>人生得意须尽欢，不如自挂东南枝。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>SB<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>Are you ready kids?<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>br</span><span class="token punctuation">></span></span>准备好了吗？孩子们？<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>Aye, aye, captain!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>br</span><span class="token punctuation">></span></span>是的，船长<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>I can't hear you!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>br</span><span class="token punctuation">></span></span>太小声罗<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>Aye, aye, captain!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>br</span><span class="token punctuation">></span></span>是的，船长<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>Ooh<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>br</span><span class="token punctuation">></span></span>哦~<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>Who lives in a pineapple under the sea?<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>br</span><span class="token punctuation">></span></span>是谁住在深海的大菠萝里<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>SpongeBob SquarePants!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>br</span><span class="token punctuation">></span></span>海绵宝宝<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>Absorbent and yellow and porous is he!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>br</span><span class="token punctuation">></span></span>方方黄黄伸缩自如<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>SpongeBob SquarePants!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>br</span><span class="token punctuation">></span></span>海绵宝宝<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>If nautical nonsense be something you wish!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>br</span><span class="token punctuation">></span></span>如果四处探险是你的愿望<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>SpongeBob SquarePants!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>br</span><span class="token punctuation">></span></span>海绵宝宝<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>Then drop on the deck and flop like a fish!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>br</span><span class="token punctuation">></span></span>那就敲敲甲板让大鱼开路<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>SpongeBob SquarePants!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>br</span><span class="token punctuation">></span></span>海绵宝宝<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>Ready?<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>br</span><span class="token punctuation">></span></span>准备<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>SpongeBob SquarePants!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>br</span><span class="token punctuation">></span></span>海绵宝宝<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>SpongeBob SquarePants!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>br</span><span class="token punctuation">></span></span>海绵宝宝<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>SpongeBob SquarePants!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>br</span><span class="token punctuation">></span></span>海绵宝宝<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>SpongeBob SquarePants!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>br</span><span class="token punctuation">></span></span>海绵宝宝<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>Ha, ha, ha<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>br</span><span class="token punctuation">></span></span>哈哈<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>Ha, ha, ha<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>br</span><span class="token punctuation">></span></span>哈哈<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">var</span> lis <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByClassName</span><span class="token punctuation">(</span><span class="token string">'zgdnz'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>lis<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> lul <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.zgdnz'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>lul<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> sb<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'#SB'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>sb<span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><p>Tip：注意在填写选择器时，以class命名的，使用 . + 名称，使用id命名的，使用 # + 名称；<br>3、document.querySelectorAll();：返回指定选择器的所有元素对象集合（伪数组）</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>zgdnz<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>空山新雨后，自挂东南枝。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>欲穷千里目，自挂东南枝。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>爹娘闻女来，自挂东南枝。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>洞房花烛夜，自挂东南枝。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>zgdnz<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>天生我材必有用，各种自挂东南枝。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>人生得意须尽欢，不如自挂东南枝。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">var</span> lis <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByClassName</span><span class="token punctuation">(</span><span class="token string">'zgdnz'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>lis<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> lul <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.zgdnz'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>lul<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> zgdnzall<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">'.zgdnz'</span><span class="token punctuation">)</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>zgdnzall<span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><h4 id="获取body或html中的元素"><a href="#获取body或html中的元素" class="headerlink" title="获取body或html中的元素"></a>获取body或html中的元素</h4><p>获取body元素对象<br>document.body<br>获取html元素对象<br>document.documentElement</p><h4 id="事件三要素"><a href="#事件三要素" class="headerlink" title="事件三要素"></a>事件三要素</h4><p>事件源，事件类型，事件处理程序</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>空山新雨后<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>       <span class="token comment" spellcheck="true">&lt;!-- 事件源 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">var</span> btn<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'btn'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//事件类型</span>    btn<span class="token punctuation">.</span>onclick <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'自挂东南枝。'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>   <span class="token comment" spellcheck="true">//事件处理程序</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><h4 id="执行事件过程"><a href="#执行事件过程" class="headerlink" title="执行事件过程"></a>执行事件过程</h4><p>1获取事件源<br>2注册事件（绑定事件）<br>3添加事件处理程序</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>空山新雨后<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>       <span class="token comment" spellcheck="true">&lt;!-- 事件源 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">var</span> btn<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'btn'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//获取事件源</span>    btn<span class="token punctuation">.</span>onclick<span class="token comment" spellcheck="true">/*绑定事件，注册事件*/</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'自挂东南枝。'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>   <span class="token comment" spellcheck="true">//添加事件处理程序</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><h4 id="操作元素-修改元素内容"><a href="#操作元素-修改元素内容" class="headerlink" title="操作元素-修改元素内容"></a>操作元素-修改元素内容</h4><p>element.innerText：从起始位置到终止位置的内容，但他会去除html标签，同时空格和换行也会去掉（不识别html标签）</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>空山新雨后，<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>__________。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">var</span> btn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'button'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> div <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    btn<span class="token punctuation">.</span>onclick <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        div<span class="token punctuation">.</span>innerText <span class="token operator">=</span> <span class="token string">'自挂东南枝。'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><p>元素可以不用添加事件，直接对element.innerText进行赋值</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>空山新雨后，<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>__________。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">var</span> btn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'button'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> div <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    div<span class="token punctuation">.</span>innerText <span class="token operator">=</span> <span class="token string">'直接自挂东南枝。'</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//可直接调用</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><p>element.innerText：从起始位置到终止位置的内容，包含html标签，同时保留空格和换行（识别html标签）</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>空山新雨后，<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>__________。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">var</span> btn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'button'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> div <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    btn<span class="token punctuation">.</span>onclick <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        div<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">'&lt;strong>自挂东南枝。&lt;/strong>'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//使用innerHTML</span>    <span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><h4 id="innerText和innerHTML的区别"><a href="#innerText和innerHTML的区别" class="headerlink" title="innerText和innerHTML的区别"></a>innerText和innerHTML的区别</h4><p>element.innerText非官方发布的，不识别html标签；element.innerHTML是W3C组织推荐的，识别html标签（例子见上）。<br>这两个属性是可读写的，可以获取元素里面的内容，但是element.innerText会去除html标签，同时空格和换行也会去掉，element.innerHTML会保留html标签、空格和换行</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>__________。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>    spongebob    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>SquarePants<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">var</span> div <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> p<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'p'</span><span class="token punctuation">)</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>innerText<span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>div<span class="token punctuation">.</span>innerHTML<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//可以尝试将最后两行中p和div换换位置看一下效果</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><h4 id="操作元素-修改元素属性"><a href="#操作元素-修改元素属性" class="headerlink" title="操作元素-修改元素属性"></a>操作元素-修改元素属性</h4><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>change<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>改为B站链接<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://www.baidu.com<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>百度一下，你就知道<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">var</span> btn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'change'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> ln <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    btn<span class="token punctuation">.</span>onclick <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>ln<span class="token punctuation">.</span>innerHTML<span class="token operator">===</span><span class="token string">'百度一下，你就知道'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//这里加了一个判断，通过判断是否与默认值相同来改变属性值</span>            ln<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">'哔哩哔哩'</span><span class="token punctuation">;</span>            ln<span class="token punctuation">.</span>href <span class="token operator">=</span> <span class="token string">'https://wwww.bilibili.com'</span><span class="token punctuation">;</span>            btn<span class="token punctuation">.</span>innerHTML<span class="token operator">=</span><span class="token string">'改为百度链接'</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            ln<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">'百度一下，你就知道'</span><span class="token punctuation">;</span>            ln<span class="token punctuation">.</span>href <span class="token operator">=</span> <span class="token string">'https://www.baidu.com'</span><span class="token punctuation">;</span>            btn<span class="token punctuation">.</span>innerHTML<span class="token operator">=</span><span class="token string">'改为B站链接'</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><pre class=" language-md"><code class="language-md">案例：分时问候通过不同的时间来改变不同的图片和问候语上午访问显示上午图片，显示上午好下午访问显示下午图片，显示下午好晚上访问显示晚上图片，显示晚上好</code></pre><p><a href="https://www.bilibili.com/video/BV1Sy4y1C7ha?p=205">案例参考</a></p><h4 id="操作元素-修改表单属性"><a href="#操作元素-修改表单属性" class="headerlink" title="操作元素-修改表单属性"></a>操作元素-修改表单属性</h4><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>按钮<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ipt<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>哈喽哇！<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">var</span> btn<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'button'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> ipt<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'ipt'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     btn<span class="token punctuation">.</span>onclick<span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        ipt<span class="token punctuation">.</span>value<span class="token operator">=</span><span class="token string">'客户，感受我们的下葬服务吧！'</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><p>可以发现，前面修改显示内容都是用innerHTML或innerText修改，但是表单内容是通过修改特定的属性值（value）来实现的，前者都是双标签，后者为单标签。<br>禁用按钮</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>按钮<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ipt<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>哈喽哇！<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">var</span> btn<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'button'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> ipt<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'ipt'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     btn<span class="token punctuation">.</span>onclick<span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        ipt<span class="token punctuation">.</span>value<span class="token operator">=</span><span class="token string">'客户，感受我们的下葬服务吧！'</span><span class="token punctuation">;</span>        btn<span class="token punctuation">.</span>disabled <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//禁用按钮</span>     <span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><p>this.disabled = true;也可实现相同的功能，this指向的是事件的调用者，上例中指向的就是btn</p><pre class=" language-md"><code class="language-md">案例：密文显示输入密码功能分析：用户名输入时正常显示，密码输入时默认隐藏，但有显示\隐藏切换按钮</code></pre><p><a href="https://www.bilibili.com/video/BV1Sy4y1C7ha?p=207">参考视频</a></p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>pwd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>tip<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>显示<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token comment" spellcheck="true">// var flag = 0;      这个变量是另一种方法的前置，详情在下面</span>    <span class="token keyword">var</span> ipt <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'pwd'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> btn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'tip'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    btn<span class="token punctuation">.</span>onclick <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>ipt<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">'password'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            ipt<span class="token punctuation">.</span>type <span class="token operator">=</span> <span class="token string">'text'</span><span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">'隐藏'</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            ipt<span class="token punctuation">.</span>type <span class="token operator">=</span> <span class="token string">'password'</span><span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">'显示'</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//这里可以换成另一个方式，使用一个变量来控制判断条件，注意这个变量要在全局下声明</span>        <span class="token comment" spellcheck="true">// if (flag == 0) {</span>        <span class="token comment" spellcheck="true">//     ipt.type = 'text';</span>        <span class="token comment" spellcheck="true">//     this.innerHTML = '隐藏';</span>        <span class="token comment" spellcheck="true">//     flag = 1;</span>        <span class="token comment" spellcheck="true">// } else {</span>        <span class="token comment" spellcheck="true">//     ipt.type = 'password';</span>        <span class="token comment" spellcheck="true">//     this.innerHTML = '显示';</span>        <span class="token comment" spellcheck="true">//     flag = 0;</span>        <span class="token comment" spellcheck="true">//  }</span>    <span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><h4 id="操作元素-修改样式属性"><a href="#操作元素-修改样式属性" class="headerlink" title="操作元素-修改样式属性"></a>操作元素-修改样式属性</h4><p>element.style行内样式操作</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">        <span class="token selector">div</span><span class="token punctuation">{</span>            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">200</span>px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">200</span>px<span class="token punctuation">;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>div<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token keyword">var</span> div<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        div<span class="token punctuation">.</span>onclick<span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>backgroundColor<span class="token operator">=</span><span class="token string">'yellow'</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></code></pre><p>行内样式优先级高，适用于样式修改较少，实现功能简单的情况</p><pre class=" language-md"><code class="language-md">案例：关闭图片思路：利用css的显示和隐藏：display:none隐藏元素；display:block显示元素</code></pre><p><a href="https://www.bilibili.com/video/BV1Sy4y1C7ha?p=210">参考视频</a></p><pre class=" language-md"><code class="language-md">案例：循环精灵图思路分析：精灵图排列要有顺序，一般需要竖向排列，然后使用for循环</code></pre><p><a href="https://www.bilibili.com/video/BV1Sy4y1C7ha?p=211">参考视频</a></p><pre class=" language-md"><code class="language-md">案例：显示\隐藏文本框文字</code></pre><p><a href="https://www.bilibili.com/video/BV1Sy4y1C7ha?p=212">参考视频</a><br>element.className类名样式操作</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">        <span class="token selector">div</span><span class="token punctuation">{</span>            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">200</span>px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">200</span>px<span class="token punctuation">;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token class">.change</span></span><span class="token punctuation">{</span>                   <span class="token comment" spellcheck="true">/* 引用class类名以.开头 */</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> yellow<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>d1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token keyword">var</span> div<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'d1'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        d1<span class="token punctuation">.</span>onclick<span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>className<span class="token operator">=</span><span class="token string">'change'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">/* 使用element.className调用类为其元素使用 */</span>        <span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></code></pre><pre class=" language-md"><code class="language-md">案例：密码框格式提示正误思路分析：1，焦点获得和焦点失去显示相应的提示2，输入字符符合要求后显示正确提示，不符合要求提示相应不符合要求的信息</code></pre><h4 id="小结练习"><a href="#小结练习" class="headerlink" title="小结练习"></a>小结练习</h4><pre class=" language-md"><code class="language-md">1.登陆界面账号\密码显示隐藏内容。2.京东关闭广告（直接隐藏）3.新浪下拉菜单（鼠标悬浮显示菜单）4.页面开关灯</code></pre><h4 id="排他思路"><a href="#排他思路" class="headerlink" title="排他思路"></a>排他思路</h4><p>如果有同一组元素，想让他们实现同一个样式（功能），但是每次生效的都是同组中的某一个元素时<br>先把其他元素的样式（功能）清空，再进行某一个元素添加某个样式（功能）<br>利用循环</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>按钮1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>按钮2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>按钮3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>按钮4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>按钮5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">var</span> btn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">'button'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> btn<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        btn<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>onclick <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> btn<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                btn<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>backgroundColor <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>backgroundColor <span class="token operator">=</span> <span class="token string">'pink'</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><p>案例1：百度换肤</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">        <span class="token selector">body</span><span class="token punctuation">{</span>            <span class="token property">background-size</span><span class="token punctuation">:</span> <span class="token number">1920</span>px,<span class="token number">1080</span>px<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector">img </span><span class="token punctuation">{</span>            <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">70</span>px<span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">140</span>px<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img/2098/01.jpg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img/2098/02.jpg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img/2098/03.jpg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img/2098/04.jpg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img/2098/05.jpg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img/2098/06.jpg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token keyword">var</span> bgimg <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">'img'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> bg <span class="token operator">=</span> document<span class="token punctuation">.</span>body<span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> bgimg<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            bgimg<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>onclick <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span> <span class="token punctuation">;</span>i<span class="token operator">&lt;</span>bgimg<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                    bg<span class="token punctuation">.</span>background<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                bg<span class="token punctuation">.</span>background<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>src<span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></code></pre><!-- 案例2：表格隔行变色：鼠标经过（onmouseover经过,onmouseout离开）某个单元格时，该单元格所在行上的所有单元格都会变色，表头不变色```html```表单全选和取消全选样例![表单全选和取消全选](img/Front-end/P219.png)```html```[P219](https://www.bilibili.com/video/BV1Sy4y1C7ha?p=219)暂停，倒回去html+css，完事再回来 --><p>（未完待续……）<br><strong>更多内容：</strong> </p><ul><li><a href="http://localhost:4000/2022/03/23/html/">HTML 教程</a></li><li><a href="http://localhost:4000/2022/03/23/css/">CSS 梳理</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 前端 </tag>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>梦境 | 偷鸡不成</title>
      <link href="/2022/03/12/0312/"/>
      <url>/2022/03/12/0312/</url>
      
        <content type="html"><![CDATA[<p>  <font color="#B2B2B2">哈哈……我这说的至少一个月一更变成拖更了……没办法精力太少不够用，我现在都想是不是我真的病了，我都想去上医院挂个中医看看是不是我有毛病了，太爱睡觉了，办公室里的人人家中午不眯一会都没事，我这中午不想法眯一会下儿午魂都没了，我估计大概率我是气血虚，找机会得挂个号看看中医调调了……</font><br><br><br>  我的手机用了四年了，性能有点跟不上了，而且续航也随着系统的更新出现了成反比增长的体验，本来是去年就想换了，但是奈何高通把骁龙888进行了一波反向优化，把我给整不会了，想着那就等一年吧，今天新的芯片新骁龙8，实际一测，还不如888呢，合着即835旗舰之后865旗舰有成钉子户了，但是865旗舰的机子不太好买了，折了个中，买了个870机子，两千出头，比我准备淘汰的机子还便宜700多……<br>  但是国内厂商给了我一波教育，他们用实际行动证明了什么叫学好不容易学坏一出溜，不给充电头不给充电线，我还得根据手机的功率买个充电头，还有充电线……<br>  匹配我买的手机的充电头是个33w的，我就进官方店铺里面找，之前了解过这个33w的充电头是89块，但是这次一进到商品页面变成单价一块了，然后我点进去一口气买了10个，然后我还截图留录屏做证据，还有他们商品页上乱七八糟的协议承诺啥的留作证据，心想到时候恢复原价我就69卖出去，到了付款界面，变成单价11了，我犹豫了不到一秒，果断付完款，静等发货。看着我的订单我这个乐啊，我寻思上回xxx的事我没赶上，这回赶上了我不高低搂一把？我回到商品页面，一看已经回到79的价格了，又看了一下是活动，优惠了10块，心想我69原装的往出卖我就不信有人不买，老子也包邮，就少捞点呗。由于太兴奋了，又去看了看订单，结果显示我只买了5个……这时我有了一种不好的预感，我看了一下价格，从原来的110变成了435了，我一看单价，89块，我正要找客服理论，心想即使到手了又能怎样，怪累的，直接退了的了，准备退单，进到订单页面，现实总价257，我本以为是优惠增加了或者是单价下调了，核对之后都没有，最后我详细看了一下订单，显示我只买了3个……</p><img src="../../../../medias/reward/greenmp.png" width="500px">]]></content>
      
      
      <categories>
          
          <category> 日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>闲聊 | 年结</title>
      <link href="/2022/01/05/0105/"/>
      <url>/2022/01/05/0105/</url>
      
        <content type="html"><![CDATA[<p>  <font color="#B2B2B2">不要想着我会写网上那种规规矩矩的格式，我做不到，如果有机会我也不会用那种格式，那跟抄没什么区别。</font><br><br><br>  2021对我来说挺操蛋的，本来能够尽早完成的事情硬是给我整到2021年的最后一天才完事，真就不到最后不罢休，上课踩点考试及格啊……<br>过去的一年其实没什么值得总结的，因为本身也没什么规划，也没做什么事情，况且规划这个东西对于我来说就是个累赘，你给我规划，我就越想拖，可能是叛逆的劲还没过去吧，反正我习惯一边走一边看，而不是一边看一边走，喜欢在自己的节奏里，我不干扰你，你也别过来干扰我，你要是干扰我，把我惹急了，那我就不敢保证后果是什么，小题大做的事我不是没干过。<br>  今年呢，其实有想法，但是我不敢保证我能不能执行或者一直执行。一是减肥，我是属于男性平均身高，164斤的体重，小小胖子，而且我原本是没有什么肌肉的，所以是一身的虚肉，但是我觉得我身上的虚肉多说也就小10斤，捡到150也就差不多了，再往下减可能就不是那么容易得了。减肥是从1月4号开始的，我的餐谱其实没有什么特别大的改变，早餐本来是吃面包，现在改成了两个清水煮鸡蛋加一杯牛奶，中午不变点外卖，因为我不是单纯的坐办公室，需要一定的碳水摄入，而且本来我下午就容易犯困，中午不睡觉整个下午就彻底废了，晚上本来是点外卖，元旦那会想过自己做菜，但是打算先往后放一放，暂时先吃一些圣女果西红柿苹果之类这些水果，黄瓜彩椒这类的蔬菜，反正我家里给我拿来的大米又够吃一阵的了……<br>  去年呢，给自己的定的目标是多看看书，买了四本书，一年过去了，就读完了两本，一本是李诞的《候场》，一本是《弃猫》，说实话，李诞那本感觉还可以，比较符合我的阅读习惯，后面那本说实话，类似于中学课本中非常普通的短篇小说的延申版，写的挺长，但是阅读起来不是很连贯，不知道是不是因为翻译的问题，5星满我只能给3星，即使是村上春树写的。剩下的两本《东北游记》只看了第一章，也挺清汤寡水的，不太推荐，但是如果说对东北文学感兴趣的话，可以看看班宇或者双雪涛的作品，极其推荐双雪涛的《平原上的摩西》……<br>  来到北京之后就没进过电影院，只是在住处把经典传颂的电影看完了，《怦然心动》《阿甘正传》《海上钢琴师》，看完之后我一度陷入自我怀疑，是我不懂艺术吗？还是说这种影片就压根不是给我看的？影片里的东西我都能看懂，但是我觉得我说的这三个除了过程比较平缓没有什么吸引我的，也不是老电影没有一个吸引我的，《肖申克的救赎》我觉得还是不错的，还有经典的《教父》之类的我暂时不想看了，当然也可能是看完电影解说的原因，对了，我有一个朋友每年圣诞节都会看一个叫《东京教父》的电影，说是对他来说看完就对这个时间有一种包容，对他的心灵有一种疗愈的感觉，就会重新燃起对生活的希望，但是我没看出什么来，我也不剧透了，感兴趣的可以看一看。<br>  前面也说了，原计划要做饭的，但是因为精力有限，先往后推一推，至于为什么想做饭，因为每天的花销太大了，面食不好下手，大米饭简单，菜可以从简单的入手，比如土豆丝……朋友们，相信我，为了自己能在自己喜欢的领域多花点钱，学做饭</p><img src="../../../../medias/reward/greenmp.png" width="500px">]]></content>
      
      
      <categories>
          
          <category> 日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>写在前面</title>
      <link href="/2021/12/25/preface/"/>
      <url>/2021/12/25/preface/</url>
      
        <content type="html"><![CDATA[<p>  折腾了好几天，终于是把自己想要的东西搭起来了，今天下午一直在修补博客，以后我的一些学习随笔就有地方放了，日记我也会在这里发一遍，也会跟公众号同步，所以大家尽情放心。<br>  大家可能也看到了，网址是fishpond.vip，可能有人会很疑惑，为什么要用这个网址，而且公众号菜单也写的是“我的鱼塘”。翻译一下，<code>fish pond</code>中文译为养鱼池，我呢，会把我学到的东西，想要表达的东西，扔到这里，再加上我给我自己的定位，就相当于把<code>天天不干正事研究些乱七八糟八辈子用不到的东西</code>当作鱼，俗称<code>知识的尘埃</code>，这些鱼需要一个地方去放他，养他，毕竟是我亲手摸出来的，我得负责养，但是不能用盆，以后肯定越摸越多，得找个大一点的地方，那就是养鱼池了，所以我第一时间想到用fishpond.com作为我的域名，但是问题来了，这个域名被一个国外的类似二手交易平台给注册了，他们自称是交易物品是鱼，然后大家在里面互相挑选然后进行交易……嗯，就是现在鱼塘的运营方式，钓鱼花钱，想拿走钓上来的鱼还得掏钱……至于为什么用vip做一级域名，因为三个字母的就他的使用频率较高，比较好记，有人可能会想不是因为vip好听吗？好听的多了，但是敲键盘累手啊……<br>  正好今天是圣诞节，估计大家过的都挺好的，我反正是挺困的，睡了一下午，中间醒了好几次，但是就是困，没办法，今天哪都没去，我来北京一年半，哪都没去，我可佩服我自己了……不对，其实也算是去了一个地方，去了趟上海，看了场比赛，但是感觉巨亏，因为自己喜欢的队伍没赢，场馆离海边挺近的，也没去成。唉，我是挺佩服还有精力关注游戏甚至关注战队的人的，我认识一个28的人，还关注刀塔2的战队还有前段时间的比赛，我现在快对游戏提不起兴趣了，不然我也不会睡一下午……<br>  好了，就是简单介绍一下我博客的情况，顺便测试一下我暂时调整的功能是不是还正常，如果不出意外的话接下来我要大规模的在我的博客上发东西了，同时也但愿我的小站能坚挺下去，我觉得没问题！</p><img src="../../../../medias/reward/greenmp.png" width="500px">]]></content>
      
      
      <categories>
          
          <category> 日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网站更新日志</title>
      <link href="/2019/01/02/update/"/>
      <url>/2019/01/02/update/</url>
      
        <content type="html"><![CDATA[<h2 id="更新目录"><a href="#更新目录" class="headerlink" title="更新目录"></a>更新目录</h2><h3 id="v1-3"><a href="#v1-3" class="headerlink" title="v1.3"></a>v1.3</h3><h4 id="更改："><a href="#更改：" class="headerlink" title="更改："></a>更改：</h4><p>动态标题<br>关闭樱花飘落</p><h2 id="历史更新日志"><a href="#历史更新日志" class="headerlink" title="历史更新日志"></a>历史更新日志</h2><h3 id="v1-2"><a href="#v1-2" class="headerlink" title="v1.2"></a>v1.2</h3><h4 id="更改：-1"><a href="#更改：-1" class="headerlink" title="更改："></a>更改：</h4><p>公众号二维码位置<br>鼠标点击出现爱心变成随机正能量字词</p><h4 id="添加："><a href="#添加：" class="headerlink" title="添加："></a>添加：</h4><p>春季樱花飘落特效<br>页面开关灯<br>目录及其滚动条<br>动态标题栏</p><h3 id="v1-1"><a href="#v1-1" class="headerlink" title="v1.1:"></a>v1.1:</h3><h4 id="修复："><a href="#修复：" class="headerlink" title="修复："></a>修复：</h4><p>页脚左下侧的多余字符<br><img src="../../../../medias/BUG/1/bug1.png"></p><h4 id="优化："><a href="#优化：" class="headerlink" title="优化："></a>优化：</h4><p>首页社交按钮鼠标经过浮窗多余字符<br>文章页目录级数<br>点击文章卡片以及搜索后显示的链接以新标签页方式访问</p><h4 id="移除："><a href="#移除：" class="headerlink" title="移除："></a>移除：</h4><p>首页和文章的颜色遮罩<br>文章结尾右下角豆瓣分享链接</p><h4 id="更改：-2"><a href="#更改：-2" class="headerlink" title="更改："></a>更改：</h4><p>菜单栏和页脚的颜色和样式<br>页面下浏览进度条的颜色<br>动态色带背景颜色</p><h4 id="添加：-1"><a href="#添加：-1" class="headerlink" title="添加："></a>添加：</h4><p>首页微信公众号的社交按钮<br>文章结尾公众号推广线下物料图<br>网站样式内容更新公告</p><h3 id="v1-0："><a href="#v1-0：" class="headerlink" title="v1.0："></a>v1.0：</h3><h4 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h4><p>添加了代码高亮、搜索、中文转拼音链接、字数统计、emoji表情等插件</p><h4 id="移除"><a href="#移除" class="headerlink" title="移除"></a>移除</h4><p>多余社交按钮</p><h4 id="更改"><a href="#更改" class="headerlink" title="更改"></a>更改</h4><p>首页轮播图</p><h4 id="添加"><a href="#添加" class="headerlink" title="添加"></a>添加</h4><p>首页圣诞飘雪效果<br>背景调整为黑色<br>动态彩带效果</p>]]></content>
      
      
      <categories>
          
          <category> 日志 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日志 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>administrator availability</title>
      <link href="/2019/01/01/adminupdate/"/>
      <url>/2019/01/01/adminupdate/</url>
      
        <content type="html"><![CDATA[<h1 id="Update-Demo"><a href="#Update-Demo" class="headerlink" title="Update Demo"></a>Update Demo</h1><h2 id="v1-1"><a href="#v1-1" class="headerlink" title="v1.1"></a>v1.1</h2><p>_config.yml：socialLink中新增微信公众号字段mpweixin；toc字段补全标题识别码<br>matery.css：progress-bar下background中颜色值的更改；bg-color中注释掉原有代码，改为黑色透明度；注释掉bg-cover:after和.bg-cover:before,.bg-cover:after中的所有代码<br>layout.ejs：注释掉了ribbon.js的文件引用<br>social-link.ejs：新增微信公众号社交按钮<br>各个文章末尾新增微信公众号线下推广物料图(url:<code>![](../../../../medias/reward/greenmp.png)</code>)<br>可使用&lt;img src=””&gt;标签进行自定义图片大小和样式，比如上面的物料图可写成：<br><code>&lt;img src="../../../../medias/reward/greenmp.png" width="500px"&gt;</code><br>可直接写在文章文件（.md）中，显示效果如下：<br><img src="../../../../medias/reward/greenmp.png" width="500px"><br>index.ejs：文章卡片a标签中添加target属性，值为_blank<br>新增search.js和search.ejs中a标签的target属性值为_blank</p><h1 id="Historical-version-Demo"><a href="#Historical-version-Demo" class="headerlink" title="Historical version Demo"></a>Historical version Demo</h1><h2 id="v1-0"><a href="#v1-0" class="headerlink" title="v1.0"></a>v1.0</h2><p>在source目录下添加CNAME文件，内容为fishpond.vip</p><h3 id="hexo相关："><a href="#hexo相关：" class="headerlink" title="hexo相关："></a>hexo相关：</h3><h4 id="config-yml："><a href="#config-yml：" class="headerlink" title="_config.yml："></a>_config.yml：</h4><p>1.更改Site部分（title\subtitle\author\language\timezone）<br>2.更改URL部分中url地址为<code>https://jason-663.github.io</code>；新增root根目录字段（root: /）<br>3.更改theme字段为主题文件夹名hexo-theme-matery<br>4.更改Deployment部分</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">deploy</span><span class="token punctuation">:</span>  <span class="token key atrule">type</span><span class="token punctuation">:</span> git  <span class="token key atrule">repository</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//github.com/jason<span class="token punctuation">-</span>663/jason<span class="token punctuation">-</span>663.github.io  <span class="token key atrule">branch</span><span class="token punctuation">:</span> master</code></pre><p>5.新增插件部分：<br>（1）代码高亮插件hexo-prism-plugin</p><pre class=" language-yaml"><code class="language-yaml">插件安装代码：npm i <span class="token punctuation">-</span>S hexo<span class="token punctuation">-</span>prism<span class="token punctuation">-</span>plugin更改该文件下highlight.enable的值为false然后将以下内容添加到文件中<span class="token key atrule">prism_plugin</span><span class="token punctuation">:</span>  <span class="token key atrule">mode</span><span class="token punctuation">:</span> <span class="token string">'preprocess'</span>    <span class="token comment" spellcheck="true"># realtime/preprocess</span>  <span class="token key atrule">theme</span><span class="token punctuation">:</span> <span class="token string">'tomorrow'</span>  <span class="token key atrule">line_number</span><span class="token punctuation">:</span> <span class="token boolean important">false    </span><span class="token comment" spellcheck="true"># default false</span>  <span class="token key atrule">custom_css</span><span class="token punctuation">:</span></code></pre><p>（2）搜索插件hexo-generator-search</p><pre class=" language-yaml"><code class="language-yaml">插件安装代码：npm install hexo<span class="token punctuation">-</span>generator<span class="token punctuation">-</span>search <span class="token punctuation">-</span><span class="token punctuation">-</span>save将以下内容添加到文件中：<span class="token key atrule">search</span><span class="token punctuation">:</span><span class="token key atrule">path</span><span class="token punctuation">:</span> search.xml  <span class="token key atrule">field</span><span class="token punctuation">:</span> post</code></pre><p>（3）中文链接转拼音（可选的）</p><pre class=" language-yaml"><code class="language-yaml">插件安装代码：npm i hexo<span class="token punctuation">-</span>permalink<span class="token punctuation">-</span>pinyin <span class="token punctuation">-</span><span class="token punctuation">-</span>save将以下内容添加到文件中：<span class="token key atrule">permalink_pinyin</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">separator</span><span class="token punctuation">:</span> <span class="token string">'-'</span> <span class="token comment" spellcheck="true"># default: '-'</span></code></pre><p>（4）字数统计</p><pre class=" language-yaml"><code class="language-yaml">插件安装代码：npm i <span class="token punctuation">-</span><span class="token punctuation">-</span>save hexo<span class="token punctuation">-</span>wordcount然后只需在hexo<span class="token punctuation">-</span>theme<span class="token punctuation">-</span>matery主题下的 _config.yml 文件中，激活wordCount配置项即可</code></pre><p>（5）添加 RSS 订阅支持（可选的）</p><pre class=" language-yaml"><code class="language-yaml">将以下内容添加到文件中：<span class="token key atrule">feed</span><span class="token punctuation">:</span>  <span class="token key atrule">type</span><span class="token punctuation">:</span> atom  <span class="token key atrule">path</span><span class="token punctuation">:</span> atom.xml  <span class="token key atrule">limit</span><span class="token punctuation">:</span> <span class="token number">20</span>  <span class="token key atrule">hub</span><span class="token punctuation">:</span>  <span class="token key atrule">content</span><span class="token punctuation">:</span>  <span class="token key atrule">content_limit</span><span class="token punctuation">:</span> <span class="token number">140</span>  <span class="token key atrule">content_limit_delim</span><span class="token punctuation">:</span> <span class="token string">' '</span>  <span class="token key atrule">order_by</span><span class="token punctuation">:</span> <span class="token punctuation">-</span>date</code></pre><p>（6）Hexo 插件来支持emoji</p><pre class=" language-yaml"><code class="language-yaml">插件安装代码：npm install hexo<span class="token punctuation">-</span>filter<span class="token punctuation">-</span>github<span class="token punctuation">-</span>emojis <span class="token punctuation">-</span><span class="token punctuation">-</span>save将以下内容添加到文件中：<span class="token key atrule">githubEmojis</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">className</span><span class="token punctuation">:</span> github<span class="token punctuation">-</span>emoji  <span class="token key atrule">inject</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">styles</span><span class="token punctuation">:</span>  <span class="token key atrule">customEmojis</span><span class="token punctuation">:</span></code></pre><p>（7）安装图片懒加载插件</p><pre class=" language-yaml"><code class="language-yaml">插件安装代码：hexo<span class="token punctuation">-</span>lazyload<span class="token punctuation">-</span>image将以下内容添加到文件中：<span class="token key atrule">lazyload</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true </span>  <span class="token key atrule">onlypost</span><span class="token punctuation">:</span> <span class="token boolean important">false  </span><span class="token comment" spellcheck="true"># 是否只对文章的图片做懒加载</span>  <span class="token key atrule">loadingImg</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true"># eg ./images/loading.gif</span></code></pre><h3 id="matery主题"><a href="#matery主题" class="headerlink" title="matery主题"></a>matery主题</h3><h4 id="config-yml"><a href="#config-yml" class="headerlink" title="_config.yml"></a>_config.yml</h4><p>菜单项menu：移除（注释掉）Contact（留言板）功能，配置了菜单相关项：<br><code>首先需要在hexo插件下的source文件夹下创建对应的文件夹（下面的英文名），并在各个文件夹中创建index.md文件，然后在文件中写入下面的内容：</code><br>（1）标签（categories）页</p><pre class=" language-md"><code class="language-md">---title: categoriesdate: 2018-09-30 17:25:30type: "categories"layout: "categories"---</code></pre><p>（2）分类（tags）页</p><pre class=" language-md"><code class="language-md">---title: tagsdate: 2018-09-30 18:23:38type: "tags"layout: "tags"---</code></pre><p>（3）留言板（contact）页（可选）</p><pre class=" language-md"><code class="language-md">---title: contactdate: 2021-12-27 20:31:48type: "contact"layout: "contact"---</code></pre><p>（4）关于（about）页</p><pre class=" language-md"><code class="language-md">---title: aboutdate: 2018-09-30 17:25:30type: "about"layout: "about"---</code></pre><p>（5）友情链接（friends）页</p><pre class=" language-md"><code class="language-md">---title: friendsdate: 2018-12-12 21:25:30type: "friends"layout: "friends"---</code></pre><p>同时，在你的博客 source 目录下新建 _data 目录，在 _data 目录中新建 friends.json 文件，文件内容如下所例：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">[</span><span class="token punctuation">{</span>    <span class="token property">"avatar"</span><span class="token operator">:</span> <span class="token string">"http://image.luokangyuan.com/1_qq_27922023.jpg"</span><span class="token punctuation">,</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"码酱"</span><span class="token punctuation">,</span>    <span class="token property">"introduction"</span><span class="token operator">:</span> <span class="token string">"我不是大佬，只是在追寻大佬的脚步"</span><span class="token punctuation">,</span>    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"http://luokangyuan.com/"</span><span class="token punctuation">,</span>    <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"前去学习"</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>    <span class="token property">"avatar"</span><span class="token operator">:</span> <span class="token string">"http://image.luokangyuan.com/4027734.jpeg"</span><span class="token punctuation">,</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"闪烁之狐"</span><span class="token punctuation">,</span>    <span class="token property">"introduction"</span><span class="token operator">:</span> <span class="token string">"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬"</span><span class="token punctuation">,</span>    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"https://blinkfox.github.io/"</span><span class="token punctuation">,</span>    <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"前去学习"</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>    <span class="token property">"avatar"</span><span class="token operator">:</span> <span class="token string">"http://image.luokangyuan.com/avatar.jpg"</span><span class="token punctuation">,</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"ja_rome"</span><span class="token punctuation">,</span>    <span class="token property">"introduction"</span><span class="token operator">:</span> <span class="token string">"平凡的脚步也可以走出伟大的行程"</span><span class="token punctuation">,</span>    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"ttps://me.csdn.net/jlh912008548"</span><span class="token punctuation">,</span>    <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"前去学习"</span><span class="token punctuation">}</span><span class="token punctuation">]</span></code></pre><p>（6）网页访问异常（404）页</p><pre class=" language-md"><code class="language-md">---title: 404layout: "404"description: "Oops～，我崩溃了！找不到你想要的页面 :("---</code></pre><p><code>其他配置文件如音乐，视频等详见主题手册。</code><br>站点运行时间time（可选）：更改year字段值<br>我的梦想dream：关闭首页显示梦想名言相关配置<br>站点图标favicon：更改了网站标签图标和logo图标<br>首页第二个按钮（indexbtn）:关闭该按钮，可客制化<br>首页第二行个人信息（socialLink）：修改了个人信息相关配置<br>打赏功能（reward）：关闭文章末尾打赏功能，支持客制化<br>追加版权信息（copyright）:修改了大于十个字符追加版权信息<br>文章信息统计（postInfo）：打开了全部文章信息统计的开关（安装字数统计插件前提下）<br>页面效果开关：<br>（1）clicklove：鼠标点击操作出现爱心图标<br>（以下为LuckySec主题新增，基于matery主题）<br>（2）sakura：页面飘落樱花效果<br>樱花效果细节：第212行~第225行<br>（3）mouseStar：鼠标拖尾星星效果<br>（4）snowdown：雪花飘落效果，另在其他文件也有相关js，见下“首页”部分<br>“关于”页个人信息（profile）：完善“关于”页个人信息<br>“关于”页“我的项目”信息（myProjects）：关闭客制化我的项目<br>“关于”页“我的技能”信息（mySkills）：关闭客制化我的技能<br>“关于”页“我的相册”配置（myGallery）：客制化我的相册<br>评论模块（不推荐）：valine可使用<br>heard右上角fork me on github：（GitHublink）：关闭该功能<br>文章阅读密码验证（verifyPassword）：默认关闭，可参考配置手册针对性设置<br>站外文章分享模块（sharejs）：修改站外分享按钮<br>副标题（subtitle）：修改了sub1和sub2的值<br>CDN访问加速（jsDelivr）：第一次使用本功能，一定要先配置url，再<code>hexo cl &amp;&amp; hexo g &amp;&amp; hexo d</code>部署到GitHub的仓库，注意！必须是GitHub的仓库！URL配置规则（例子如下）： <code>https://cdn.jsdelivr.net/gh/你的GitHub用户名/你的仓库名</code><br>  注：配置了此项，就代表着本地调试的时候，网站依然会去GitHub请求资源（原来的资源），本地调试的时候记得将此项配置注释或者删除掉</p><h4 id="其他文件"><a href="#其他文件" class="headerlink" title="其他文件"></a>其他文件</h4><p>footer.ejs：删除（注释掉）底部社交信息（第105行）；修改底部网站信息及样式居中（第8行~第104行）<br>matery.css：修改了菜单栏和底部的颜色（.bg-color第243行）<br>index.ejs：添加了三种雪花的js<br>ribbon.js：添加了该文件(matery主题下的source/js中，和source/libs/ribbon中，并在)，为背景添加动态彩带，自带黑色背景</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
